{"version":3,"sources":["state/action-types/index.ts","components/SignUpForm/images/logo.svg","components/SignUpForm/SignUpForm.tsx","components/SignInForm/images/logo.svg","services/config.ts","services/landfills.ts","services/login.ts","services/regions.ts","services/driver.ts","services/depots.ts","services/vehicle.ts","services/order.ts","services/route.ts","state/action-creators/index.ts","state/reducers/landfillReducer.ts","state/reducers/userTokenReducer.ts","state/reducers/regionReducer.ts","state/reducers/setRegionReducer.ts","state/reducers/driverReducer.ts","state/reducers/depotReducer.ts","state/reducers/vehicleReducer.ts","state/reducers/orderReducer.ts","state/reducers/routeReducer.ts","state/reducers/index.ts","state/store.ts","components/SignInForm/SignInForm.tsx","components/LoginPage/Login.tsx","components/SideNav/images/icon.png","components/SideNav/SideNav.tsx","services/geocode.ts","components/EditLandfillForm.tsx","components/CreateLandfillForm.tsx","components/ConfirmDelete.tsx","components/LandfillList.tsx","components/GoogleMap.tsx","utils/enums.ts","components/LandfillPage/LandfillPage.tsx","components/CreateDriverForm.tsx","components/EditDriverForm.tsx","components/DriverList.tsx","components/TruckDriverPage/TruckDriverPage.tsx","components/CreateVehicleForm.tsx","components/EditVehicleForm.tsx","components/VehicleList.tsx","components/VehiclePage/VehiclePage.tsx","components/CreateOrderForm.tsx","components/OrderInfoForm.tsx","components/EditOrderForm.tsx","components/OrderList.tsx","components/OrderPage/OrderPage.tsx","components/RegionSelector.tsx","components/EditDepotForm.tsx","components/CreateDepotForm.tsx","components/DepotList.tsx","components/DepotPage/DepotPage.tsx","services/route_query.ts","components/RouteItemSummaryList.tsx","components/AddRouteItem.tsx","components/RouteLists.tsx","components/RoutePage/RoutePage.tsx","components/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["ActionType","SignUpForm","className","src","logo","alt","id","name","autoComplete","type","maxLength","placeholder","autoCapitalize","value","to","token","setToken","newToken","baseUrl","getByRegion","region","a","url","config","headers","Authorization","axios","get","response","data","getAll","console","log","put","landfill","deleteLandfill","delete","createNew","post","login","login_info","remove","driver","deleteDriver","depot","deleteDepot","vehicle","deleteVehicle","getByRegionAndDate","date","order","deleteOrder","truck_route","setRegion","window","localStorage","setItem","JSON","stringify","SET_REGION","initializeRegions","dispatch","regionService","regions","INIT_REGIONS","initializeLandfills","landfillService","landfills","INIT_LANDFILLS","initializeDrivers","driverService","drivers","INIT_DRIVERS","initializeDepots","depotService","depots","INIT_DEPOTS","initializeVehicles","vehicleService","vehicles","INIT_VEHICLES","initializeOrders","orderService","orders","INIT_ORDERS","initializeTruckRoutes","routeService","truck_routes","INIT_TRUCK_ROUTES","createLandfill","new_landfill","ADD_LANDFILL","createDepot","new_depot","ADD_DEPOT","createDriver","new_driver","ADD_DRIVER","createVehicle","new_vehicle","ADD_VEHICLE","createOrder","new_order","ADD_ORDER","createTruckRoute","input_truck_route","new_truck_route","ADD_TRUCK_ROUTE","createRegion","new_region","ADD_REGION","updateLandfill","updated_landfill","UPDATE_LANDFILL","updateDriver","updated_driver","UPDATE_DRIVER","updateVehicle","updated_vehicle","UPDATE_VEHICLE","updateDepot","updated_depot","UPDATE_DEPOT","updateOrder","updated_order","UPDATE_ORDER","updateTruckRoute","updated_truck_route","UPDATE_TRUCK_ROUTE","DELETE_LANDFILL","DELETE_DRIVER","DELETE_VEHICLE","DELETE_DEPOT","deleteRegion","DELETE_REGION","DELETE_ORDER","deleteTruckRoute","DELETE_TRUCK_ROUTE","loginUser","loginService","user_data","SET_USER_TOKEN","setUserToken","user_token","initialState","landfillReducer","state","action","changed_landfill","map","filter","userTokenReducer","regionReducer","setRegionReducer","driverReducer","changed_driver","depotReducer","changed_depot","vehicleReducer","changed_vehicle","orderReducer","changed_order","routeReducer","changed_truck_route","reducers","combineReducers","userToken","routes","store","createStore","compose","applyMiddleware","thunk","SignInForm","useDispatch","navigate","useNavigate","bindActionCreators","actionCreators","useState","email","setEmail","password","setPassword","handleLogin","event","preventDefault","username","M","toast","html","onSubmit","onChange","target","Login","path","element","SideNav","useEffect","AutoInit","href","icon","onClick","clear","address","street_split","street","split","parsed_street","reduce","prev_value","current_value","city","zipcode","process","status","lat_lng","results","geometry","location","formatted_response","message","error_message","EditLandfillForm","setActive","modal_1","document","querySelector","Modal","init","onCloseEnd","open","geo_modal","setName","setStreet","setCity","setState","toString","setZipcode","latitude","setLatitude","longitude","setLongitude","active","setStatus","lat","lng","setCoord","geoLocate","parseInt","geocode","modal_elem","getElementById","getInstance","htmlFor","parseFloat","user_id","region_id","close","submit","toFixed","CreateLandfillForm","useSelector","ConfirmDelete","React","modal","dismissible","handleConfirmation","TopSpacing","styled","div","LandfillList","setLandfill","editFormActive","setEditFormActive","createFormActive","setCreateFormActive","confirmDeleteActive","setConfirmDeleteActive","changeLandfillStatus","checked","editLandfill","onDeleteLandfill","landfill_icon","depot_icon","order_icon","render","Map","callback","dependencies","onIdle","children","style","options","ref","setMap","current","google","maps","setOptions","useDeepCompareMemoize","forEach","eventName","clearListeners","addListener","child","Marker","marker","setMarker","deepCompareEqualsForMaps","createCustomEqual","deepEqual","b","isLatLngLiteral","LatLng","equals","GoogleMap","DUMPSTER_SIZES","zoom","setZoom","center","setCenter","formatOrderLabel","dumpster_size","delivery_date","pickup_date","apiKey","e","latLng","m","getZoom","getCenter","toJSON","flexGrow","height","latlng","position","title","LandfillPage","CreateDriverForm","phone_number","setPhoneNumber","EditDriverForm","DriverList","setDriver","changeDriverStatus","editDriver","onDeleteDriver","TruckDriverPage","CreateVehicleForm","elems","querySelectorAll","FormSelect","license_number","setLicenseNumber","size","setSize","start_depot","setStartDepot","undefined","end_depot","setEndDepot","start_depot_id","end_depot_id","input","depot_id","selected_depot","find","setStartingDepot","selected","setEndingDepot","EditVehicleForm","VehicleList","setVehicle","changeVehicleStatus","editVehicle","onDeleteVehicle","VehiclePage","dumpster_sizes","TEN","FIFTEEN","TWENTY","THIRTY","FOURTY","FIFTY","CreateOrderForm","drop_off_date_picker","elem","body","Datepicker","setDefaultDate","onSelect","onDropOffDateChange","container","pickup_date_picker","onPickupDateChange","setDumpsterSize","drop_off_date","setDropOffDate","setPickupDate","special_instructions","setInstructions","delivery_completed","setDeliveryStatus","pickup_completed","setPickupStatus","toDateString","onDumpsterSelect","disabled","OrderInfoForm","EditOrderForm","OrderList","setOrder","orderInfoFormActive","setOrderInfoFormActive","editOrder","onDeleteOrder","info","Spacing","OrderStyle","OrderPage","show_depots","setDepots","show_landfills","setLandfills","Date","defaultDate","onDateChange","date_string","RegionSelector","setNewRegion","set_region","Dropdown","constrainWidth","add_region_modal","length","onCreateRegion","new_region_object","onDeleteRegion","width","EditDepotForm","CreateDepotForm","DepotList","setdepot","changedepotStatus","editdepot","onDeletedepot","DepotPage","createRoutes","route_query","getRoutes","analyzeRoute","route_items","DataHeader","RouteItemSummaryList","assignedOrders","num_of_routes","setNumberOfRoutes","Collapsible","computeRoutes","elements","getElementsByClassName","orders_to_analyze","i","current_element","order_id","order_to_analyze","push","RoutingService","route_response","current_route","route_objects","route_types","route_object_ids","route_object","distances","durations","total_distance","total_duration","orders_info","current_order","findIndex","order_type","order_info","customer_name","insertOrders","AddRouteItem","setAssignedOrders","truckRoute","selectRouteItem","route_item","new_assigned_orders","unassigned_orders","RouteLists","addRouteItemActive","setAddRouteItemActive","setTruckRoute","fillRouteItems","route_items_ids","route_item_id","route_type","analyzeRouteItems","RouteService","route_data","current_route_data","distance","duration","deleteRouteItem","index","route_list_id","getJSXObject","route_item_type","truck_route_id","new_id","Math","random","insertRouteItems","jsx_list","jsx_object","insertRouteData","hours","floor","remainder_seconds","minutes","minute_str","miles","addTruckRoute","addRouteItem","RoutePage","setDate","temp_assigned_orders","route_item_ids","j","assigned_order","HomePage","App","getItem","parsed_user_token","parse","parsed_region","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9c760ff0.chunk.js","sourcesContent":["export enum ActionType {\n    ADD_LANDFILL = 'add_landfill',\n    ADD_REGION = 'add_region',\n    ADD_DEPOT = 'add_depot',\n    ADD_DRIVER = 'add_driver',\n    ADD_VEHICLE = 'add_vehicle',\n    ADD_ORDER = 'add_order',\n    DELETE_LANDFILL = 'delete_landfill',\n    DELETE_REGION = 'delete_region',\n    DELETE_DEPOT = 'delete_depot',\n    DELETE_DRIVER = 'delete_driver',\n    DELETE_VEHICLE = 'delete_vehicle',\n    DELETE_ORDER = 'delete_order',\n    UPDATE_LANDFILL = 'update_landfill',\n    UPDATE_DRIVER = 'update_driver',\n    UPDATE_DEPOT = 'update_depot',\n    UPDATE_VEHICLE = 'update_vehicle',\n    UPDATE_ORDER = 'update_order',\n    INIT_LANDFILLS = 'init_landfills',\n    INIT_REGIONS = 'init_regions',\n    INIT_DRIVERS = 'init_drivers',\n    INIT_DEPOTS = 'init_depots',\n    INIT_VEHICLES = 'init_vehicles',\n    INIT_ORDERS = 'init_orders',\n    SET_USER_TOKEN = 'set_user_token',\n    SET_REGION = 'set_region',\n    ADD_TRUCK_ROUTE = 'ADD_TRUCK_ROUTE',\n    UPDATE_TRUCK_ROUTE = 'UPDATE_TRUCK_ROUTE',\n    DELETE_TRUCK_ROUTE = 'DELETE_TRUCK_ROUTE',\n    INIT_TRUCK_ROUTES = 'INIT_TRUCK_ROUTES'\n}","export default __webpack_public_path__ + \"static/media/logo.d7ce8e50.svg\";","import React from 'react'\nimport './SignUpForm.css'\nimport logo from './images/logo.svg'\nimport {\n    Link\n} from 'react-router-dom'\n\n\nconst SignUpForm = () => {\n    return (\n        <div className=\"sign-up-wrap\"><img src={logo} alt=\"\" />\n            <div className=\"w-form\">\n                <div className=\"placeholder-text-style-embed-code w-embed\">\n                </div>\n                <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" className=\"form\" autoComplete=\"off\"><input type=\"text\"\n                    className=\"text_field\" maxLength={256} name=\"name\" data-name=\"Name\" placeholder=\"Your name\"\n                    id=\"name\"/><input type=\"email\" className=\"text_field\" maxLength={256} name=\"email\" data-name=\"Email\"\n                    placeholder=\"Email Address\" id=\"email\" autoCapitalize=\"off\"/><input type=\"password\" className=\"text_field\"\n                    maxLength={256} name=\"Password\" data-name=\"Password\" placeholder=\"Password\" id=\"Password\" /><input\n                    type=\"submit\" value=\"Sign Up\" data-wait=\"Please wait...\" className=\"btn grey darken-1\"/></form>\n                <div className=\"w-form-done\">\n                    <div>Thank you! Your submission has been received!</div>\n                </div>\n                <div className=\"w-form-fail\">\n                    <div>Oops! Something went wrong while submitting the form.</div>\n                </div>\n            </div>\n            <div className=\"sign-up\">\n                <p className=\"paragraph\">Already have an account? <Link to=\"/SignIn\"\n                    className=\"link\">Log in</Link>.<br/></p>\n                <input className=\"input-field\" />\n            </div>\n        </div>\n    )\n}\n\nexport default SignUpForm","export default __webpack_public_path__ + \"static/media/logo.d7ce8e50.svg\";","\nexport let token = ''\n\nexport const setToken = (newToken:string | null) => {\n    token = `bearer ${newToken}`\n}\n","import axios from 'axios'\nimport { Landfill, NewLandfill, Region } from '../types'\nimport {token} from './config'\nconst baseUrl = '/landfills'\n\n\n\n\n// const getByRegion = async (region:Region) => {\n//     const url = baseUrl+`/region/${region.id}`\n//     const config = {\n//         headers: { Authorization: token },\n//     }\n//     const response = await axios.get(url, config)\n//     return response.data\n// }\n\n\nconst getByRegion = async (region:Region) => {\n    const url = baseUrl+`?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\nconst getAll = async () => {\n    if(token){\n        const config = {\n            headers: { Authorization: token },\n        }\n        console.log(config)\n        const response = await axios.get(baseUrl, config)\n        return response.data\n    }else{\n        throw('Cannot access landfills until the user token is present')\n    }\n}\n\nconst put = async (landfill: Landfill) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const id = landfill.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, landfill, config)\n    return landfill\n}\n\n\nconst deleteLandfill = async (landfill: Landfill) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = landfill.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (landfill: NewLandfill) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, landfill, config)\n    console.log(response.data)\n    return response.data\n}\n\nexport default { getAll, put, createNew, deleteLandfill, getByRegion }","import axios from 'axios'\nimport { LoginInfo, UserToken } from '../types'\n\n\nconst baseUrl = '/login'\n\n\n\nconst login = async (login_info:LoginInfo): Promise<UserToken> => {\n    const response = await axios.post(baseUrl, login_info)\n    return response.data\n}\n\nexport default { login }","\nimport axios from 'axios'\n// import RegionSelector from '../components/RegionSelector'\nimport { NewRegion, Region } from '../types'\nimport { token } from './config'\n\nconst baseUrl = '/regions'\n\n\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(baseUrl,config)\n    return response.data\n}\n\n\nconst createNew = async (region:NewRegion) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl,region,config)\n    return response.data\n}\n\nconst remove= async (region:Region) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const url = baseUrl+`/${region.id}`\n    const response = await axios.delete(url,config)\n    return response.data\n}\n\n\n\nexport default { getAll, createNew, remove }","import axios from 'axios'\nimport { Driver, NewDriver } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/drivers'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (driver: Driver) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = driver.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, driver, config)\n    return driver\n}\n\n\nconst deleteDriver = async (driver: Driver) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = driver.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (driver: NewDriver) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, driver, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteDriver, createNew, getByRegion }","import axios from 'axios'\nimport { Depot, NewDepot } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/depots'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (depot: Depot) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = depot.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, depot, config)\n    return depot\n}\n\n\nconst deleteDepot = async (depot: Depot) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = depot.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (depot: NewDepot) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, depot, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteDepot, createNew, getByRegion }","import axios from 'axios'\nimport { EditVehicle, NewVehicle, Vehicle } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/vehicles'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (vehicle: EditVehicle) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = vehicle.id\n    const url = baseUrl + `/${id}`\n    const response= await axios.put(url, vehicle, config)\n    return response.data\n}\n\n\nconst deleteVehicle = async (vehicle: Vehicle) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = vehicle.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (vehicle: NewVehicle) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, vehicle, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteVehicle, createNew, getByRegion }","import axios from 'axios'\nimport { NewOrder, Order } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/orders'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n// Need a specific server url for /orders/date\nconst getByRegionAndDate = async (region: Region, date: string) => {\n    const url = baseUrl + `/date/${region.id}/${date}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    console.log(response.data)\n    return response.data\n}\n\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (order: Order) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = order.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, order, config)\n    return order\n}\n\n\nconst deleteOrder = async (order: Order) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = order.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (order: NewOrder) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, order, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteOrder, createNew, getByRegion, getByRegionAndDate }","import axios from 'axios'\nimport { NewTruckRoute, TruckRoute } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/routes'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n// Need a specific server url for /orders/date\nconst getByRegionAndDate = async (region: Region, date: string) => {\n    const url = baseUrl + `/date/${region.id}/${date}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    console.log(response.data)\n    return response.data\n}\n\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (truck_route: TruckRoute) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = truck_route.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, truck_route, config)\n    return truck_route\n}\n\n\nconst deleteOrder = async (truck_route: TruckRoute) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = truck_route.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (truck_route: NewTruckRoute) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, truck_route, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteOrder, createNew, getByRegion, getByRegionAndDate }","import { ActionType } from '../action-types'\nimport { Action } from '../actions'\nimport landfillService from '../../services/landfills'\nimport loginService from '../../services/login'\nimport regionService from '../../services/regions'\nimport driverService from '../../services/driver'\nimport depotService from '../../services/depots'\nimport vehicleService from '../../services/vehicle'\nimport orderService from '../../services/order'\nimport routeService from '../../services/route'\nimport { Dispatch } from 'redux'\nimport { Depot, Driver, EditVehicle, Landfill, LoginInfo, NewDepot, NewDriver, NewLandfill, NewOrder, NewRegion, NewTruckRoute, NewVehicle, Order, Region, Route_Item, TruckRoute, UserToken, Vehicle } from '../../types'\nimport { setToken } from '../../services/config'\n\n\nexport const setRegion = (region: Region) => {\n    window.localStorage.setItem('region', JSON.stringify(region))\n    return {\n        type: ActionType.SET_REGION,\n        data: region\n    }\n}\n\n\nexport const initializeRegions = () => {\n    return async (dispatch: Dispatch<Action>) => {\n        const regions = await regionService.getAll()\n        dispatch({\n            type: ActionType.INIT_REGIONS,\n            data: regions\n        })\n    }\n}\n\n\n\nexport const initializeLandfills = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const landfills = await landfillService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_LANDFILLS,\n            data: landfills\n        })\n    }\n}\n\n\nexport const initializeDrivers = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const drivers = await driverService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_DRIVERS,\n            data: drivers\n        })\n    }\n}\n\n\n\nexport const initializeDepots = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const depots = await depotService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_DEPOTS,\n            data: depots\n        })\n    }\n}\n\nexport const initializeVehicles = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const vehicles = await vehicleService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_VEHICLES,\n            data: vehicles\n        })\n    }\n}\n\nexport const initializeOrders = (region:Region, date: string) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const orders = await orderService.getByRegionAndDate(region, date)\n        dispatch({\n            type: ActionType.INIT_ORDERS,\n            data: orders\n        })\n    }\n}\n\n\nexport const initializeTruckRoutes = (region:Region, date: string) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const truck_routes = await routeService.getByRegionAndDate(region, date)\n        dispatch({\n            type: ActionType.INIT_TRUCK_ROUTES,\n            data: truck_routes\n        })\n    }\n}\n\n\nexport const createLandfill = (landfill: NewLandfill) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_landfill = await landfillService.createNew(landfill)\n        dispatch({\n            type: ActionType.ADD_LANDFILL,\n            data: new_landfill,\n        })\n    }\n}\n\nexport const createDepot = (depot: NewDepot) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_depot = await depotService.createNew(depot)\n        dispatch({\n            type: ActionType.ADD_DEPOT,\n            data: new_depot,\n        })\n    }\n}\n\n\nexport const createDriver = (driver: NewDriver) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_driver = await driverService.createNew(driver)\n        dispatch({\n            type: ActionType.ADD_DRIVER,\n            data: new_driver,\n        })\n    }\n}\n\nexport const createVehicle = (vehicle: NewVehicle) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_vehicle = await vehicleService.createNew(vehicle)\n        dispatch({\n            type: ActionType.ADD_VEHICLE,\n            data: new_vehicle,\n        })\n    }\n}\n\nexport const createOrder = (order: NewOrder) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_order= await orderService.createNew(order)\n        dispatch({\n            type: ActionType.ADD_ORDER,\n            data: new_order,\n        })\n    }\n}\n\nexport const createTruckRoute = (input_truck_route: NewTruckRoute) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_truck_route= await routeService.createNew(input_truck_route) \n        dispatch({\n            type: ActionType.ADD_TRUCK_ROUTE,\n            data: new_truck_route,\n        })\n    }\n}\n\nexport const createRegion = (region:NewRegion) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_region = await regionService.createNew(region)\n        dispatch({\n            type: ActionType.ADD_REGION,\n            data: new_region,\n        })\n    }\n}\n\nexport const updateLandfill = (updated_landfill: Landfill) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const landfill = await landfillService.put(updated_landfill)\n        dispatch({\n            type: ActionType.UPDATE_LANDFILL,\n            data: landfill\n        })\n    }\n}\n\n\nexport const updateDriver = (updated_driver: Driver) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const driver = await driverService.put(updated_driver)\n        dispatch({\n            type: ActionType.UPDATE_DRIVER,\n            data: driver\n        })\n    }\n}\n\nexport const updateVehicle = (updated_vehicle: EditVehicle) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const vehicle = await vehicleService.put(updated_vehicle)\n        console.log('returned vehicle')\n        console.log(vehicle)\n        dispatch({\n            type: ActionType.UPDATE_VEHICLE,\n            data: vehicle\n        })\n    }\n}\n\n\nexport const updateDepot = (updated_depot: Depot) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const depot = await depotService.put(updated_depot)\n        dispatch({\n            type: ActionType.UPDATE_DEPOT,\n            data: depot\n        })\n    }\n}\n\nexport const updateOrder = (updated_order: Order) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const order = await orderService.put(updated_order)\n        dispatch({\n            type: ActionType.UPDATE_ORDER,\n            data: order\n        })\n    }\n}\n\n\nexport const updateTruckRoute = (updated_truck_route: TruckRoute) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const truck_route = await routeService.put(updated_truck_route)\n        dispatch({\n            type: ActionType.UPDATE_TRUCK_ROUTE,\n            data: truck_route\n        })\n    }\n}\n\nexport const deleteLandfill = (landfill: Landfill) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await landfillService.deleteLandfill(landfill)  \n        dispatch({\n            type: ActionType.DELETE_LANDFILL,\n            data: landfill\n        })\n    }\n}\n\nexport const deleteDriver = (driver: Driver) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await driverService.deleteDriver(driver)  \n        dispatch({\n            type: ActionType.DELETE_DRIVER,\n            data: driver\n        })\n    }\n}\n\nexport const deleteVehicle = (vehicle: Vehicle) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await vehicleService.deleteVehicle(vehicle)  \n        dispatch({\n            type: ActionType.DELETE_VEHICLE,\n            data: vehicle\n        })\n    }\n}\n\nexport const deleteDepot = (depot: Depot) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await depotService.deleteDepot(depot)  \n        dispatch({\n            type: ActionType.DELETE_DEPOT,\n            data: depot\n        })\n    }\n}\n\nexport const deleteRegion = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await regionService.remove(region)  \n        dispatch({\n            type: ActionType.DELETE_REGION,\n            data: region\n        })\n    }\n}\n\nexport const deleteOrder = (order:Order) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await orderService.deleteOrder(order)  \n        dispatch({\n            type: ActionType.DELETE_ORDER,\n            data: order\n        })\n    }\n}\n\nexport const deleteTruckRoute = (truck_route:TruckRoute) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await routeService.deleteOrder(truck_route)  \n        dispatch({\n            type: ActionType.DELETE_TRUCK_ROUTE,\n            data: truck_route\n        })\n    }\n}\n\nexport const loginUser = (login_info: LoginInfo) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const user_data: UserToken = await loginService.login(login_info)\n        window.localStorage.setItem('user_token', JSON.stringify(user_data))\n        setToken(user_data.token)\n        dispatch({\n            type: ActionType.SET_USER_TOKEN,\n            data: user_data\n        })\n    }\n}\n\n\nexport const setUserToken = (user_token: UserToken | null) => {\n    if(user_token){\n        console.log('setting the token for services to use')\n        setToken(user_token.token)\n    }else{\n        setToken(null)\n    }\n    return async (dispatch: Dispatch<Action>) => {\n        dispatch({\n            type: ActionType.SET_USER_TOKEN,\n            data: user_token\n        })\n    }\n}","\nimport { Landfill } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Landfill[] = []\n\n\nexport const landfillReducer = (state: Landfill[] = initialState, action: Action): Landfill[] => {\n    switch (action.type) {\n    case ActionType.ADD_LANDFILL:\n        return [...state, action.data]\n    case ActionType.UPDATE_LANDFILL: {\n        console.log('inside update landfill state')\n        const id = action.data.id\n        const changed_landfill = action.data\n        return state.map(landfill => landfill.id !== id ? landfill : changed_landfill)\n    }\n    case ActionType.DELETE_LANDFILL: {\n        console.log('inside delete landfill state')\n        const id = action.data.id\n        return state.filter(landfill => landfill.id !== id)\n    }\n    case ActionType.INIT_LANDFILLS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\n\n\n\n\nexport default landfillReducer\n\n\n","\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\nimport { UserToken } from '../../types'\n\n\n\n\nconst initialState = null\n\nexport const userTokenReducer = (state: UserToken | null = initialState, action: Action): UserToken | null => {\n    switch (action.type) {\n    case ActionType.SET_USER_TOKEN:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\n\n\nexport default userTokenReducer\n\n\n","\nimport { Region } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Array<Region> = []\n\n\nexport const regionReducer = (state: Region[] = initialState, action: Action): Region[] => {\n    switch (action.type) {\n    case ActionType.ADD_REGION:\n        return [...state, action.data]\n    case ActionType.DELETE_REGION:\n    {\n        const id = action.data.id\n        return state.filter(region => region.id !== id)\n    }\n    case ActionType.INIT_REGIONS:\n        return action.data\n\n    default:\n        return state\n    }\n}\n\n\n\n\n\n\nexport default regionReducer\n\n\n","\nimport { Region } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Region | null = null\n\n\nexport const setRegionReducer = (state:Region | null = initialState, action: Action): Region | null => {\n    switch (action.type) {\n    case ActionType.SET_REGION:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\n\n\n\n\nexport default setRegionReducer\n\n\n","\nimport { Driver } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Driver[] = []\n\n\nexport const driverReducer = (state: Driver[] = initialState, action: Action): Driver[] => {\n    switch (action.type) {\n    case ActionType.ADD_DRIVER:\n        return [...state, action.data]\n    case ActionType.UPDATE_DRIVER: {\n        console.log('inside update landfill state')\n        const id = action.data.id\n        const changed_driver = action.data\n        return state.map(driver => driver.id !== id ? driver : changed_driver)\n    }\n    case ActionType.DELETE_DRIVER: {\n        console.log('inside delete landfill state')\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_DRIVERS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default driverReducer\n\n\n","\nimport { Depot } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Depot[] = []\n\n\nexport const depotReducer = (state: Depot[] = initialState, action: Action): Depot[] => {\n    switch (action.type) {\n    case ActionType.ADD_DEPOT:\n        return [...state, action.data]\n    case ActionType.UPDATE_DEPOT: {\n        console.log('inside update landfill state')\n        const id = action.data.id\n        const changed_depot = action.data\n        return state.map( depot=> depot.id !== id ? depot : changed_depot)\n    }\n    case ActionType.DELETE_DEPOT: {\n        console.log('inside delete landfill state')\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_DEPOTS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default depotReducer\n\n\n","\nimport { Vehicle } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Vehicle[] = []\n\n\nexport const vehicleReducer = (state: Vehicle[] = initialState, action: Action): Vehicle[] => {\n    switch (action.type) {\n    case ActionType.ADD_VEHICLE:\n        return [...state, action.data]\n    case ActionType.UPDATE_VEHICLE: {\n        const id = action.data.id\n        const changed_vehicle = action.data\n        return state.map(vehicle => vehicle.id !== id ? vehicle : changed_vehicle)\n    }\n    case ActionType.DELETE_VEHICLE: {\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_VEHICLES:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default vehicleReducer\n\n\n","\nimport { Order } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Order[] = []\n\n\nexport const orderReducer = (state: Order[] = initialState, action: Action): Order[] => {\n    switch (action.type) {\n    case ActionType.ADD_ORDER:\n        return [...state, action.data]\n    case ActionType.UPDATE_ORDER: {\n        const id = action.data.id\n        const changed_order = action.data\n        return state.map(order => order.id !== id ? order : changed_order)\n    }\n    case ActionType.DELETE_ORDER: {\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_ORDERS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default orderReducer\n\n\n","\nimport { TruckRoute } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: TruckRoute[] = []\n\n\nexport const routeReducer = (state: TruckRoute[] = initialState, action: Action): TruckRoute[] => {\n    switch (action.type) {\n    case ActionType.ADD_TRUCK_ROUTE:\n        return [...state, action.data]\n    case ActionType.UPDATE_TRUCK_ROUTE: {\n        const id = action.data.id\n        const changed_truck_route = action.data\n        return state.map(truck_route => truck_route.id !== id ? truck_route : changed_truck_route)\n    }\n    case ActionType.DELETE_TRUCK_ROUTE: {\n        const id = action.data.id\n        return state.filter(landfill => landfill.id !== id)\n    }\n    case ActionType.INIT_TRUCK_ROUTES:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\n\n\n\n\nexport default routeReducer\n\n\n","import { combineReducers } from 'redux'\nimport landfillReducer from './landfillReducer'\nimport userTokenReducer from './userTokenReducer'\nimport regionReducer from './regionReducer'\nimport setRegionReducer from './setRegionReducer'\nimport driverReducer from './driverReducer'\nimport depotReducer from './depotReducer'\nimport vehicleReducer from './vehicleReducer'\nimport orderReducer from './orderReducer'\nimport routeReducer from './routeReducer'\n\nconst reducers = combineReducers({\n    landfills: landfillReducer,\n    userToken: userTokenReducer,\n    regions: regionReducer,\n    setRegion: setRegionReducer,\n    drivers: driverReducer,\n    depots: depotReducer,\n    vehicles: vehicleReducer,\n    orders: orderReducer,\n    routes: routeReducer\n})\n\nexport default reducers\n\nexport type State = ReturnType<typeof reducers>","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers/index'\n// import { composeWithDevTools } from 'redux-devtools-extension'\n\nexport const store = createStore(\n    reducers,\n    // compose(  applyMiddleware(thunk),   composeWithDevTools())\n    compose(  applyMiddleware(thunk))\n \n  \n\n)","import React, {useState} from 'react'\nimport './SignInForm.css'\nimport logo from './images/logo.svg'\nimport {\n    Link, useNavigate\n} from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../../state'\nimport { LoginInfo } from '../../types'\n\n\n\nconst SignInForm = () => {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { loginUser} = bindActionCreators(actionCreators, dispatch)\n\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n\n\n\n\n    const handleLogin = async (event: React.SyntheticEvent) => {\n        event.preventDefault()\n        const login_info: LoginInfo = {username: email, password: password}\n        // eslint-disable-next-line no-debugger\n        try{\n            await loginUser(login_info)\n            navigate('/')\n\n        } catch(error){\n            console.log(error)\n            M.toast({ html: 'Sign in was not successfull. Double check the username and password' })\n        }\n        \n\n    }\n\n\n    return (\n        <div className=\"sign-up-wrap\"><img src={logo} alt=\"\" />\n            <div className=\"w-form\">\n                <div className=\"placeholder-text-style-embed-code w-embed\">\n                </div>\n                <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" className=\"form\" autoComplete=\"off\" onSubmit={(event) => handleLogin(event)}><input type=\"text\" className=\"text_field\" maxLength={256} name=\"email\" data-name=\"Email\"\n                    placeholder=\"Email Address\" id=\"email\" autoCapitalize=\"off\" value={email} onChange={({target})=>setEmail(target.value)}/><input type=\"password\" className=\"text_field\"\n                    maxLength={256} name=\"Password\" data-name=\"Password\" placeholder=\"Password\" id=\"Password\" value={password}  onChange={({target})=>setPassword(target.value)}/><input\n                    type=\"submit\" value=\"Sign In\" data-wait=\"Please wait...\" className=\"btn grey darken-1\"/></form>\n                <div className=\"w-form-done\">\n                    <div>Thank you! Your submission has been received!</div>\n                </div>\n                <div className=\"w-form-fail\">\n                    <div>Oops! Something went wrong while submitting the form.</div>\n                </div>\n            </div>\n            <div className=\"sign-up\">\n                <p className=\"paragraph\">Dont have an account? <Link to=\"/SignUp\"\n                    className=\"link\">Sign Up</Link>.<br/></p>\n                <input className=\"input-field\" />\n            </div>\n        </div>\n    )\n}\n\nexport default SignInForm","import React from 'react'\nimport './Login.css'\nimport SignUpForm from '../SignUpForm/SignUpForm'\nimport SignInForm from '../SignInForm/SignInForm'\n\nimport {\n    Route, Routes\n} from 'react-router-dom'\n\nconst Login = () => {\n    return (\n        <div className=\"body\">\n            <Routes>\n                <Route path=\"/\" element={<SignInForm />} />\n                <Route path=\"/SignUp\" element={<SignUpForm />} />\n                <Route path=\"SignIn\" element={<SignInForm />} />\n            </Routes>\n            {/* <SignInForm /> */}\n        </div>\n    )\n}\n\nexport default Login","export default __webpack_public_path__ + \"static/media/icon.58d517b5.png\";","import React, { useEffect } from 'react'\nimport icon from './images/icon.png'\nimport './SideNav.css'\nimport M from 'materialize-css'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../../state'\nimport { useDispatch } from 'react-redux'\n\nconst SideNav = () => {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { setUserToken } = bindActionCreators(actionCreators, dispatch)\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n\n\n\n    const onSignOut = () => {\n        console.log('inside onSignOut')\n        window.localStorage.clear()\n        setUserToken(null)\n        navigate('/')\n    }\n\n\n    return (\n        <div>\n            <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\">\n                <li>\n                    {/* <div> <i className=\"material-icons\">add</i></div> */}\n                    <div><a href=\"#!\" className=\"\"><img className=\"icon\" src={icon} /></a></div>\n                </li>\n                <li><div className=\"divider\"></div></li>\n                <li><Link to=\"/landfill\">Landfills</Link></li>\n                <li><Link to=\"/driver\">Truck Drivers</Link></li>\n                <li><Link to=\"/depot\">Depots</Link></li>\n                <li><Link to=\"/vehicle\">Vehicles</Link></li>\n                <li><Link to=\"/order\">Orders</Link></li>\n                <li><Link to=\"/route\">Routes</Link></li>\n\n                <li>\n                    <div className='button-spacing'>\n                        <button className=\"btn black\" onClick={() => onSignOut()}>Sign Out</button>\n                    </div>\n\n                </li>\n            </ul>\n\n        </div>\n    )\n\n}\n\n\nexport default SideNav\n\n\n","import axios from 'axios'\nimport { Address, HttpResponse, LatLng } from '../types'\n\n\nconst base_url = 'https://maps.googleapis.com/maps/api/geocode/json?address='\n\n\nconst get = async (address: Address): Promise<HttpResponse> => {\n    console.log('inside geocode service .get')\n    const street_split = address.street.split(' ')\n    console.log(street_split)\n    const parsed_street = street_split.reduce((prev_value, current_value) => `${prev_value}+${current_value}`, '')\n\n    const url = base_url + `${parsed_street},+${address.city},+${address.state},+${address.zipcode}&key=${process.env.REACT_APP_GEOCODE_API_KEY}`\n\n    try {\n        const response = await axios.get(url)\n        const response_status = response.data.status\n        if(response_status==='OK'){\n            const lat_lng = response.data.results[0].geometry.location\n            const formatted_response: HttpResponse = {\n                status: 'OK',\n                message: '',\n                data : lat_lng as LatLng,\n            }\n            return formatted_response\n        }else{\n            const formatted_response: HttpResponse = {\n                status: 'ERROR',\n                message: response.data.error_message,\n                data : {},\n            }\n            return formatted_response\n        }\n    } catch (err){\n        console.log('error in getting the HttpResponse')\n        const formatted_response: HttpResponse = {\n            status: 'ERROR',\n            message: 'Error: '+err,\n            data : {},\n        }\n        return formatted_response\n    }\n\n\n}\n\n\nexport default { get }","import React, { useState, useEffect } from 'react'\nimport { Landfill, Address } from '../types'\nimport { actionCreators } from '../state'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    landfill: Landfill,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditLandfillForm = ({ landfill, setActive }: prop) => {\n\n\n    if (!landfill) {\n        return (<div></div>)\n    }\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState(landfill.name)\n    const [street, setStreet] = useState(landfill.street)\n    const [city, setCity] = useState(landfill.city)\n    const [state, setState] = useState(landfill.state)\n    const [zipcode, setZipcode] = useState(landfill.zipcode.toString())\n    const [latitude, setLatitude] = useState(landfill.latitude.toString())\n    const [longitude, setLongitude] = useState(landfill.longitude.toString())\n    const [active, setStatus] = useState(landfill.active)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n    const dispatch = useDispatch()\n    const { updateLandfill } = bindActionCreators(actionCreators, dispatch)\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: `${response.message}` })\n        }\n        const lat_lng = response.data as LatLng\n        setCoord(lat_lng)\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.open()\n        }\n    }\n\n\n\n    const submit = () => {\n        console.log('inside on submit')\n        if (name === '' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = landfill.id\n            const new_landfill: Landfill = { id, name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'user_id': landfill.user_id, 'region_id': landfill.region_id, 'type':'Landfill' }\n            updateLandfill(new_landfill)\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Landfill</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditLandfillForm\n\n","import React, { useState, useEffect } from 'react'\nimport { NewLandfill, Address } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateLandfillForm = ({setActive }: prop) => {\n\n    const dispatch = useDispatch()\n    const { createLandfill } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if(!region){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [zipcode, setZipcode] = useState('')\n    const [latitude, setLatitude] = useState('')\n    const [longitude, setLongitude] = useState('')\n    const [active, setStatus] = useState(false)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        }else{\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(name==='' || street==='' || city==='' || state==='' || zipcode==='' || latitude==='' || longitude===''){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const new_landfill: NewLandfill = { name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'region_id':region.id, 'type': 'Landfill' }\n            console.log(new_landfill)\n            await createLandfill(new_landfill)\n            M.toast({html: 'Created New Landfill'})\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Landfill</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)}/>\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateLandfillForm\n\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../state'\nimport { Depot, Driver, Landfill, Order, Vehicle } from '../types'\n\ninterface props {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n    landfill?: Landfill,\n    driver?: Driver,\n    depot?: Depot,\n    vehicle?: Vehicle,\n    order?: Order,\n}\n\nconst ConfirmDelete = ({ setActive, landfill, driver, depot, vehicle, order }: props) => {\n\n    const dispatch = useDispatch()\n\n    const { deleteLandfill, deleteDriver, deleteDepot, deleteVehicle, deleteOrder } = bindActionCreators(actionCreators, dispatch)\n\n\n    React.useEffect(() => {\n\n        const modal = document.querySelector('#confirm_delete')\n        if (modal) {\n            const instance = M.Modal.init(modal, { dismissible: false })\n            instance.open()\n        }\n    }, [])\n\n    const handleConfirmation = (status: boolean) => {\n        if (status) {\n            if(landfill){\n                deleteLandfill(landfill)\n            }else if(driver){\n                deleteDriver(driver)\n            }else if(depot){\n                deleteDepot(depot)\n            }else if(vehicle){\n                deleteVehicle(vehicle)\n            }else if(order){\n                deleteOrder(order)\n            }\n        }\n        setActive(false)\n\n    }\n\n    return (\n        <div className='center-align'>\n            <div id=\"confirm_delete\" className=\"modal\">\n                <div className=\"modal-content center-align\">\n                    <div>\n                        Are you sure you want to delete this item?\n\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                        <div className=\"col s4\"></div>\n                        <div className=\"col s2\">\n                            <button onClick={() => handleConfirmation(true)} className=\"btn black modal-close\" >Yes</button>\n                        </div>\n                        <div className=\"col s2\">\n                            <button onClick={() => handleConfirmation(false)} className=\"btn black modal-close\">No</button>\n                        </div>\n\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default ConfirmDelete","import React, { useState } from 'react'\nimport { Landfill } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport EditLandfillForm from './EditLandfillForm'\nimport CreateLandfillForm from './CreateLandfillForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst LandfillList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateLandfill } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const landfills = useSelector((state: State) => state.landfills)\n    const [landfill, setLandfill] = useState<Landfill>(landfills[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changeLandfillStatus = (landfill: Landfill) => {\n        console.log('inside on click')\n        const new_landfill = { ...landfill }\n        if (landfill.active) {\n            new_landfill.active = false\n        } else {\n            new_landfill.active = true\n        }\n        updateLandfill(new_landfill)\n    }\n\n\n\n    const editLandfill = (landfill: Landfill) => {\n        setLandfill(landfill)\n        setEditFormActive(true)\n    }\n\n    const onDeleteLandfill = (landfill: Landfill) => {\n        console.log('inside delete landfill')\n        setLandfill(landfill)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateLandfill = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertLandfills = () => {\n        return (\n            landfills.map(landfill =>\n                <tr key={landfill.id}>\n                    <td>{landfill.name}</td>\n                    <td>{landfill.street}</td>\n                    <td>{landfill.city}</td>\n                    <td>{landfill.zipcode}</td>\n                    <td>{landfill.latitude}</td>\n                    <td>{landfill.longitude}</td>\n                    <td>{(landfill.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changeLandfillStatus(landfill)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changeLandfillStatus(landfill)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editLandfill(landfill)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteLandfill(landfill)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateLandfill()}>New Landfill</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Street</th>\n                            <th>City</th>\n                            <th>Zipcode</th>\n                            <th>Latitude</th>\n                            <th>Longitude</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertLandfills()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditLandfillForm landfill={landfill} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateLandfillForm setActive={setCreateFormActive}  />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} landfill={landfill} />}\n\n        </div>\n    )\n}\n\n\nexport default LandfillList","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*\n * Copyright 2021 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// [START maps_react_map]\nimport * as React from 'react'\nimport { Wrapper, Status } from '@googlemaps/react-wrapper'\nimport { createCustomEqual } from 'fast-equals'\nimport { isLatLngLiteral, } from '@googlemaps/typescript-guards'\nimport styled from 'styled-components'\nimport { Depot, Landfill, Order } from '../types'\n\n\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\n\nconst landfill_icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n}\n\nconst depot_icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n}\n\nconst order_icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\n}\n\nconst render = (status: Status) => {\n    return <h1>{status}</h1>\n}\n\ninterface MyProps {\n    landfills?: Landfill[];\n    depots?: Depot[];\n    orders?: Order[];\n}\n\nconst GoogleMap = ({ landfills, depots, orders }: MyProps) => {\n    // [START maps_react_map_component_app_state]\n    // const [clicks, setClicks] = React.useState<google.maps.LatLng[]>([])\n    const [zoom, setZoom] = React.useState(4) // initial zoom\n    const [center, setCenter] = React.useState<google.maps.LatLngLiteral>({\n        lat: 33,\n        lng: -84,\n    })\n\n\n\n\n    const onClick = (e: google.maps.MapMouseEvent) => {\n        console.log(e.latLng!)\n        // avoid directly mutating state\n        // setClicks([...clicks, e.latLng!])\n    }\n\n    const onIdle = (m: google.maps.Map) => {\n        console.log('onIdle')\n        setZoom(m.getZoom()!)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        setCenter(m.getCenter()!.toJSON())\n    }\n    // [END maps_react_map_component_app_state]\n\n\n\n    // [START maps_react_map_component_app_return]\n\n\n    const insertLandfillMarkers = () => {\n        return (\n            landfills && landfills.map((landfill) => {\n                const latlng = { lat: landfill.latitude, lng: landfill.longitude }\n                if (landfill.active) {\n                    return (< Marker key={landfill.id} position={latlng} icon={landfill_icon} title={landfill.name} />)\n                } else {\n                    return\n                }\n\n            })\n        )\n\n    }\n\n\n    const insertDepotMarkers = () => {\n        return (\n            depots && depots.map((depot) => {\n                const latlng = { lat: depot.latitude, lng: depot.longitude }\n                if (depot.active) {\n                    return (< Marker key={depot.id} position={latlng} icon={depot_icon} title={depot.name} />)\n                } else {\n                    return\n                }\n\n            })\n        )\n\n    }\n\n    const formatOrderLabel = (order: Order) => {\n        const label = order.name + '\\n' + 'Dumpster Size: ' + order.dumpster_size + '\\n' + 'Delivery Date: ' + order.delivery_date + '\\n' + 'Pickup Date: ' + order.pickup_date\n        return label\n    }\n\n\n    const insertOrderMarkers = () => {\n        return (\n            orders && orders.map((order) => {\n                const latlng = { lat: order.latitude, lng: order.longitude }\n                return (< Marker key={order.id} position={latlng} icon={order_icon} title={formatOrderLabel(order)} />)\n\n            })\n        )\n\n    }\n\n    return (\n        <div >\n            <TopSpacing>\n                <Wrapper apiKey={'AIzaSyDBWA8Gu8uc_uOL6Sp2ZIFsRI53PKbAjkw'} render={render}>\n                    <Map\n                        center={center}\n                        onClick={onClick}\n                        onIdle={onIdle}\n                        zoom={zoom}\n                        style={{ flexGrow: '1', height: '50vh' }}\n                    >\n                        {insertLandfillMarkers()}\n                        {insertDepotMarkers()}\n                        {insertOrderMarkers()}\n\n                    </Map>\n                </Wrapper>\n            </TopSpacing>\n        </div >\n    )\n    // [END maps_react_map_component_app_return]\n}\ninterface MapProps extends google.maps.MapOptions {\n    style: { [key: string]: string };\n    onClick?: (e: google.maps.MapMouseEvent) => void;\n    onIdle?: (map: google.maps.Map) => void;\n}\n\nconst Map: React.FC<MapProps> = ({\n    onClick,\n    onIdle,\n    children,\n    style,\n    ...options\n}) => {\n    // [START maps_react_map_component_add_map_hooks]\n    const ref = React.useRef<HTMLDivElement>(null)\n    const [map, setMap] = React.useState<google.maps.Map>()\n\n    React.useEffect(() => {\n        if (ref.current && !map) {\n            setMap(new window.google.maps.Map(ref.current, {}))\n        }\n    }, [ref, map])\n    // [END maps_react_map_component_add_map_hooks]\n\n    // [START maps_react_map_component_options_hook]\n    // because React does not do deep comparisons, a custom hook is used\n    // see discussion in https://github.com/googlemaps/js-samples/issues/946\n    useDeepCompareEffectForMaps(() => {\n        if (map) {\n            map.setOptions(options)\n        }\n    }, [map, options])\n    // [END maps_react_map_component_options_hook]\n\n    // [START maps_react_map_component_event_hooks]\n    React.useEffect(() => {\n        if (map) {\n            ['click', 'idle'].forEach((eventName) =>\n                google.maps.event.clearListeners(map, eventName)\n            )\n\n            if (onClick) {\n                map.addListener('click', onClick)\n            }\n\n            if (onIdle) {\n                map.addListener('idle', () => onIdle(map))\n            }\n        }\n    }, [map, onClick, onIdle])\n    // [END maps_react_map_component_event_hooks]\n\n    // [START maps_react_map_component_return]\n    return (\n        <>\n            <div ref={ref} style={style} />\n            {React.Children.map(children, (child) => {\n                if (React.isValidElement(child)) {\n                    // set the map prop on the child component\n                    return React.cloneElement(child, { map })\n                }\n            })}\n        </>\n    )\n    // [END maps_react_map_component_return]\n}\n\n// [START maps_react_map_marker_component]\nconst Marker: React.FC<google.maps.MarkerOptions> = (options) => {\n    const [marker, setMarker] = React.useState<google.maps.Marker>()\n\n    React.useEffect(() => {\n        if (!marker) {\n            setMarker(new google.maps.Marker())\n        }\n\n        // remove marker from map on unmount\n        return () => {\n            if (marker) {\n                marker.setMap(null)\n            }\n        }\n    }, [marker])\n\n    React.useEffect(() => {\n        if (marker) {\n            marker.setOptions(options)\n        }\n    }, [marker, options])\n\n\n\n    return null\n}\n// [END maps_react_map_marker_component]\n\nconst deepCompareEqualsForMaps = createCustomEqual(\n    (deepEqual) => (a: any, b: any) => {\n        if (\n            isLatLngLiteral(a) ||\n            a instanceof google.maps.LatLng ||\n            isLatLngLiteral(b) ||\n            b instanceof google.maps.LatLng\n        ) {\n            return new google.maps.LatLng(a).equals(new google.maps.LatLng(b))\n        }\n\n        // TODO extend to other types\n\n        // use fast-equals for other objects\n        return deepEqual(a, b)\n    }\n)\n\nfunction useDeepCompareMemoize(value: any) {\n    const ref = React.useRef()\n\n    if (!deepCompareEqualsForMaps(value, ref.current)) {\n        ref.current = value\n    }\n\n    return ref.current\n}\n\nfunction useDeepCompareEffectForMaps(\n    callback: React.EffectCallback,\n    dependencies: any[]\n) {\n    React.useEffect(callback, dependencies.map(useDeepCompareMemoize))\n}\n\n\n// // [END maps_react_map]\n// let PRESERVE_COMMENT_ABOVE // force tsc to maintain the comment above eslint-disable-line\n\nexport default GoogleMap","export enum DUMPSTER_SIZES {\n    TEN = 10,\n    FIFTEEN = 15,\n    TWENTY = 20,\n    THIRTY = 30,\n    FOURTY = 40,\n    FIFTY = 50\n}\n\nexport const dumpster_sizes = [\n    DUMPSTER_SIZES.TEN,\n    DUMPSTER_SIZES.FIFTEEN,\n    DUMPSTER_SIZES.TWENTY,\n    DUMPSTER_SIZES.THIRTY,\n    DUMPSTER_SIZES.FOURTY,\n    DUMPSTER_SIZES.FIFTY\n]","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LandfillList from '../LandfillList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport GoogleMap from '../GoogleMap'\n\n// import './LandfillPage.css'\n\nconst LandfillPage = () => {\n    console.log('inside landfill page')\n\n    const dispatch = useDispatch()\n    const { initializeLandfills } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeLandfills(region)\n        }\n    }, [region])\n\n    const landfills = useSelector((state: State) => state.landfills)\n\n    return (\n\n        <div>\n            <GoogleMap landfills={landfills} />\n            <LandfillList />\n        </div>\n\n    )\n}\n\n\n\nexport default LandfillPage","import React, { useState, useEffect } from 'react'\nimport { NewDriver} from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateDriverForm = ({ setActive }: prop) => {\n\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    if(!region){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n    }, [])\n\n\n    const [name, setName] = useState('')\n    const [phone_number, setPhoneNumber] = useState('')\n    const [email, setEmail] = useState('')\n    const [active, setStatus] = useState(true)\n    \n\n\n    const dispatch = useDispatch()\n    const { createDriver } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(name==='' || phone_number==='' || email==='' ){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const new_driver: NewDriver = { name, phone_number, email,  'region_id': region.id }\n            await createDriver(new_driver)\n            M.toast({html: 'Created New Landfill'})\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Driver</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Phone Number</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Email</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\" waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateDriverForm\n\n","import React, { useState, useEffect } from 'react'\nimport { Driver } from '../types'\nimport { actionCreators } from '../state'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\ninterface prop {\n    driver: Driver,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditDriverForm = ({ driver, setActive }: prop) => {\n\n\n    if (!driver) {\n        return (<div></div>)\n    }\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n    }, [])\n\n\n    const [name, setName] = useState(driver.name)\n    const [phone_number, setPhoneNumber] = useState(driver.phone_number)\n    const [email, setEmail] = useState(driver.email)\n    const [active, setStatus] = useState(driver.active)\n\n\n\n    const dispatch = useDispatch()\n    const { updateDriver } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = () => {\n        console.log('inside on submit')\n        if (name === '' || phone_number === '' || email === '') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = driver.id\n            const new_driver: Driver = { id, name, phone_number, email, active, 'user_id': driver.user_id, 'region_id': driver.region_id }\n            updateDriver(new_driver)\n            const modal_elem = document.getElementById('modal1')\n            M.toast({html: 'Driver was updated'})\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>driver</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditDriverForm\n\n","import React, { useState } from 'react'\nimport { Driver } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport CreateDriverForm from './CreateDriverForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\nimport EditDriverForm from './EditDriverForm'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst DriverList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateDriver } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const drivers = useSelector((state: State) => state.drivers)\n    const [driver, setDriver] = useState<Driver>(drivers[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changeDriverStatus = (driver: Driver) => {\n\n        const new_driver = { ...driver }\n        if (driver.active) {\n            new_driver.active = false\n        } else {\n            new_driver.active = true\n        }\n        updateDriver(new_driver)\n    }\n\n\n\n    const editDriver = (driver: Driver) => {\n        setDriver(driver)\n        setEditFormActive(true)\n    }\n\n    const onDeleteDriver = (driver: Driver) => {\n        console.log('inside delete landfill')\n        setDriver(driver)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateDriver = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertDrivers = () => {\n        return (\n            drivers.map(driver =>\n                <tr key={driver.id}>\n                    <td>{driver.name}</td>\n                    <td>{driver.phone_number}</td>\n                    <td>{driver.email}</td>\n\n                    <td>{(driver.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changeDriverStatus(driver)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changeDriverStatus(driver)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editDriver(driver)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteDriver(driver)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateDriver()}>New Driver</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Phone Number</th>\n                            <th>Email</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertDrivers()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditDriverForm driver={driver} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateDriverForm setActive={setCreateFormActive} />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} driver={driver} />}\n\n        </div>\n    )\n}\n\n\nexport default DriverList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport DriverList from '../DriverList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\n// import GoogleMap from '../GoogleMap'\n\n// import './LandfillPage.css'\n\nconst TruckDriverPage = () => {\n\n    const dispatch = useDispatch()\n    const { initializeDrivers } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeDrivers(region)\n        }\n    }, [region])\n\n    const drivers = useSelector((state: State) => state.drivers)\n    console.log(drivers)\n\n    return (\n\n        <div>\n            <DriverList />\n        </div>\n\n    )\n}\n\n\n\nexport default TruckDriverPage","import React, { useState, useEffect } from 'react'\nimport { Depot, NewVehicle} from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateVehicleForm = ({ setActive }: prop) => {\n\n\n    const region = useSelector((state: State) => state.setRegion)\n    const depots = useSelector((state: State) => state.depots)\n\n    if(!region || !depots){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n    }, [])\n\n\n    const [license_number, setLicenseNumber] = useState('')\n    const [size, setSize] = useState(0)\n    const [start_depot, setStartDepot] = useState(depots[0])\n    const [end_depot,setEndDepot] = useState<Depot | undefined>(undefined)\n    const [active, setStatus] = useState(true)\n    \n\n\n    const dispatch = useDispatch()\n    const { createVehicle } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(license_number ==='' || size===0){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const start_depot_id = start_depot.id\n            const end_depot_id = end_depot?.id\n            const new_vehicle: NewVehicle = { license_number, size, 'start_depot': start_depot_id, 'end_depot': end_depot_id, active, 'region_id': region.id }\n            await createVehicle(new_vehicle)\n            M.toast({html: 'Created New Vehicle'})\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n\n    const insertStartingDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (depot.id === start_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n            })\n        )\n    }\n\n    const insertEndDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (end_depot && depot.id === end_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n\n            })\n        )\n    }\n\n    const setStartingDepot = () => {\n        const val = document.getElementById('select1') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setStartDepot(selected_depot)\n        }\n    }\n\n    const setEndingDepot = () => {\n        const val = document.getElementById('select2') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setEndDepot(selected_depot)\n        } else {\n            setEndDepot(undefined)\n        }\n    }\n\n    const onSetSize = (input:string) => {\n\n        if(input){\n            setSize(parseInt(input))\n        }else{\n            setSize(0)\n        }\n    }\n\n  \n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Vehicle</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={license_number} onChange={({ target }) => setLicenseNumber(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">License Number</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={size} onChange={({ target }) => onSetSize(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Size</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <select id=\"select1\" onChange={() => setStartingDepot()}>\n                                    {insertStartingDepotChoices()}\n                                </select>\n                                <label>Starting Depot</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <select id=\"select2\" onChange={() => setEndingDepot()}>\n                                    <option value=\"none\" >Any</option>\n                                    {insertEndDepotChoices()}\n                                </select>\n                                <label>Ending Depot</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateVehicleForm\n\n","import React, { useState, useEffect } from 'react'\nimport { Depot, EditVehicle, Vehicle } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\ninterface prop {\n    vehicle: Vehicle,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditVehicleForm = ({ vehicle, setActive }: prop) => {\n\n    const depots = useSelector((state: State) => state.depots)\n\n    if (!vehicle || !depots) {\n        return (<div></div>)\n    }\n\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n\n    }, [])\n\n\n    const [license_number, setLicenseNumber] = useState(vehicle.license_number)\n    const [size, setSize] = useState(vehicle.size)\n    const [start_depot, setStartDepot] = useState(vehicle.start_depot)\n    const [end_depot, setEndDepot] = useState(vehicle.end_depot)\n    const [active, setStatus] = useState(vehicle.active)\n\n\n\n    const dispatch = useDispatch()\n    const { updateVehicle } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = () => {\n        console.log('inside on submit')\n        if (license_number === '' || size === 0) {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = vehicle.id\n            const start_depot_id = start_depot.id\n            let new_vehicle = {} as EditVehicle\n            if (end_depot) {\n                const end_depot_id = end_depot.id\n                new_vehicle = { id, license_number, size, 'start_depot': start_depot_id, 'end_depot': end_depot_id, active, 'region_id': vehicle.region_id }\n            } else {\n                new_vehicle = { id, license_number, size, 'start_depot': start_depot_id, 'end_depot': null, active, 'region_id': vehicle.region_id }\n            }\n\n            updateVehicle(new_vehicle)\n            M.toast({html: 'Updated Vehicle'})\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n    const insertStartingDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (depot.id === start_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n            })\n        )\n    }\n\n    const insertEndDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (end_depot && depot.id === end_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n\n            })\n        )\n    }\n\n    const setStartingDepot = () => {\n        const val = document.getElementById('select1') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setStartDepot(selected_depot)\n        }\n    }\n\n    const setEndingDepot = () => {\n        const val = document.getElementById('select2') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setEndDepot(selected_depot)\n        } else {\n            setEndDepot(undefined)\n        }\n    }\n\n    const onSetSize = (input: string) => {\n\n        if (input) {\n            setSize(parseInt(input))\n        } else {\n            setSize(0)\n        }\n    }\n\n\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Vehicle</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={license_number} onChange={({ target }) => setLicenseNumber(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">License Number</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={size} onChange={({ target }) => onSetSize(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Size</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <select id=\"select1\" onChange={() => setStartingDepot()}>\n                                    {insertStartingDepotChoices()}\n                                </select>\n                                <label>Starting Depot</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <select id=\"select2\" onChange={() => setEndingDepot()}>\n                                    <option value=\"none\" >Any</option>\n                                    {insertEndDepotChoices()}\n                                </select>\n                                <label>Ending Depot</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\" waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditVehicleForm\n\n","import React, { useState } from 'react'\nimport { EditVehicle, Vehicle } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport CreateVehicleForm from './CreateVehicleForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\nimport EditVehicleForm from './EditVehicleForm'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst VehicleList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateVehicle } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const vehicles = useSelector((state: State) => state.vehicles)\n    const [vehicle, setVehicle] = useState<Vehicle>(vehicles[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changeVehicleStatus = (vehicle: Vehicle) => {\n\n\n\n        const updated_vehicle : EditVehicle = {\n            id: vehicle.id,\n            license_number: vehicle.license_number,\n            size: vehicle.size,\n            start_depot: vehicle.start_depot.id,\n            end_depot: vehicle.end_depot?.id,\n            region_id: vehicle.region_id,\n            active: !vehicle.active\n\n        }\n\n        // const new_vehicle = { ...vehicle }\n        // if (vehicle.active) {\n        //     new_vehicle.active = false\n        // } else {\n        //     new_vehicle.active = true\n        // }\n        updateVehicle(updated_vehicle)\n    }\n\n\n\n    const editVehicle = (vehicle: Vehicle) => {\n        setVehicle(vehicle)\n        setEditFormActive(true)\n    }\n\n    const onDeleteVehicle = (vehicle: Vehicle) => {\n        console.log('inside delete landfill')\n        setVehicle(vehicle)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateVehicle = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertVehicles = () => {\n        return (\n            vehicles.map(vehicle =>\n                <tr key={vehicle.id}>\n                    <td>{vehicle.license_number}</td>\n                    <td>{vehicle.size}</td>\n                    <td>{vehicle.start_depot.name}</td>\n                    { (vehicle.end_depot) ? <td>{vehicle.end_depot?.name}</td> : <td>Any</td>}\n                    \n                    <td>{(vehicle.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changeVehicleStatus(vehicle)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changeVehicleStatus(vehicle)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editVehicle(vehicle)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteVehicle(vehicle)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateVehicle()}>New Vehicle</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>License Number</th>\n                            <th>Size</th>\n                            <th>Start Depot</th>\n                            <th>End Depot</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertVehicles()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditVehicleForm vehicle={vehicle} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateVehicleForm setActive={setCreateFormActive} />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} vehicle={vehicle} />}\n\n        </div>\n    )\n}\n\n\nexport default VehicleList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import VehicleList from '../VehicleList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport VehicleList from '../VehicleList'\n\n\nconst VehiclePage = () => {\n\n    const dispatch = useDispatch()\n    const { initializeVehicles } = bindActionCreators(actionCreators, dispatch)\n    const { initializeDepots } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeVehicles(region)\n            initializeDepots(region)\n        }\n    }, [region])\n\n\n    return (\n\n        <div>\n            <VehicleList />\n        </div>\n\n    )\n}\n\n\n\nexport default VehiclePage","import React, { useState, useEffect } from 'react'\nimport { NewOrder, Address } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng, Dumpster_Sizes } from '../types'\nimport { DUMPSTER_SIZES, dumpster_sizes } from '../utils/enums'\nimport './OrderPage/OrderPage.css'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateOrderForm = ({ setActive }: prop) => {\n\n    const dispatch = useDispatch()\n    const { createOrder } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if (!region) {\n        return (<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n\n\n        // Drop Off Date Picker Initialization\n        const drop_off_date_picker = document.getElementById('drop-off-date')\n        if (drop_off_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(drop_off_date_picker, { setDefaultDate: true, onSelect: (date) => onDropOffDateChange(date), container: elem })\n        }\n\n\n        // Pickup Date Picker Initialization\n        const pickup_date_picker = document.getElementById('pickup-date')\n        if (pickup_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(pickup_date_picker, { setDefaultDate: true, onSelect: (date) => onPickupDateChange(date), container: elem })\n        }\n\n\n\n\n    }, [])\n\n\n\n\n\n    const [name, setName] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [zipcode, setZipcode] = useState('')\n    const [latitude, setLatitude] = useState('')\n    const [longitude, setLongitude] = useState('')\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n    const [dumpster_size, setDumpsterSize] = useState(DUMPSTER_SIZES.TEN)\n    const [email, setEmail] = useState('')\n    const [phone_number, setPhoneNumber] = useState('')\n    const [drop_off_date, setDropOffDate] = useState('')\n    const [pickup_date, setPickupDate] = useState('')\n    const [special_instructions, setInstructions] = useState('')\n    const [delivery_completed, setDeliveryStatus] = useState(false)\n    const [pickup_completed, setPickupStatus] = useState(false)\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        } else {\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n    const insertDumpsterSizeChoices = () => {\n        return (\n            dumpster_sizes.map(size => {\n                return (\n                    <option value={size} key={size}>{size}</option>\n                )\n\n            })\n        )\n    }\n\n\n\n    const onDumpsterSelect = (dumpster_size: string) => {\n        console.log('inside on dumpser select')\n        console.log(dumpster_size)\n        setDumpsterSize(parseInt(dumpster_size))\n\n    }\n\n    const onPickupDateChange = (date: Date) => {\n        setPickupDate(date.toDateString())\n    }\n\n    const onDropOffDateChange = (date: Date) => {\n        setDropOffDate(date.toDateString())\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if (name === '' || phone_number==='' || email==='' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '' || drop_off_date === '' || pickup_date==='') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const new_order: NewOrder = { name, street, city, email, phone_number, dumpster_size, 'delivery_date': drop_off_date, pickup_date, state, special_instructions, delivery_completed, pickup_completed, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), 'region_id': region.id, 'type':'Order' }\n            console.log(new_order)\n            await createOrder(new_order)\n            M.toast({ html: 'Created New Order' })\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Order</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"phone-number\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"phone-number\" className=\"active\">Phone Number</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"email\" type=\"email\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"email\" className=\"active\">Email</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col l3\">\n\n                                <select id=\"dumpster_size_selector\" onChange={({ target }) => onDumpsterSelect(target.value)}>\n                                    <option value=\"\" disabled selected>Dumpster Size</option>\n                                    {insertDumpsterSizeChoices()}\n                                </select>\n                                <label htmlFor=\"dumpster_size_selector\" className=\"active\">Dumpster Size</label>\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" id=\"drop-off-date\" placeholder='Drop Off Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Drop Off Date</label>\n\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" id=\"pickup-date\" placeholder='Pickup Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Pickup Date</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col l12\">\n                                <textarea id=\"textarea1\" className=\"materialize-textarea\" onChange={({ target }) => setInstructions(target.value)}></textarea>\n                                <label htmlFor=\"textarea1\">Special Instructions</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            <div className=\"col\">\n                                {(delivery_completed) ? <a className=\"green btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Incomplete</a>}\n                            </div>\n                            <div className=\"col\">\n                                {(pickup_completed) ? <a className=\"green btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Incomplete</a>}\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateOrderForm\n\n","import React, { useEffect, useState } from 'react'\nimport { LatLng, Order } from '../types'\n\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n    order: Order\n}\n\n\nconst OrderInfoForm = ({ setActive, order }: prop) => {\n\n    useEffect(() => {\n\n        const modal = document.querySelector('#info-form-modal')\n        if (modal) {\n            const instance = M.Modal.init(modal, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n\n    }, [])\n\n\n\n\n    return (\n\n        <div id=\"info-form-modal\" className=\"modal\">\n            <div className=\"modal-content\">\n                <h4>Order Info</h4>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"order-name\">Name</label>\n                        <div id=\"order-name\"> {order.name}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"phone-number\">Phone Number</label>\n                        <div id=\"phone-number\"> {order.phone_number}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"email\">Email</label>\n                        <div id=\"email\"> {order.email}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"street\">Street</label>\n                        <div id=\"street\"> {order.street}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"city\">City</label>\n                        <div id=\"city\"> {order.city}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"state\">State</label>\n                        <div id=\"state\"> {order.state}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label >Zipcode</label>\n                        <div > {order.zipcode}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Latitude</label>\n                        <div > {order.latitude}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Longitude</label>\n                        <div > {order.longitude}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label >Dumpster Size</label>\n                        <div > {order.dumpster_size}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Delivery Date</label>\n                        <div > {order.delivery_date}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Pickup Date</label>\n                        <div > {order.pickup_date}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l12\" >\n                        {(order.special_instructions !== '') ?\n                            <div><label >Special Instructions</label>\n                                <div > {order.special_instructions}</div></div> : <div></div>}\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label >Delivery Status</label>\n                        {(order.delivery_completed) ? <div>Completed</div> : <div>Incomplete</div>}\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Pikcup Status</label>\n                        {(order.pickup_completed) ? <div>Completed</div> : <div>Incomplete</div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}\n\n\nexport default OrderInfoForm","import React, { useState, useEffect } from 'react'\nimport { NewOrder, Address, Order } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\nimport { dumpster_sizes } from '../utils/enums'\nimport './OrderPage/OrderPage.css'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n    order: Order\n}\n\n\nconst EditOrderForm = ({ setActive, order }: prop) => {\n\n    const dispatch = useDispatch()\n    const { updateOrder } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if (!region) {\n        return (<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n\n\n        // Drop Off Date Picker Initialization\n        const drop_off_date_picker = document.getElementById('drop-off-date')\n        if (drop_off_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(drop_off_date_picker, { setDefaultDate: true, onSelect: (date) => onDropOffDateChange(date), container: elem })\n        }\n\n\n        // Pickup Date Picker Initialization\n        const pickup_date_picker = document.getElementById('pickup-date')\n        if (pickup_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(pickup_date_picker, { setDefaultDate: true, onSelect: (date) => onPickupDateChange(date), container: elem })\n        }\n\n\n\n\n    }, [])\n\n\n\n\n\n    const [name, setName] = useState(order.name)\n    const [street, setStreet] = useState(order.street)\n    const [city, setCity] = useState(order.city)\n    const [state, setState] = useState(order.state)\n    const [zipcode, setZipcode] = useState(order.zipcode.toString())\n    const [latitude, setLatitude] = useState(order.latitude.toString())\n    const [longitude, setLongitude] = useState(order.longitude.toString())\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n    const [dumpster_size, setDumpsterSize] = useState(order.dumpster_size)\n    const [email, setEmail] = useState(order.email)\n    const [phone_number, setPhoneNumber] = useState(order.phone_number)\n    const [drop_off_date, setDropOffDate] = useState(order.delivery_date)\n    const [pickup_date, setPickupDate] = useState(order.pickup_date)\n    const [special_instructions, setInstructions] = useState(order.special_instructions)\n    const [delivery_completed, setDeliveryStatus] = useState(order.delivery_completed)\n    const [pickup_completed, setPickupStatus] = useState(order.pickup_completed)\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        } else {\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n    const insertDumpsterSizeChoices = () => {\n        return (\n            dumpster_sizes.map(size => {\n                return (\n                    <option value={size} key={size}>{size}</option>\n                )\n\n            })\n        )\n    }\n\n\n\n    const onDumpsterSelect = (dumpster_size: string) => {\n        console.log('inside on dumpser select')\n        console.log(dumpster_size)\n        setDumpsterSize(parseInt(dumpster_size))\n\n    }\n\n    const onPickupDateChange = (date: Date) => {\n        setPickupDate(date.toDateString())\n    }\n\n    const onDropOffDateChange = (date: Date) => {\n        setDropOffDate(date.toDateString())\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if (name === '' || phone_number==='' || email==='' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '' || drop_off_date === '' || pickup_date==='') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const updated_order: Order = {'id': order.id ,name, street, city, email, phone_number, dumpster_size, 'delivery_date': drop_off_date, pickup_date, state, special_instructions, delivery_completed, pickup_completed, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), 'region_id': region.id, 'user_id': order.user_id, 'type': 'Order' }\n            await updateOrder(updated_order)\n            M.toast({ html: 'Updated Order' })\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Order</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"phone-number\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"phone-number\" className=\"active\">Phone Number</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"email\" type=\"email\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"email\" className=\"active\">Email</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col l3\">\n\n                                <select id=\"dumpster_size_selector\" value={order.dumpster_size} onChange={({ target }) => onDumpsterSelect(target.value)}>\n                                    <option  disabled selected>Dumpster Size</option>\n                                    {insertDumpsterSizeChoices()}\n                                </select>\n                                <label htmlFor=\"dumpster_size_selector\" className=\"active\">Dumpster Size</label>\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" value={drop_off_date} id=\"drop-off-date\" placeholder='Drop Off Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Drop Off Date</label>\n\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" value={pickup_date} id=\"pickup-date\" placeholder='Pickup Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Pickup Date</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col l12\">\n                                <textarea id=\"textarea1\" className=\"materialize-textarea\" onChange={({ target }) => setInstructions(target.value)}></textarea>\n                                <label htmlFor=\"textarea1\">Special Instructions</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            <div className=\"col\">\n                                {(delivery_completed) ? <a className=\"green btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Incomplete</a>}\n                            </div>\n                            <div className=\"col\">\n                                {(pickup_completed) ? <a className=\"green btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Incomplete</a>}\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat \" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditOrderForm\n\n","import React, { useState } from 'react'\nimport { Order } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport CreateOrderForm from './CreateOrderForm'\nimport OrderInfoForm from './OrderInfoForm'\n\n\nimport M from 'materialize-css'\nimport EditOrderForm from './EditOrderForm'\nimport ConfirmDelete from './ConfirmDelete'\n\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst OrderList = () => {\n\n    const dispatch = useDispatch()\n\n \n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const orders = useSelector((state: State) => state.orders)\n    const [order, setOrder] = useState<Order>(orders[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [orderInfoFormActive, setOrderInfoFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n\n    const editOrder = (order: Order) => {\n        setOrder(order)\n        setEditFormActive(true)\n    }\n\n    const info = (order: Order) => {\n        setOrder(order)\n        setOrderInfoFormActive(true)\n    }\n\n    const onDeleteOrder = (order: Order) => {\n        console.log('inside delete landfill')\n        setOrder(order)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateOrder = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertOrders = () => {\n        return (\n            orders.map(order =>\n                <tr key={order.id}>\n                    <td>{order.name}</td>\n                    <td>{order.dumpster_size}</td>\n                    <td>{order.delivery_date}</td>\n                    <td>{order.pickup_date}</td>\n                    <td>{order.phone_number}</td>\n        \n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editOrder(order)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteOrder(order)}><i className=\"material-icons\">delete</i></button></td>\n                    <td> <button className=\"btn-floating btn green\" onClick={() => info(order)}><i className=\"material-icons\">info_outline</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateOrder()}>New Order</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Customer Name</th>\n                            <th>Dumpster Size</th>\n                            <th>Delivery Date</th>\n                            <th>Pickup Date </th>\n                            <th>Phone Number</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertOrders()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditOrderForm order={order} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateOrderForm setActive={setCreateFormActive} />}\n            {orderInfoFormActive && <OrderInfoForm setActive={setOrderInfoFormActive} order={order}/>}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} order={order} />}\n\n        </div>\n    )\n}\n\n\nexport default OrderList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport OrderList from '../OrderList'\n// import OrderList from '../OrderList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport './OrderPage.css'\nimport GoogleMap from '../GoogleMap'\nimport styled from 'styled-components'\nimport { Depot, Landfill, RouteQuery } from '../../types'\nimport RoutingService from '../../services/route_query'\n\n\nconst Spacing = styled.div`\n  margin-top: 2em;\n`\n\nconst OrderStyle = styled.div`\nmargin-bottom: 50px;\n`\n\nconst OrderPage = () => {\n    const dispatch = useDispatch()\n    const { initializeOrders, initializeLandfills, initializeDepots, initializeVehicles } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n    const [show_depots, setDepots] = useState<Depot[] | undefined>(undefined)\n    const [show_landfills, setLandfills] = useState<Landfill[] | undefined>(undefined)\n    const [date] = useState<Date>(new Date())\n\n    \n\n    useEffect(() => {\n        console.log('inside useEffect')\n        const elems = document.querySelectorAll('.datepicker')\n        // const date = new Date()\n        M.Datepicker.init(elems, { defaultDate: date, setDefaultDate: true, onSelect: (date) => onDateChange(date) })\n        if (region) {\n\n            initializeOrders(region, date.toDateString())\n            initializeDepots(region)\n            initializeLandfills(region)\n            initializeVehicles(region)\n\n        }\n\n    }, [region])\n\n    const orders = useSelector((state: State) => state.orders)\n    const landfills = useSelector((state: State) => state.landfills)\n    const depots = useSelector((state: State) => state.depots)\n    const vehicles = useSelector((state: State) => state.vehicles)\n\n\n\n\n\n    const displayLandfills = () => {\n        if (!show_landfills) {\n            setLandfills(landfills)\n        } else {\n            setLandfills(undefined)\n        }\n    }\n\n    const displayDepots = () => {\n        if (!show_depots) {\n            setDepots(depots)\n        } else {\n            setDepots(undefined)\n        }\n    }\n\n    const onDateChange = async (date: Date) => {\n        console.log('on date change')\n        const date_string = date.toDateString()\n\n        console.log(date_string)\n        if (region) {\n            await initializeOrders(region, date_string)\n\n        }\n\n    }\n\n    return (\n\n        <div>\n            <div className=\"row\">\n                <div className=\"col l3\">\n                    <label>\n                        <input type=\"checkbox\" id=\"show-landfill\" onChange={() => displayLandfills()} />\n                        <span>Display Landfills</span>\n                    </label>\n                </div>\n                <div className=\"col l3\">\n                    <label>\n                        <input type=\"checkbox\" onChange={() => displayDepots()} />\n                        <span>Display Depots</span>\n                    </label>\n                </div>\n            </div>\n            <GoogleMap orders={orders} landfills={show_landfills} depots={show_depots} />\n            <br />\n            <Spacing>\n                <div className=\"row\">\n                    <div className=\"col l3\">\n                        <input type=\"text\" className=\"datepicker\" placeholder='Select Date' />\n                    </div>\n\n                </div>\n            </Spacing>\n            <OrderStyle>\n                <OrderList />\n            </OrderStyle>\n\n        </div>\n\n    )\n}\n\n\n\nexport default OrderPage","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport styled from 'styled-components'\nimport { actionCreators, State } from '../state'\nimport './RegionSelector.css'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\n\n\n\nconst RegionSelector = () => {\n\n    console.log('inside Region Selector Component')\n\n    const dispatch = useDispatch()\n    const { initializeRegions,setRegion, createRegion, deleteRegion } = bindActionCreators(actionCreators, dispatch)\n\n\n    const [new_region, setNewRegion] = useState('')\n    const user_token = useSelector((state: State) => state.userToken)\n    const regions = useSelector((state: State) => state.regions)\n    const set_region = useSelector((state: State) => state.setRegion)\n\n\n    useEffect(() => {\n        // M.AutoInit()\n        const elems = document.querySelectorAll('.dropdown-trigger')\n        M.Dropdown.init(elems, { constrainWidth: false })\n\n        const add_region_modal = document.querySelector('#addRegionModal')\n        if (add_region_modal) {\n            M.Modal.init(add_region_modal)\n        }\n\n        console.log('inside useEffect for Region selector')\n        console.log(regions)\n\n\n        if (user_token) {\n            console.log(user_token)\n            console.log('regions', regions)\n            if (regions.length < 1) {\n                console.log('inside initialize regions')\n                initializeRegions()\n            } else if(!set_region){\n                console.log('inside set region')\n                setRegion(regions[0])\n            }\n\n        }\n\n    }, [regions])\n\n\n    const insertRegionTabs = () => {\n        return (\n            regions?.map(region =>\n                <li key={region.id}><a href=\"#!\" onClick={() => setRegion(region)}>{region.name}</a></li>\n            )\n        )\n    }\n\n    const onCreateRegion = async () => {\n        console.log('inside createRegion')\n        const new_region_object = { name: new_region }\n        await createRegion(new_region_object)\n        setNewRegion('')\n        \n    }\n\n    const openAddRegionModal = () => {\n        const modal_elem = document.getElementById('addRegionModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.open()\n        }\n    }\n\n    const onDeleteRegion = async () => {\n        console.log('inside onDeleteRegion')\n        if(set_region){\n            await deleteRegion(set_region)\n            setRegion(regions[0])\n        }\n    }\n\n\n    return (\n        <div>\n            <TopSpacing >\n                <div className=\"row right-align\">\n                    <div className=\"col offset l10 right-align\">\n                        <a className='dropdown-trigger btn' href='#' data-target='dropdown1'>{set_region?.name}</a>\n                    </div>\n                    <div className=\"col right-align\">\n                        <button className='btn-floating' onClick={openAddRegionModal}><i className=\"material-icons\">add</i></button>\n                    </div>\n                    {\n                        (set_region?.name !== 'Default') && <div className=\"col right-align\">\n                            <button className='btn-floating black' onClick={() => onDeleteRegion()}><i className=\"material-icons\">delete</i></button>\n                        </div>\n                    }\n\n\n                </div>\n            </TopSpacing>\n\n\n            <ul id='dropdown1' className='dropdown-content'>\n                {insertRegionTabs()}\n            </ul>\n\n\n            <div id=\"addRegionModal\" className=\"modal\" style={{ width: 30 }}>\n                <div className=\"modal-content\">\n                    <h6>Insert Region</h6>\n                    <input value={new_region} placeholder=\"New Region\" onChange={({ target }) => setNewRegion(target.value)} />\n                    <br />\n                    <div className=\"right row\">\n                        <div className=\"col s2\">\n                            <button className=\"btn modal-close\" onClick={() => onCreateRegion()}>Submit</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div>\n\n    )\n}\n\n\nexport default RegionSelector\n\n","import React, { useState, useEffect } from 'react'\nimport { Depot, Address } from '../types'\nimport { actionCreators } from '../state'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    depot: Depot,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditDepotForm = ({ depot, setActive }: prop) => {\n\n\n    if (!depot) {\n        return (<div></div>)\n    }\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState(depot.name)\n    const [street, setStreet] = useState(depot.street)\n    const [city, setCity] = useState(depot.city)\n    const [state, setState] = useState(depot.state)\n    const [zipcode, setZipcode] = useState(depot.zipcode.toString())\n    const [latitude, setLatitude] = useState(depot.latitude.toString())\n    const [longitude, setLongitude] = useState(depot.longitude.toString())\n    const [active, setStatus] = useState(depot.active)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n    const dispatch = useDispatch()\n    const { updateDepot } = bindActionCreators(actionCreators, dispatch)\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: `${response.message}` })\n        }\n        const lat_lng = response.data as LatLng\n        setCoord(lat_lng)\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.open()\n        }\n    }\n\n\n\n    const submit = () => {\n        console.log('inside on submit')\n\n        if (name === '' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = depot.id\n            const new_depot: Depot = { id, name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'user_id': depot.user_id, 'region_id': depot.region_id, 'type':'Depot' }\n            updateDepot(new_depot)\n            M.toast({ html: 'Updated Depot' })\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Depot</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditDepotForm\n\n","import React, { useState, useEffect } from 'react'\nimport { NewDepot, Address } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateDepotForm = ({setActive }: prop) => {\n\n    const dispatch = useDispatch()\n    const { createDepot } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if(!region){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [zipcode, setZipcode] = useState('')\n    const [latitude, setLatitude] = useState('')\n    const [longitude, setLongitude] = useState('')\n    const [active, setStatus] = useState(false)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        }else{\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(name==='' || street==='' || city==='' || state==='' || zipcode==='' || latitude==='' || longitude===''){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const new_depot: NewDepot = { name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'region_id':region.id, 'type': 'Depot' }\n            console.log(new_depot)\n            await createDepot(new_depot)\n            M.toast({html: 'Created New Depot'})\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Depot</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)}/>\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateDepotForm\n\n","import React, { useState } from 'react'\nimport { Depot } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport EditDepotForm from './EditDepotForm'\nimport CreateDepotForm from './CreateDepotForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst DepotList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateDepot } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const depots = useSelector((state: State) => state.depots)\n    const [depot, setdepot] = useState<Depot>(depots[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changedepotStatus = (depot: Depot) => {\n        console.log('inside on click')\n        const new_depot = { ...depot }\n        if (depot.active) {\n            new_depot.active = false\n        } else {\n            new_depot.active = true\n        }\n        updateDepot(new_depot)\n    }\n\n\n\n    const editdepot = (depot: Depot) => {\n        setdepot(depot)\n        setEditFormActive(true)\n    }\n\n    const onDeletedepot = (depot: Depot) => {\n        console.log('inside delete depot')\n        setdepot(depot)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreatedepot = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertdepots = () => {\n        return (\n            depots.map(depot =>\n                <tr key={depot.id}>\n                    <td>{depot.name}</td>\n                    <td>{depot.street}</td>\n                    <td>{depot.city}</td>\n                    <td>{depot.zipcode}</td>\n                    <td>{depot.latitude}</td>\n                    <td>{depot.longitude}</td>\n                    <td>{(depot.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changedepotStatus(depot)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changedepotStatus(depot)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editdepot(depot)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeletedepot(depot)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreatedepot()}>New depot</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Street</th>\n                            <th>City</th>\n                            <th>Zipcode</th>\n                            <th>Latitude</th>\n                            <th>Longitude</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertdepots()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditDepotForm depot={depot} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateDepotForm setActive={setCreateFormActive}  />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} depot={depot} />}\n\n        </div>\n    )\n}\n\n\nexport default DepotList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport DepotList from '../DepotList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport GoogleMap from '../GoogleMap'\n\n\n\nconst DepotPage = () => {\n    console.log('inside depot page')\n\n    const dispatch = useDispatch()\n    const { initializeDepots } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeDepots(region)\n        }\n    }, [region])\n\n    const depots = useSelector((state: State) => state.depots)\n\n    return (\n\n        <div>\n            <GoogleMap depots={depots} />\n            <DepotList />\n        </div>\n\n    )\n}\n\n\n\nexport default DepotPage","import axios from 'axios'\nimport { RouteQuery, Route_Item } from '../types'\n\nconst createRoutesUrl = 'https://ldryzqul7l.execute-api.us-west-1.amazonaws.com/createRoutes'\nconst getRoutesUrl = 'https://ldryzqul7l.execute-api.us-west-1.amazonaws.com/getRoutes'\nconst analyzeRoutesUrl = 'https://ldryzqul7l.execute-api.us-west-1.amazonaws.com/analyzeRoute'\n\n\nconst createRoutes = async (route_query: RouteQuery) => {\n    const response = await axios.post(createRoutesUrl, route_query)\n    return response.data\n}\n\n\nconst getRoutes = async () => {\n    const response = await axios.get(getRoutesUrl)\n    return response.data\n}\n\nconst analyzeRoute = async (route_items: Route_Item[]) => {\n    console.log('inside analyzeRoute Service')\n    console.log(JSON.stringify(route_items, null, 2))\n    const response = await axios.post(analyzeRoutesUrl, route_items)\n    return response.data\n\n\n}\n\n\n\n\nexport default { createRoutes, getRoutes, analyzeRoute }","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { DbResponse, Depot, Landfill, NewTruckRoute, Order, Region, RouteQuery } from '../types'\nimport RoutingService from '../services/route_query'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actionCreators, State } from '../state'\nimport { bindActionCreators } from 'redux'\nimport route from '../services/route'\n\n\nconst Spacing = styled.div`\n  margin-top: 2em;\n`\n\nconst DataHeader = styled.div`\n    font-size:16px;\n    font-weight:bold;\n`\n\n\n\ninterface prop {\n    date: Date,\n    assignedOrders: Order[],\n\n}\n\n\nconst RouteItemSummaryList = ({ date, assignedOrders }: prop) => {\n\n    const dispatch = useDispatch()\n    const { createTruckRoute} = bindActionCreators(actionCreators, dispatch)\n\n    const orders:Order[] = useSelector((state: State) => state.orders)\n    const landfills:Landfill[] = useSelector((state: State) => state.landfills)\n    const depots:Depot[] = useSelector((state: State) => state.depots)\n    const region:Region | null = useSelector((state: State) => state.setRegion)\n\n\n    if(!region){\n        return <div></div>\n    }\n\n    const [num_of_routes, setNumberOfRoutes] = useState(1)\n\n\n\n    useEffect(() => {\n        const elems = document.querySelectorAll('.collapsible')\n        M.Collapsible.init(elems, {})\n        M.AutoInit()\n    }, [])\n\n    const insertOrders = () => {\n\n\n\n        const orders_info = []\n        for (let i = 0; i < orders.length; i++) {\n\n            const current_order = orders[i]\n            const index = assignedOrders.findIndex(order => order.id === current_order.id)\n\n\n            if (index === -1) {\n                let order_type = ''\n                if (date.toDateString() === current_order.pickup_date) {\n                    order_type = 'Pickup'\n                } else {\n                    order_type = 'Delivery'\n                }\n\n                const data = {\n                    'id': current_order.id,\n                    'customer_name': current_order.name,\n                    'order_type': order_type,\n                    'dumpster_size': current_order.dumpster_size\n                }\n                orders_info.push(data)\n            }\n\n\n\n        }\n\n        return (\n            orders_info.map(order_info =>\n                <tr key={order_info.id}>\n                    <td>\n                        <div className=\"col l10\">\n                            {order_info.customer_name} : {order_info.dumpster_size} Yard {order_info.order_type}\n                        </div>\n                        <div className=\"col l2\">\n                            <label>\n                                <input type=\"checkbox\" className=\"checkbox\" id={order_info.id} />\n                                <span></span>\n                            </label>\n                        </div>\n\n                    </td>\n\n                </tr>\n\n\n            )\n        )\n    }\n\n    const insertDepots = () => {\n        return (\n            depots.map(depot => {\n\n                if (depot.active) {\n                    return (\n                        <tr key={depot.id}>\n                            <td>\n                                <div className=\"row\">\n                                    <DataHeader>\n                                        {depot.name}\n                                    </DataHeader>\n                                </div>\n                                <div className=\"row\">\n                                    {depot.street} {depot.city}\n                                </div>\n                                <br />\n                            </td>\n\n                        </tr>\n                    )\n                } else {\n                    return\n                }\n            }\n            )\n        )\n    }\n\n\n    const insertLandfills = () => {\n        return (\n            landfills.map(landfill => {\n                if (landfill.active) {\n                    return (\n                        <tr key={landfill.id}>\n                            <td>\n                                <div className=\"row\">\n                                    <DataHeader>\n                                        {landfill.name}\n                                    </DataHeader>\n                                </div>\n                                <div className=\"row\">\n                                    {landfill.street} {landfill.city}\n                                </div>\n                                <br />\n                            </td>\n\n                        </tr>\n                    )\n                } else {\n                    return\n                }\n            }\n            )\n        )\n    }\n\n\n    const computeRoutes = async () => {\n\n        const elements = document.getElementsByClassName('checkbox')\n\n        const orders_to_analyze = [] as Array<Order>\n\n        for (let i = 0; i < elements.length; i++) {\n            const current_element = elements[i] as HTMLInputElement\n            if (current_element.checked == true) {\n                const order_id = current_element.id\n                const order_to_analyze = orders.find(order => order.id === order_id)\n                if (order_to_analyze) {\n                    orders_to_analyze.push(order_to_analyze)\n                }\n\n            }\n        }\n\n\n\n\n\n        M.toast({ html: 'Sending Request to Create Routes. This is still a work in progress' })\n        const route_query: RouteQuery = { landfills, depots, orders: orders_to_analyze, 'date': date.toDateString(), num_of_routes }\n        const route_response = await RoutingService.createRoutes(route_query) as DbResponse\n\n        console.log('logging the route_response')\n        console.log(route_response)\n\n        const routes = route_response.routes\n\n        for(let i=0;i<num_of_routes;i++){\n            const current_route = routes[i]\n\n            const route_objects = current_route.route_objects\n\n            const route_types = [] as string[]\n            const route_object_ids = [] as string []\n            route_objects.forEach(route_object => {\n                route_types.push(route_object.type)\n                route_object_ids.push(route_object.id)\n            })\n\n            const new_truck_route: NewTruckRoute = {\n                route_types: route_types,\n                route_items: route_object_ids,\n                distances: current_route.distances,\n                durations: current_route.durations,\n                total_distance: current_route.total_distance,\n                total_duration: current_route.total_duration,\n                date: date.toDateString(),\n                region_id: region.id\n\n            }\n            console.log('about to create a new truck route')\n            console.log(new_truck_route)\n            \n            await createTruckRoute(new_truck_route)\n        }\n\n    }\n\n\n    return (\n        <div>\n            <ul className=\"collapsible\">\n                <li>\n                    <div className=\"collapsible-header\"><i className=\"material-icons\">filter_drama</i>Unassigned Orders</div>\n                    <div className=\"collapsible-body\">\n                        <table>\n                            <tbody>\n                                {insertOrders()}\n                                <Spacing />\n                                <div className=\"input-field\">\n                                    <input placeholder=\"Number of Routes\" id=\"first_name\" type=\"number\" className=\"validate\" onChange={({ target }) => setNumberOfRoutes(parseInt(target.value))} />\n                                </div>\n                                <button className='btn black offset-s10' onClick={() => computeRoutes()} >Compute Routes</button>\n\n                            </tbody>\n                        </table>\n                    </div>\n                </li>\n                <li>\n                    <div className=\"collapsible-header\"><i className=\"material-icons\">place</i>Depots</div>\n                    <div className=\"collapsible-body\">\n                        <table>\n                            <tbody>\n                                {insertDepots()}\n                            </tbody>\n                        </table>\n\n                    </div>\n                </li>\n                <li>\n                    <div className=\"collapsible-header\"><i className=\"material-icons\">whatshot</i>Landfills</div>\n                    <div className=\"collapsible-body\">\n                        <table>\n                            <tbody>\n                                {insertLandfills()}\n                            </tbody>\n                        </table>\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n    )\n\n}\n\n\nexport default RouteItemSummaryList","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport styled from 'styled-components'\nimport { actionCreators, State } from '../state'\nimport { Order, Landfill, Depot, Route_Item, TruckRoute } from '../types'\n\nconst Spacing = styled.div`\n  margin-top: 2em;\n`\n\nconst DataHeader = styled.div`\n    font-size:16px;\n    font-weight:bold;\n`\n\n\n\ninterface prop {\n    date: Date,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n    assignedOrders: Order[],\n    setAssignedOrders: React.Dispatch<React.SetStateAction<Order[]>>\n    truckRoute: TruckRoute\n}\n\nconst AddRouteItem = ({ date,  assignedOrders, setAssignedOrders, setActive, truckRoute }: prop) => {\n\n\n    const dispatch = useDispatch()\n    const { updateTruckRoute} = bindActionCreators(actionCreators, dispatch)\n    const orders:Order[] = useSelector((state: State) => state.orders)\n    const landfills:Landfill[] = useSelector((state: State) => state.landfills)\n    const depots:Depot[] = useSelector((state: State) => state.depots)\n\n    useEffect(() => {\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n    },[])\n\n    const insertOrders = () => {\n\n\n        // const orders_info = []\n        for (let i = 0; i < orders.length; i++) {\n            const current_order = orders[i]\n            let order_type = ''\n            if (date.toDateString() === current_order.pickup_date) {\n                order_type = 'Pickup'\n            } else {\n                order_type = 'Delivery'\n            }\n\n            current_order['order_type'] = order_type\n        }\n\n\n\n\n        const unassigned_orders = []\n        for (let i = 0; i < orders.length; i++) {\n            const current_order = orders[i]\n            const index = assignedOrders.findIndex(order => order.id === current_order.id)\n            if (index === -1) {\n                unassigned_orders.push(current_order)\n            }\n\n        }\n\n        return (\n            unassigned_orders.map(order =>\n                < tr key={order.id} >\n                    <td>{order.name}</td>\n                    <td>{order.dumpster_size}</td>\n                    <td>{order.order_type}</td>\n                    <td><button className=\"btn blue darken-4\" onClick={() => selectRouteItem(order)}><i className=\"large material-icons\">add</i></button></td>\n                </tr >\n\n\n            )\n        )\n\n    }\n\n    const insertDepots = () => {\n\n\n        return (\n            depots.map(depot => {\n                if (depot.active) {\n                    return (\n                        <tr key={depot.id}>\n                            <td>{depot.name}</td>\n                            <td>{depot.street}</td>\n                            <td>{depot.city}</td>\n                            <td><button className=\"btn blue darken-4\" onClick={() => selectRouteItem(depot)}><i className=\"large material-icons\">add</i></button></td>\n                        </tr>\n                    )\n                }\n            }\n            )\n        )\n    }\n\n\n    const insertLandfills = () => {\n        return (\n            landfills.map(landfill => {\n                if (landfill.active) {\n                    return (\n                        <tr key={landfill.id}>\n                            <td>{landfill.name}</td>\n                            <td>{landfill.street}</td>\n                            <td>{landfill.city}</td>\n                            <td><button className=\"btn blue darken-4\" onClick={() => selectRouteItem(landfill)}><i className=\"large material-icons\">add</i></button></td>\n                        </tr>\n                    )\n                }\n            }\n            )\n        )\n    }\n\n    const selectRouteItem = async (route_item: Route_Item) => {\n        const updated_truck_route = {...truckRoute}\n\n        const new_assigned_orders = [...assignedOrders]\n        if (route_item.type === 'Order') {\n            new_assigned_orders.push(route_item)\n            setAssignedOrders(new_assigned_orders)\n        }\n\n\n        updated_truck_route.route_types.push(route_item.type)\n        updated_truck_route.route_items.push(route_item.id)\n\n        await updateTruckRoute(updated_truck_route)\n\n        const modal_elem = document.getElementById('modal1')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n\n        setActive(false)\n\n    }\n\n\n\n    return (\n        <div id=\"modal1\" className=\"modal\">\n            <div className=\"modal-content\">\n                <DataHeader>Unassigned Orders</DataHeader>\n                <table className=\"striped\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Dumpster Size</th>\n                            <th>Order Type</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {insertOrders()}\n                    </tbody>\n                </table>\n                <Spacing />\n                <DataHeader>Landfills</DataHeader>\n                <table className=\"striped\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Street</th>\n                            <th>City</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {insertLandfills()}\n                    </tbody>\n                </table>\n                <Spacing />\n                <DataHeader>Depots</DataHeader>\n                <table className=\"striped\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Street</th>\n                            <th>City</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {insertDepots()}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a>\n            </div>\n        </div>\n\n    )\n\n\n}\n\nexport default AddRouteItem\n","import React, { useEffect, useState } from 'react'\nimport AddRouteItem from './AddRouteItem'\nimport M from 'materialize-css'\nimport { Order, Landfill, Depot, Route_Item, TruckRoute, Region } from '../types'\nimport styled from 'styled-components'\nimport RouteService from '../services/route_query'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actionCreators, State } from '../state'\nimport { bindActionCreators } from 'redux'\n\n\nconst Spacing = styled.div`\n  margin-top: 2em;\n`\n\n\ninterface Returning_Route_Data {\n    distance: number,\n    duration: number\n}\n\n\n\ninterface prop {\n    date: Date,\n    assignedOrders: Order[],\n    setAssignedOrders: React.Dispatch<React.SetStateAction<Order[]>>\n\n}\n\nconst RouteLists = ({ date, assignedOrders, setAssignedOrders }: prop) => {\n\n\n\n    const dispatch = useDispatch()\n    const { createTruckRoute, updateTruckRoute, deleteTruckRoute } = bindActionCreators(actionCreators, dispatch)\n\n    const truck_routes: TruckRoute[] = useSelector((state: State) => state.routes)\n    const region: Region | null = useSelector((state: State) => state.setRegion)\n    const orders: Order[] = useSelector((state: State) => state.orders)\n    const landfills: Landfill[] = useSelector((state: State) => state.landfills)\n    const depots: Depot[] = useSelector((state: State) => state.depots)\n\n\n    if (!region) {\n        return (<div></div>)\n    }\n\n    const [addRouteItemActive, setAddRouteItemActive] = useState(false)\n    const [truckRoute, setTruckRoute] = useState<TruckRoute>()\n\n\n\n    useEffect(() => {\n        const elems = document.querySelectorAll('.collapsible')\n        M.Collapsible.init(elems, {})\n\n    })\n\n\n    const addRouteItem = (truck_route:TruckRoute) => {\n        console.log('setting the route item to active')\n        setTruckRoute(truck_route)\n        setAddRouteItemActive(true)\n    }\n\n    const addTruckRoute = () => {\n\n\n        const new_truck_route = {\n            route_types: [],\n            route_items: [],\n            distances: [],\n            durations: [],\n            total_distance: 0.0,\n            total_duration: 0.0,\n            date: date.toDateString(),\n            region_id: region.id,\n        }\n\n        createTruckRoute(new_truck_route)\n\n    }\n\n    const fillRouteItems = (route_items_ids:string[], route_types:string[]) => {\n        \n        const route_items:Route_Item[] = []\n        for(let i=0;i<route_types.length;i++){\n            const route_item_id = route_items_ids[i]\n            const route_type = route_types[i]\n            \n            let route_item = undefined\n            if(route_type==='Order'){\n                route_item = orders.find(order => order.id === route_item_id)\n            }else if (route_type==='Landfill'){\n                route_item = landfills.find(landfill => landfill.id === route_item_id)\n            }else if (route_type ==='Depot'){\n                route_item = depots.find(depot => depot.id === route_item_id)\n            }\n\n            if(route_item){\n                route_items.push(route_item)\n            }\n        }\n\n        return route_items\n    }\n\n    const analyzeRouteItems = async (truck_route:TruckRoute) => {\n        const route_items = fillRouteItems(truck_route.route_items, truck_route.route_types)\n        const route_data = await RouteService.analyzeRoute(route_items) as Returning_Route_Data[]\n\n        const distances = []\n        const durations = []\n        let total_distance = 0.0\n        let total_duration = 0.0\n\n        for (let i = 0; i < route_data.length; i++) {\n            const current_route_data = route_data[i]\n            distances.push(current_route_data.distance)\n            durations.push(current_route_data.duration)\n            total_distance += current_route_data.distance\n            total_duration += current_route_data.duration\n        }\n\n        truck_route.distances = distances\n        truck_route.durations = durations\n        truck_route.total_distance = total_distance\n        truck_route.total_duration = total_duration\n\n        await updateTruckRoute(truck_route)\n\n    }\n\n\n\n\n    const deleteRouteItem = async (index:number, route_list_id: string) => {\n\n        const truck_route = truck_routes.find(truck_route => truck_route.id === route_list_id)\n        if(truck_route){\n            delete truck_route.route_items[index]\n            delete truck_route.route_types[index]\n            await updateTruckRoute(truck_route)\n        }\n\n\n    }\n\n\n    const getJSXObject = (route_item_id: string, route_item_type: string, truck_route_id: string, index:number) => {\n\n        const new_id = route_item_id + Math.random().toString()\n\n        if (route_item_type === 'Order') {\n\n\n\n            const route_item = orders.find(order => order.id === route_item_id)\n\n            \n            if (route_item) {\n\n                let order_type = ''\n                if (date.toDateString() === route_item.pickup_date) {\n                    order_type = 'Pickup'\n                } else {\n                    order_type = 'Delivery'\n                }\n\n\n                return (\n                    <tr key={new_id}>\n                        <td>{order_type}</td>\n                        <td>{route_item.dumpster_size} Yard </td>\n                        <td>{route_item.street}</td>\n                      \n                        <td><button className=\"btn-floating black\" onClick={() => deleteRouteItem(index, truck_route_id)}><i className=\"material-icons\">remove</i></button></td>\n                    </tr> \n                )\n            }\n\n        } else if (route_item_type === 'Landfill') {\n\n            const route_item = landfills.find(landfill => landfill.id === route_item_id)\n            if (route_item) {\n                return (\n                    <tr key={new_id}>\n                        <td>Landfill</td>\n                        <td>{route_item.name}</td>\n                        <td>{route_item.street}</td>\n                      \n                        <td><button className=\"btn-floating black\" onClick={() => deleteRouteItem(index, truck_route_id)}><i className=\"material-icons\">remove</i></button></td>\n                    </tr>\n                )\n            }\n        } else if (route_item_type === 'Depot') {\n\n\n            const route_item = depots.find(depot => depot.id === route_item_id)\n            if (route_item) {\n                return (\n                    <tr key={new_id}>\n                        <td>Depot</td>\n                        <td>{route_item.name}</td>\n                        <td><td>{route_item.street}</td></td>\n                      \n                        <td><button className=\"btn-floating black\" onClick={() => deleteRouteItem(index, truck_route_id)}><i className=\"material-icons\">remove</i></button></td>\n                    </tr>\n                )\n            }\n\n        }\n\n    }\n\n    const insertRouteItems = (truck_route: TruckRoute) => {\n        const route_items = truck_route.route_items\n        const route_types = truck_route.route_types\n\n\n        const jsx_list = []\n        for (let i = 0; i < route_items.length; i++) {\n\n            const jsx_object = getJSXObject(route_items[i], route_types[i], truck_route.id, i)\n            jsx_list.push(jsx_object)\n        }\n        return jsx_list\n        // return (route_items.map(route_item_id => getJSXObject(route_item_id)))\n\n    }\n\n\n\n    const insertRouteData = (truck_route:TruckRoute) => {\n\n\n        const hours = Math.floor(truck_route.total_duration / 3600)\n        const remainder_seconds = truck_route.total_duration % 3600\n        const minutes = Math.floor(remainder_seconds / 60)\n\n        let minute_str = ''\n        if (minutes < 10) {\n            minute_str = '0' + minutes.toString()\n        } else {\n            minute_str = minutes.toString()\n        }\n\n\n        const miles = (truck_route.total_distance * 0.000621371).toFixed(2)\n\n\n        return (\n            <div className=\"row\">\n                <div className=\"col l6\">\n                    Total Duration: {`${hours}:${minute_str}`}\n                </div>\n                <div className=\"col l6\">\n                    Total Distance: {`${miles} miles`}\n\n                </div>\n            </div>\n\n        )\n    }\n\n    const insertRouteLists = () => {\n        return (\n            truck_routes.map(truck_route =>\n                <div key={truck_route.id}>\n                    <div className=\"row\">\n                        <div className=\"col l11\">\n                            <ul className=\"collapsible\">\n\n                                <li className=\"center-align\">\n                                    <div className=\"collapsible-header\">Route</div>\n                                    <div className=\"collapsible-body\">\n\n                                        {truck_route.durations.length > 0 ? insertRouteData(truck_route) : <div></div>}\n                                        <table className=\"striped\">\n                                            <tbody>\n                                                {insertRouteItems(truck_route)}\n                                                <tr>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td></td>\n                                                    <td> <a className=\"red btn-floating\" onClick={() => addRouteItem(truck_route)}><i className=\"material-icons\">add</i></a>                                                 </td>\n                                                </tr>\n                                            </tbody>\n\n                                        </table>\n                                        <Spacing />\n                                        <div className=\"row\">\n\n                                            <div className=\"col l4\">\n                                                <a className=\"btn blue lighten-3\" onClick={() => analyzeRouteItems(truck_route)}>Analyze Route</a>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <div className=\"col l1\">\n                            <button className=\"btn black\" onClick={() => deleteTruckRoute(truck_route)}><i className=\"material-icons\">delete</i></button>\n                        </div>\n                    </div>\n                </div>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <button className='btn grey darken-3' onClick={() => addTruckRoute()} >Add Route</button>\n            {insertRouteLists()}\n            {addRouteItemActive && truckRoute && <AddRouteItem date={date} setActive={setAddRouteItemActive} assignedOrders={assignedOrders} setAssignedOrders={setAssignedOrders} truckRoute={truckRoute}/>}\n        </div>\n    )\n\n}\n\n\nexport default RouteLists","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import VehicleList from '../VehicleList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\n\nimport GoogleMap from '../GoogleMap'\n\nimport RouteItemSummaryList from '../RouteItemSummaryList'\nimport styled from 'styled-components'\n\nimport { Order, TruckRoute } from '../../types'\n\nimport RouteLists from '../RouteLists'\nimport orderReducer from '../../state/reducers/orderReducer'\n\nconst Spacing = styled.div`\n  margin-top: 2em;\n`\n\n\nconst RoutePage = () => {\n\n    const dispatch = useDispatch()\n\n    \n\n\n\n\n    const { initializeOrders, initializeLandfills, initializeDepots, initializeVehicles, initializeTruckRoutes } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n    const truck_routes:TruckRoute[] = useSelector((state: State) => state.routes)\n    const orders:Order[] = useSelector((state: State) => state.orders)\n    const [date, setDate] = useState<Date>(new Date())\n    const [assignedOrders, setAssignedOrders] = useState<Order[]>([])\n\n\n\n    useEffect(() => {\n        console.log('inside useEffect')\n        const elems = document.querySelectorAll('.datepicker')\n        // const date = new Date()\n        M.Datepicker.init(elems, { defaultDate: date, setDefaultDate: true, onSelect: (date) => onDateChange(date) })\n        if (region) {\n\n            initializeOrders(region, date.toDateString())\n            initializeTruckRoutes(region, date.toDateString())\n            initializeDepots(region)   \n            initializeLandfills(region)\n            initializeVehicles(region)\n\n\n        }\n        \n\n    }, [region])\n\n\n    useEffect(() => {\n        const temp_assigned_orders = []\n        for(let i=0;i< truck_routes.length;i++){\n            const truck_route = truck_routes[i]\n            const route_item_ids = truck_route.route_items\n            for( let j=0;j<route_item_ids.length;j++){\n                const route_item_id = route_item_ids[j]\n                const assigned_order = orders.find(order => order.id === route_item_id)\n                if(assigned_order){\n                    temp_assigned_orders.push(assigned_order)\n                }\n            }\n        }\n        setAssignedOrders(temp_assigned_orders)\n    }, [truck_routes])\n\n\n    const onDateChange = async (date: Date) => {\n        const date_string = date.toDateString()\n        if (region) {\n            await initializeOrders(region, date_string)\n            await initializeTruckRoutes(region, date_string)\n        }\n        setDate(date)\n\n    }\n\n\n\n\n\n    return (\n\n        <div>\n            <GoogleMap />\n            <Spacing />\n            <div className=\"row\">\n                <div className=\"col l3\">\n                    <input type=\"text\" className=\"datepicker\" placeholder='Select Date' />\n                </div>\n            </div>\n            <div className='row'>\n                <div className='col l4'>\n                    <RouteItemSummaryList  date={date} assignedOrders={assignedOrders} />\n                </div>\n                <div className='col l8 left-align' id='route-list'>\n                    <RouteLists  date={date} assignedOrders={assignedOrders} setAssignedOrders={setAssignedOrders} />\n                </div>\n            </div>\n\n        </div>\n\n    )\n}\n\n\n\nexport default RoutePage","import React from 'react'\nimport SideNav from '../SideNav/SideNav'\nimport LandfillPage from '../LandfillPage/LandfillPage'\nimport TruckDriverPage from '../TruckDriverPage/TruckDriverPage'\nimport VehiclePage from '../VehiclePage/VehiclePage'\nimport OrderPage from '../OrderPage/OrderPage'\nimport './HomePage.css'\nimport RegionSelector from '../RegionSelector'\nimport { Route, Routes } from 'react-router-dom'\nimport DepotPage from '../DepotPage/DepotPage'\nimport RoutePage from '../RoutePage/RoutePage'\n// import { actionCreators, State } from '../../state'\n// import { bindActionCreators } from 'redux'\n// import { useDispatch, useSelector } from 'react-redux'\n\nconst HomePage = () => {\n\n    // const dispatch = useDispatch()\n    // const { initializeRegions, setRegion } = bindActionCreators(actionCreators, dispatch)\n    // const regions = useSelector((state: State) => state.regions)\n    // const set_region = useSelector((state: State) => state.setRegion)\n\n    // useEffect(() => {\n    //     initializeRegions()\n    //     if(!set_region){\n    //         setRegion(regions[0])\n    //     }\n       \n    // },[regions])\n\n    return (<div>\n        <SideNav />\n        <main>\n            <div className=\"container\">\n                <RegionSelector />\n                <Routes>\n                    <Route path=\"/route\" element={<RoutePage />} />\n                    <Route path=\"/order\" element={<OrderPage />} />\n                    <Route path=\"/vehicle\" element={<VehiclePage />} />\n                    <Route path=\"/depot\" element={<DepotPage />} />\n                    <Route path=\"/driver\" element={<TruckDriverPage />} />\n                    <Route path=\"/landfill\" element={<LandfillPage />} />\n                    <Route path=\"/\" element={<LandfillPage />} />\n                </Routes>\n\n            </div>\n        </main>\n\n\n    </div>)\n}\n\nexport default HomePage\n","import React, { useEffect } from 'react'\nimport './App.css'\nimport Login from './components/LoginPage/Login'\nimport {\n    BrowserRouter as Router, Route, Routes\n} from 'react-router-dom'\nimport { actionCreators, State } from './state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport HomePage from './components/HomePage/HomePage'\nimport { bindActionCreators } from 'redux'\nimport { setToken } from './services/config'\nimport { Region, UserToken } from './types'\n\n\n\nfunction App() {\n\n    const user_token = useSelector((state: State) => state.userToken)\n    const dispatch = useDispatch()\n    const { setUserToken, setRegion } = bindActionCreators(actionCreators, dispatch)\n\n    useEffect(() => {\n        const user_token = window.localStorage.getItem('user_token')\n        const region = window.localStorage.getItem('region')\n        if (user_token) {\n            console.log('inside setting the user token')\n            const parsed_user_token: UserToken = JSON.parse(user_token)\n            setUserToken(parsed_user_token)\n            if(region){\n                const parsed_region: Region = JSON.parse(region)\n                setRegion(parsed_region)\n            }\n        }\n    }, [])\n\n\n    return (\n        <Router>\n            <div className=\"App\">\n\n                <Routes>\n                    {!user_token && <Route path=\"/*\" element={<Login />} />}\n\n                    {user_token && <Route path=\"/*\" element={<HomePage />} />}\n\n                </Routes>\n\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './state/store'\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}