{"version":3,"sources":["state/action-types/index.ts","components/SignUpForm/images/logo.svg","components/SignUpForm/SignUpForm.tsx","components/SignInForm/images/logo.svg","services/config.ts","services/landfills.ts","services/login.ts","services/regions.ts","services/driver.ts","services/depots.ts","services/vehicle.ts","services/order.ts","state/action-creators/index.ts","state/reducers/landfillReducer.ts","state/reducers/userTokenReducer.ts","state/reducers/regionReducer.ts","state/reducers/setRegionReducer.ts","state/reducers/driverReducer.ts","state/reducers/depotReducer.ts","state/reducers/vehicleReducer.ts","state/reducers/orderReducer.ts","state/reducers/index.ts","state/store.ts","components/SignInForm/SignInForm.tsx","components/LoginPage/Login.tsx","components/SideNav/images/icon.png","components/SideNav/SideNav.tsx","services/geocode.ts","components/EditLandfillForm.tsx","components/CreateLandfillForm.tsx","components/ConfirmDelete.tsx","components/LandfillList.tsx","components/GoogleMap.tsx","utils/enums.ts","components/LandfillPage/LandfillPage.tsx","components/CreateDriverForm.tsx","components/EditDriverForm.tsx","components/DriverList.tsx","components/TruckDriverPage/TruckDriverPage.tsx","components/CreateVehicleForm.tsx","components/EditVehicleForm.tsx","components/VehicleList.tsx","components/VehiclePage/VehiclePage.tsx","components/CreateOrderForm.tsx","components/OrderInfoForm.tsx","components/EditOrderForm.tsx","components/OrderList.tsx","components/OrderPage/OrderPage.tsx","components/RegionSelector.tsx","components/EditDepotForm.tsx","components/CreateDepotForm.tsx","components/DepotList.tsx","components/DepotPage/DepotPage.tsx","components/RoutePage/RoutePage.tsx","components/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["ActionType","SignUpForm","className","src","logo","alt","id","name","autoComplete","type","maxLength","placeholder","autoCapitalize","value","to","token","setToken","newToken","baseUrl","getByRegion","region","a","url","config","headers","Authorization","axios","get","response","data","getAll","console","log","put","landfill","deleteLandfill","delete","createNew","post","login","login_info","remove","driver","deleteDriver","depot","deleteDepot","vehicle","deleteVehicle","getByRegionAndDate","date","order","deleteOrder","setRegion","window","localStorage","setItem","JSON","stringify","SET_REGION","initializeRegions","dispatch","regionService","regions","INIT_REGIONS","initializeLandfills","landfillService","landfills","INIT_LANDFILLS","initializeDrivers","driverService","drivers","INIT_DRIVERS","initializeDepots","depotService","depots","INIT_DEPOTS","initializeVehicles","vehicleService","vehicles","INIT_VEHICLES","initializeOrders","orderService","orders","INIT_ORDERS","createLandfill","new_landfill","ADD_LANDFILL","createDepot","new_depot","ADD_DEPOT","createDriver","new_driver","ADD_DRIVER","createVehicle","new_vehicle","ADD_VEHICLE","createOrder","new_order","ADD_ORDER","createRegion","new_region","ADD_REGION","updateLandfill","updated_landfill","UPDATE_LANDFILL","updateDriver","updated_driver","UPDATE_DRIVER","updateVehicle","updated_vehicle","UPDATE_VEHICLE","updateDepot","updated_depot","UPDATE_DEPOT","updateOrder","updated_order","UPDATE_ORDER","DELETE_LANDFILL","DELETE_DRIVER","DELETE_VEHICLE","DELETE_DEPOT","deleteRegion","DELETE_REGION","DELETE_ORDER","loginUser","loginService","user_data","SET_USER_TOKEN","setUserToken","user_token","initialState","landfillReducer","state","action","changed_landfill","map","filter","userTokenReducer","regionReducer","setRegionReducer","driverReducer","changed_driver","depotReducer","changed_depot","vehicleReducer","changed_vehicle","orderReducer","changed_order","reducers","combineReducers","userToken","store","createStore","compose","applyMiddleware","thunk","composeWithDevTools","SignInForm","useDispatch","navigate","useNavigate","bindActionCreators","actionCreators","useState","email","setEmail","password","setPassword","handleLogin","event","preventDefault","username","M","toast","html","onSubmit","onChange","target","Login","path","element","SideNav","useEffect","AutoInit","href","icon","onClick","clear","address","street_split","street","split","parsed_street","reduce","prev_value","current_value","city","zipcode","process","status","lat_lng","results","geometry","location","formatted_response","message","error_message","EditLandfillForm","setActive","modal_1","document","querySelector","Modal","init","onCloseEnd","open","geo_modal","setName","setStreet","setCity","setState","toString","setZipcode","latitude","setLatitude","longitude","setLongitude","active","setStatus","lat","lng","setCoord","geoLocate","parseInt","geocode","modal_elem","getElementById","getInstance","htmlFor","parseFloat","user_id","region_id","close","submit","toFixed","CreateLandfillForm","useSelector","ConfirmDelete","React","modal","dismissible","handleConfirmation","TopSpacing","styled","div","LandfillList","setLandfill","editFormActive","setEditFormActive","createFormActive","setCreateFormActive","confirmDeleteActive","setConfirmDeleteActive","changeLandfillStatus","checked","editLandfill","onDeleteLandfill","landfill_icon","depot_icon","order_icon","render","Map","callback","dependencies","onIdle","children","style","options","ref","setMap","current","google","maps","setOptions","useDeepCompareMemoize","forEach","eventName","clearListeners","addListener","child","Marker","marker","setMarker","deepCompareEqualsForMaps","createCustomEqual","deepEqual","b","isLatLngLiteral","LatLng","equals","GoogleMap","DUMPSTER_SIZES","zoom","setZoom","center","setCenter","formatOrderLabel","dumpster_size","delivery_date","pickup_date","apiKey","e","latLng","m","getZoom","getCenter","toJSON","flexGrow","height","latlng","position","title","LandfillPage","CreateDriverForm","phone_number","setPhoneNumber","EditDriverForm","DriverList","setDriver","changeDriverStatus","editDriver","onDeleteDriver","TruckDriverPage","CreateVehicleForm","elems","querySelectorAll","FormSelect","license_number","setLicenseNumber","size","setSize","start_depot","setStartDepot","undefined","end_depot","setEndDepot","start_depot_id","end_depot_id","input","depot_id","selected_depot","find","setStartingDepot","selected","setEndingDepot","EditVehicleForm","VehicleList","setVehicle","changeVehicleStatus","editVehicle","onDeleteVehicle","VehiclePage","dumpster_sizes","TEN","FIFTEEN","TWENTY","THIRTY","FOURTY","FIFTY","CreateOrderForm","drop_off_date_picker","elem","body","Datepicker","setDefaultDate","onSelect","onDropOffDateChange","container","pickup_date_picker","onPickupDateChange","setDumpsterSize","drop_off_date","setDropOffDate","setPickupDate","special_instructions","setInstructions","delivery_completed","setDeliveryStatus","pickup_completed","setPickupStatus","toDateString","onDumpsterSelect","disabled","OrderInfoForm","EditOrderForm","OrderList","setOrder","orderInfoFormActive","setOrderInfoFormActive","editOrder","onDeleteOrder","info","Spacing","OrderStyle","OrderPage","show_depots","setDepots","show_landfills","setLandfills","Date","defaultDate","onDateChange","date_string","RegionSelector","setNewRegion","set_region","Dropdown","constrainWidth","add_region_modal","length","onCreateRegion","new_region_object","onDeleteRegion","width","EditDepotForm","CreateDepotForm","DepotList","setdepot","changedepotStatus","editdepot","onDeletedepot","DepotPage","HomePage","RoutePage","App","getItem","parsed_user_token","parse","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.fe5033f3.chunk.js","sourcesContent":["export enum ActionType {\n    ADD_LANDFILL = 'add_landfill',\n    ADD_REGION = 'add_region',\n    ADD_DEPOT = 'add_depot',\n    ADD_DRIVER = 'add_driver',\n    ADD_VEHICLE = 'add_vehicle',\n    ADD_ORDER = 'add_order',\n    DELETE_LANDFILL = 'delete_landfill',\n    DELETE_REGION = 'delete_region',\n    DELETE_DEPOT = 'delete_depot',\n    DELETE_DRIVER = 'delete_driver',\n    DELETE_VEHICLE = 'delete_vehicle',\n    DELETE_ORDER = 'delete_order',\n    UPDATE_LANDFILL = 'update_landfill',\n    UPDATE_DRIVER = 'update_driver',\n    UPDATE_DEPOT = 'update_depot',\n    UPDATE_VEHICLE = 'update_vehicle',\n    UPDATE_ORDER = 'update_order',\n    INIT_LANDFILLS = 'init_landfills',\n    INIT_REGIONS = 'init_regions',\n    INIT_DRIVERS = 'init_drivers',\n    INIT_DEPOTS = 'init_depots',\n    INIT_VEHICLES = 'init_vehicles',\n    INIT_ORDERS = 'init_orders',\n    SET_USER_TOKEN = 'set_user_token',\n    SET_REGION = 'set_region',\n}","export default __webpack_public_path__ + \"static/media/logo.d7ce8e50.svg\";","import React from 'react'\nimport './SignUpForm.css'\nimport logo from './images/logo.svg'\nimport {\n    Link\n} from 'react-router-dom'\n\n\nconst SignUpForm = () => {\n    return (\n        <div className=\"sign-up-wrap\"><img src={logo} alt=\"\" />\n            <div className=\"w-form\">\n                <div className=\"placeholder-text-style-embed-code w-embed\">\n                </div>\n                <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" className=\"form\" autoComplete=\"off\"><input type=\"text\"\n                    className=\"text_field\" maxLength={256} name=\"name\" data-name=\"Name\" placeholder=\"Your name\"\n                    id=\"name\"/><input type=\"email\" className=\"text_field\" maxLength={256} name=\"email\" data-name=\"Email\"\n                    placeholder=\"Email Address\" id=\"email\" autoCapitalize=\"off\"/><input type=\"password\" className=\"text_field\"\n                    maxLength={256} name=\"Password\" data-name=\"Password\" placeholder=\"Password\" id=\"Password\" /><input\n                    type=\"submit\" value=\"Sign Up\" data-wait=\"Please wait...\" className=\"btn grey darken-1\"/></form>\n                <div className=\"w-form-done\">\n                    <div>Thank you! Your submission has been received!</div>\n                </div>\n                <div className=\"w-form-fail\">\n                    <div>Oops! Something went wrong while submitting the form.</div>\n                </div>\n            </div>\n            <div className=\"sign-up\">\n                <p className=\"paragraph\">Already have an account? <Link to=\"/SignIn\"\n                    className=\"link\">Log in</Link>.<br/></p>\n                <input className=\"input-field\" />\n            </div>\n        </div>\n    )\n}\n\nexport default SignUpForm","export default __webpack_public_path__ + \"static/media/logo.d7ce8e50.svg\";","\nexport let token = ''\n\nexport const setToken = (newToken:string | null) => {\n    token = `bearer ${newToken}`\n}\n","import axios from 'axios'\nimport { Landfill, NewLandfill, Region } from '../types'\nimport {token} from './config'\nconst baseUrl = '/landfills'\n\n\n\n\n// const getByRegion = async (region:Region) => {\n//     const url = baseUrl+`/region/${region.id}`\n//     const config = {\n//         headers: { Authorization: token },\n//     }\n//     const response = await axios.get(url, config)\n//     return response.data\n// }\n\n\nconst getByRegion = async (region:Region) => {\n    const url = baseUrl+`?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\nconst getAll = async () => {\n    if(token){\n        const config = {\n            headers: { Authorization: token },\n        }\n        console.log(config)\n        const response = await axios.get(baseUrl, config)\n        return response.data\n    }else{\n        throw('Cannot access landfills until the user token is present')\n    }\n}\n\nconst put = async (landfill: Landfill) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const id = landfill.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, landfill, config)\n    return landfill\n}\n\n\nconst deleteLandfill = async (landfill: Landfill) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = landfill.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (landfill: NewLandfill) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, landfill, config)\n    console.log(response.data)\n    return response.data\n}\n\nexport default { getAll, put, createNew, deleteLandfill, getByRegion }","import axios from 'axios'\nimport { LoginInfo, UserToken } from '../types'\n\n\nconst baseUrl = '/login'\n\n\n\nconst login = async (login_info:LoginInfo): Promise<UserToken> => {\n    const response = await axios.post(baseUrl, login_info)\n    return response.data\n}\n\nexport default { login }","\nimport axios from 'axios'\n// import RegionSelector from '../components/RegionSelector'\nimport { NewRegion, Region } from '../types'\nimport { token } from './config'\n\nconst baseUrl = '/regions'\n\n\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(baseUrl,config)\n    return response.data\n}\n\n\nconst createNew = async (region:NewRegion) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl,region,config)\n    return response.data\n}\n\nconst remove= async (region:Region) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const url = baseUrl+`/${region.id}`\n    const response = await axios.delete(url,config)\n    return response.data\n}\n\n\n\nexport default { getAll, createNew, remove }","import axios from 'axios'\nimport { Driver, NewDriver } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/drivers'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (driver: Driver) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = driver.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, driver, config)\n    return driver\n}\n\n\nconst deleteDriver = async (driver: Driver) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = driver.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (driver: NewDriver) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, driver, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteDriver, createNew, getByRegion }","import axios from 'axios'\nimport { Depot, NewDepot } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/depots'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (depot: Depot) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = depot.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, depot, config)\n    return depot\n}\n\n\nconst deleteDepot = async (depot: Depot) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = depot.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (depot: NewDepot) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, depot, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteDepot, createNew, getByRegion }","import axios from 'axios'\nimport { EditVehicle, NewVehicle, Vehicle } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/vehicles'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (vehicle: EditVehicle) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = vehicle.id\n    const url = baseUrl + `/${id}`\n    const response= await axios.put(url, vehicle, config)\n    return response.data\n}\n\n\nconst deleteVehicle = async (vehicle: Vehicle) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = vehicle.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (vehicle: NewVehicle) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, vehicle, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteVehicle, createNew, getByRegion }","import axios from 'axios'\nimport { NewOrder, Order } from '../types'\nimport { Region } from '../types'\nimport { token } from './config'\nconst baseUrl = '/orders'\n\n\n\n\nconst getByRegion = async (region: Region) => {\n    const url = baseUrl + `?region_id=${region.id}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    return response.data\n}\n\n// Need a specific server url for /orders/date\nconst getByRegionAndDate = async (region: Region, date: string) => {\n    const url = baseUrl + `/date/${region.id}/${date}`\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.get(url, config)\n    console.log(response.data)\n    return response.data\n}\n\n\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    console.log(config)\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst put = async (order: Order) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = order.id\n    const url = baseUrl + `/${id}`\n    await axios.put(url, order, config)\n    return order\n}\n\n\nconst deleteOrder = async (order: Order) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const id = order.id\n    const url = baseUrl + `/${id}`\n    const response = await axios.delete(url, config)\n    return response\n}\n\nconst createNew = async (order: NewOrder) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, order, config)\n    return response.data\n}\n\nexport default { getAll, put, deleteOrder, createNew, getByRegion, getByRegionAndDate }","import { ActionType } from '../action-types'\nimport { Action } from '../actions'\nimport landfillService from '../../services/landfills'\nimport loginService from '../../services/login'\nimport regionService from '../../services/regions'\nimport driverService from '../../services/driver'\nimport depotService from '../../services/depots'\nimport vehicleService from '../../services/vehicle'\nimport orderService from '../../services/order'\nimport { Dispatch } from 'redux'\nimport { Depot, Driver, EditVehicle, Landfill, LoginInfo, NewDepot, NewDriver, NewLandfill, NewOrder, NewRegion, NewVehicle, Order, Region, UserToken, Vehicle } from '../../types'\nimport { setToken } from '../../services/config'\n\n\nexport const setRegion = (region: Region) => {\n    window.localStorage.setItem('region', JSON.stringify(region))\n    return {\n        type: ActionType.SET_REGION,\n        data: region\n    }\n}\n\n\nexport const initializeRegions = () => {\n    return async (dispatch: Dispatch<Action>) => {\n        const regions = await regionService.getAll()\n        dispatch({\n            type: ActionType.INIT_REGIONS,\n            data: regions\n        })\n    }\n}\n\n\n\nexport const initializeLandfills = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const landfills = await landfillService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_LANDFILLS,\n            data: landfills\n        })\n    }\n}\n\n\nexport const initializeDrivers = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const drivers = await driverService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_DRIVERS,\n            data: drivers\n        })\n    }\n}\n\n\n\nexport const initializeDepots = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const depots = await depotService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_DEPOTS,\n            data: depots\n        })\n    }\n}\n\nexport const initializeVehicles = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const vehicles = await vehicleService.getByRegion(region)\n        dispatch({\n            type: ActionType.INIT_VEHICLES,\n            data: vehicles\n        })\n    }\n}\n\nexport const initializeOrders = (region:Region, date: string) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const orders = await orderService.getByRegionAndDate(region, date)\n        dispatch({\n            type: ActionType.INIT_ORDERS,\n            data: orders\n        })\n    }\n}\n\n\nexport const createLandfill = (landfill: NewLandfill) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_landfill = await landfillService.createNew(landfill)\n        dispatch({\n            type: ActionType.ADD_LANDFILL,\n            data: new_landfill,\n        })\n    }\n}\n\nexport const createDepot = (depot: NewDepot) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_depot = await depotService.createNew(depot)\n        dispatch({\n            type: ActionType.ADD_DEPOT,\n            data: new_depot,\n        })\n    }\n}\n\n\nexport const createDriver = (driver: NewDriver) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_driver = await driverService.createNew(driver)\n        dispatch({\n            type: ActionType.ADD_DRIVER,\n            data: new_driver,\n        })\n    }\n}\n\nexport const createVehicle = (vehicle: NewVehicle) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_vehicle = await vehicleService.createNew(vehicle)\n        dispatch({\n            type: ActionType.ADD_VEHICLE,\n            data: new_vehicle,\n        })\n    }\n}\n\nexport const createOrder = (order: NewOrder) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_order= await orderService.createNew(order)\n        dispatch({\n            type: ActionType.ADD_ORDER,\n            data: new_order,\n        })\n    }\n}\n\nexport const createRegion = (region:NewRegion) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const new_region = await regionService.createNew(region)\n        dispatch({\n            type: ActionType.ADD_REGION,\n            data: new_region,\n        })\n    }\n}\n\nexport const updateLandfill = (updated_landfill: Landfill) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const landfill = await landfillService.put(updated_landfill)\n        dispatch({\n            type: ActionType.UPDATE_LANDFILL,\n            data: landfill\n        })\n    }\n}\n\n\nexport const updateDriver = (updated_driver: Driver) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const driver = await driverService.put(updated_driver)\n        dispatch({\n            type: ActionType.UPDATE_DRIVER,\n            data: driver\n        })\n    }\n}\n\nexport const updateVehicle = (updated_vehicle: EditVehicle) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const vehicle = await vehicleService.put(updated_vehicle)\n        console.log('returned vehicle')\n        console.log(vehicle)\n        dispatch({\n            type: ActionType.UPDATE_VEHICLE,\n            data: vehicle\n        })\n    }\n}\n\n\nexport const updateDepot = (updated_depot: Depot) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const depot = await depotService.put(updated_depot)\n        dispatch({\n            type: ActionType.UPDATE_DEPOT,\n            data: depot\n        })\n    }\n}\n\nexport const updateOrder = (updated_order: Order) => {\n\n    return async (dispatch: Dispatch<Action>) => {\n        const order = await orderService.put(updated_order)\n        dispatch({\n            type: ActionType.UPDATE_ORDER,\n            data: order\n        })\n    }\n}\n\nexport const deleteLandfill = (landfill: Landfill) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await landfillService.deleteLandfill(landfill)  \n        dispatch({\n            type: ActionType.DELETE_LANDFILL,\n            data: landfill\n        })\n    }\n}\n\nexport const deleteDriver = (driver: Driver) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await driverService.deleteDriver(driver)  \n        dispatch({\n            type: ActionType.DELETE_DRIVER,\n            data: driver\n        })\n    }\n}\n\nexport const deleteVehicle = (vehicle: Vehicle) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await vehicleService.deleteVehicle(vehicle)  \n        dispatch({\n            type: ActionType.DELETE_VEHICLE,\n            data: vehicle\n        })\n    }\n}\n\nexport const deleteDepot = (depot: Depot) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await depotService.deleteDepot(depot)  \n        dispatch({\n            type: ActionType.DELETE_DEPOT,\n            data: depot\n        })\n    }\n}\n\nexport const deleteRegion = (region:Region) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await regionService.remove(region)  \n        dispatch({\n            type: ActionType.DELETE_REGION,\n            data: region\n        })\n    }\n}\n\nexport const deleteOrder = (order:Order) => {\n    return async (dispatch: Dispatch<Action>) => {\n        await orderService.deleteOrder(order)  \n        dispatch({\n            type: ActionType.DELETE_ORDER,\n            data: order\n        })\n    }\n}\n\nexport const loginUser = (login_info: LoginInfo) => {\n    return async (dispatch: Dispatch<Action>) => {\n        const user_data: UserToken = await loginService.login(login_info)\n        window.localStorage.setItem('user_token', JSON.stringify(user_data))\n        setToken(user_data.token)\n        dispatch({\n            type: ActionType.SET_USER_TOKEN,\n            data: user_data\n        })\n    }\n}\n\n\nexport const setUserToken = (user_token: UserToken | null) => {\n    if(user_token){\n        console.log('setting the token for services to use')\n        setToken(user_token.token)\n    }else{\n        setToken(null)\n    }\n    return async (dispatch: Dispatch<Action>) => {\n        dispatch({\n            type: ActionType.SET_USER_TOKEN,\n            data: user_token\n        })\n    }\n}","\nimport { Landfill } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Landfill[] = []\n\n\nexport const landfillReducer = (state: Landfill[] = initialState, action: Action): Landfill[] => {\n    switch (action.type) {\n    case ActionType.ADD_LANDFILL:\n        return [...state, action.data]\n    case ActionType.UPDATE_LANDFILL: {\n        console.log('inside update landfill state')\n        const id = action.data.id\n        const changed_landfill = action.data\n        return state.map(landfill => landfill.id !== id ? landfill : changed_landfill)\n    }\n    case ActionType.DELETE_LANDFILL: {\n        console.log('inside delete landfill state')\n        const id = action.data.id\n        return state.filter(landfill => landfill.id !== id)\n    }\n    case ActionType.INIT_LANDFILLS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\n\n\n\n\nexport default landfillReducer\n\n\n","\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\nimport { UserToken } from '../../types'\n\n\n\n\nconst initialState = null\n\nexport const userTokenReducer = (state: UserToken | null = initialState, action: Action): UserToken | null => {\n    switch (action.type) {\n    case ActionType.SET_USER_TOKEN:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\n\n\nexport default userTokenReducer\n\n\n","\nimport { Region } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Array<Region> = []\n\n\nexport const regionReducer = (state: Region[] = initialState, action: Action): Region[] => {\n    switch (action.type) {\n    case ActionType.ADD_REGION:\n        return [...state, action.data]\n    case ActionType.DELETE_REGION:\n    {\n        const id = action.data.id\n        return state.filter(region => region.id !== id)\n    }\n    case ActionType.INIT_REGIONS:\n        return action.data\n\n    default:\n        return state\n    }\n}\n\n\n\n\n\n\nexport default regionReducer\n\n\n","\nimport { Region } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Region | null = null\n\n\nexport const setRegionReducer = (state:Region | null = initialState, action: Action): Region | null => {\n    switch (action.type) {\n    case ActionType.SET_REGION:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\n\n\n\n\nexport default setRegionReducer\n\n\n","\nimport { Driver } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Driver[] = []\n\n\nexport const driverReducer = (state: Driver[] = initialState, action: Action): Driver[] => {\n    switch (action.type) {\n    case ActionType.ADD_DRIVER:\n        return [...state, action.data]\n    case ActionType.UPDATE_DRIVER: {\n        console.log('inside update landfill state')\n        const id = action.data.id\n        const changed_driver = action.data\n        return state.map(driver => driver.id !== id ? driver : changed_driver)\n    }\n    case ActionType.DELETE_DRIVER: {\n        console.log('inside delete landfill state')\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_DRIVERS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default driverReducer\n\n\n","\nimport { Depot } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Depot[] = []\n\n\nexport const depotReducer = (state: Depot[] = initialState, action: Action): Depot[] => {\n    switch (action.type) {\n    case ActionType.ADD_DEPOT:\n        return [...state, action.data]\n    case ActionType.UPDATE_DEPOT: {\n        console.log('inside update landfill state')\n        const id = action.data.id\n        const changed_depot = action.data\n        return state.map( depot=> depot.id !== id ? depot : changed_depot)\n    }\n    case ActionType.DELETE_DEPOT: {\n        console.log('inside delete landfill state')\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_DEPOTS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default depotReducer\n\n\n","\nimport { Vehicle } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Vehicle[] = []\n\n\nexport const vehicleReducer = (state: Vehicle[] = initialState, action: Action): Vehicle[] => {\n    switch (action.type) {\n    case ActionType.ADD_VEHICLE:\n        return [...state, action.data]\n    case ActionType.UPDATE_VEHICLE: {\n        const id = action.data.id\n        const changed_vehicle = action.data\n        return state.map(vehicle => vehicle.id !== id ? vehicle : changed_vehicle)\n    }\n    case ActionType.DELETE_VEHICLE: {\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_VEHICLES:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default vehicleReducer\n\n\n","\nimport { Order } from '../../types'\nimport { ActionType } from '../action-types'\nimport { Action } from '../actions'\n\n\nconst initialState: Order[] = []\n\n\nexport const orderReducer = (state: Order[] = initialState, action: Action): Order[] => {\n    switch (action.type) {\n    case ActionType.ADD_ORDER:\n        return [...state, action.data]\n    case ActionType.UPDATE_ORDER: {\n        const id = action.data.id\n        const changed_order = action.data\n        return state.map(order => order.id !== id ? order : changed_order)\n    }\n    case ActionType.DELETE_ORDER: {\n        const id = action.data.id\n        return state.filter(driver => driver.id !== id)\n    }\n    case ActionType.INIT_ORDERS:\n        return action.data\n    default:\n        return state\n    }\n}\n\n\nexport default orderReducer\n\n\n","import { combineReducers } from 'redux'\nimport landfillReducer from './landfillReducer'\nimport userTokenReducer from './userTokenReducer'\nimport regionReducer from './regionReducer'\nimport setRegionReducer from './setRegionReducer'\nimport driverReducer from './driverReducer'\nimport depotReducer from './depotReducer'\nimport vehicleReducer from './vehicleReducer'\nimport orderReducer from './orderReducer'\n\nconst reducers = combineReducers({\n    landfills: landfillReducer,\n    userToken: userTokenReducer,\n    regions: regionReducer,\n    setRegion: setRegionReducer,\n    drivers: driverReducer,\n    depots: depotReducer,\n    vehicles: vehicleReducer,\n    orders: orderReducer\n})\n\nexport default reducers\n\nexport type State = ReturnType<typeof reducers>","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers/index'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nexport const store = createStore(\n    reducers,\n    compose(  applyMiddleware(thunk),   composeWithDevTools())\n \n  \n\n)","import React, {useState} from 'react'\nimport './SignInForm.css'\nimport logo from './images/logo.svg'\nimport {\n    Link, useNavigate\n} from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../../state'\nimport { LoginInfo } from '../../types'\n\n\n\nconst SignInForm = () => {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { loginUser} = bindActionCreators(actionCreators, dispatch)\n\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n\n\n\n\n    const handleLogin = async (event: React.SyntheticEvent) => {\n        event.preventDefault()\n        const login_info: LoginInfo = {username: email, password: password}\n        // eslint-disable-next-line no-debugger\n        try{\n            await loginUser(login_info)\n            navigate('/')\n\n        } catch(error){\n            console.log(error)\n            M.toast({ html: 'Sign in was not successfull. Double check the username and password' })\n        }\n        \n\n    }\n\n\n    return (\n        <div className=\"sign-up-wrap\"><img src={logo} alt=\"\" />\n            <div className=\"w-form\">\n                <div className=\"placeholder-text-style-embed-code w-embed\">\n                </div>\n                <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" className=\"form\" autoComplete=\"off\" onSubmit={(event) => handleLogin(event)}><input type=\"text\" className=\"text_field\" maxLength={256} name=\"email\" data-name=\"Email\"\n                    placeholder=\"Email Address\" id=\"email\" autoCapitalize=\"off\" value={email} onChange={({target})=>setEmail(target.value)}/><input type=\"password\" className=\"text_field\"\n                    maxLength={256} name=\"Password\" data-name=\"Password\" placeholder=\"Password\" id=\"Password\" value={password}  onChange={({target})=>setPassword(target.value)}/><input\n                    type=\"submit\" value=\"Sign In\" data-wait=\"Please wait...\" className=\"btn grey darken-1\"/></form>\n                <div className=\"w-form-done\">\n                    <div>Thank you! Your submission has been received!</div>\n                </div>\n                <div className=\"w-form-fail\">\n                    <div>Oops! Something went wrong while submitting the form.</div>\n                </div>\n            </div>\n            <div className=\"sign-up\">\n                <p className=\"paragraph\">Dont have an account? <Link to=\"/SignUp\"\n                    className=\"link\">Sign Up</Link>.<br/></p>\n                <input className=\"input-field\" />\n            </div>\n        </div>\n    )\n}\n\nexport default SignInForm","import React from 'react'\nimport './Login.css'\nimport SignUpForm from '../SignUpForm/SignUpForm'\nimport SignInForm from '../SignInForm/SignInForm'\n\nimport {\n    Route, Routes\n} from 'react-router-dom'\n\nconst Login = () => {\n    return (\n        <div className=\"body\">\n            <Routes>\n                <Route path=\"/\" element={<SignInForm />} />\n                <Route path=\"/SignUp\" element={<SignUpForm />} />\n                <Route path=\"SignIn\" element={<SignInForm />} />\n            </Routes>\n            {/* <SignInForm /> */}\n        </div>\n    )\n}\n\nexport default Login","export default __webpack_public_path__ + \"static/media/icon.58d517b5.png\";","import React, { useEffect } from 'react'\nimport icon from './images/icon.png'\nimport './SideNav.css'\nimport M from 'materialize-css'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../../state'\nimport { useDispatch } from 'react-redux'\n\nconst SideNav = () => {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { setUserToken } = bindActionCreators(actionCreators, dispatch)\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n\n\n\n    const onSignOut = () => {\n        console.log('inside onSignOut')\n        window.localStorage.clear()\n        setUserToken(null)\n        navigate('/')\n    }\n\n\n    return (\n        <div>\n            <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\">\n                <li>\n                    {/* <div> <i className=\"material-icons\">add</i></div> */}\n                    <div><a href=\"#!\" className=\"\"><img className=\"icon\" src={icon} /></a></div>\n                </li>\n                <li><div className=\"divider\"></div></li>\n                <li><Link to=\"/landfill\">Landfills</Link></li>\n                <li><Link to=\"/driver\">Truck Drivers</Link></li>\n                <li><Link to=\"/depot\">Depots</Link></li>\n                <li><Link to=\"/vehicle\">Vehicles</Link></li>\n                <li><Link to=\"/order\">Orders</Link></li>\n                <li><Link to=\"/route\">Routes</Link></li>\n\n                <li>\n                    <div className='button-spacing'>\n                        <button className=\"btn black\" onClick={() => onSignOut()}>Sign Out</button>\n                    </div>\n\n                </li>\n            </ul>\n\n        </div>\n    )\n\n}\n\n\nexport default SideNav\n\n\n","import axios from 'axios'\nimport { Address, HttpResponse, LatLng } from '../types'\n\n\nconst base_url = 'https://maps.googleapis.com/maps/api/geocode/json?address='\n\n\nconst get = async (address: Address): Promise<HttpResponse> => {\n    console.log('inside geocode service .get')\n    const street_split = address.street.split(' ')\n    console.log(street_split)\n    const parsed_street = street_split.reduce((prev_value, current_value) => `${prev_value}+${current_value}`, '')\n\n    const url = base_url + `${parsed_street},+${address.city},+${address.state},+${address.zipcode}&key=${process.env.REACT_APP_GEOCODE_API_KEY}`\n\n    try {\n        const response = await axios.get(url)\n        const response_status = response.data.status\n        if(response_status==='OK'){\n            const lat_lng = response.data.results[0].geometry.location\n            const formatted_response: HttpResponse = {\n                status: 'OK',\n                message: '',\n                data : lat_lng as LatLng,\n            }\n            return formatted_response\n        }else{\n            const formatted_response: HttpResponse = {\n                status: 'ERROR',\n                message: response.data.error_message,\n                data : {},\n            }\n            return formatted_response\n        }\n    } catch (err){\n        console.log('error in getting the HttpResponse')\n        const formatted_response: HttpResponse = {\n            status: 'ERROR',\n            message: 'Error: '+err,\n            data : {},\n        }\n        return formatted_response\n    }\n\n\n}\n\n\nexport default { get }","import React, { useState, useEffect } from 'react'\nimport { Landfill, Address } from '../types'\nimport { actionCreators } from '../state'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    landfill: Landfill,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditLandfillForm = ({ landfill, setActive }: prop) => {\n\n\n    if (!landfill) {\n        return (<div></div>)\n    }\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState(landfill.name)\n    const [street, setStreet] = useState(landfill.street)\n    const [city, setCity] = useState(landfill.city)\n    const [state, setState] = useState(landfill.state)\n    const [zipcode, setZipcode] = useState(landfill.zipcode.toString())\n    const [latitude, setLatitude] = useState(landfill.latitude.toString())\n    const [longitude, setLongitude] = useState(landfill.longitude.toString())\n    const [active, setStatus] = useState(landfill.active)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n    const dispatch = useDispatch()\n    const { updateLandfill } = bindActionCreators(actionCreators, dispatch)\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: `${response.message}` })\n        }\n        const lat_lng = response.data as LatLng\n        setCoord(lat_lng)\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.open()\n        }\n    }\n\n\n\n    const submit = () => {\n        console.log('inside on submit')\n        if (name === '' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = landfill.id\n            const new_landfill: Landfill = { id, name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'user_id': landfill.user_id, 'region_id': landfill.region_id }\n            updateLandfill(new_landfill)\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Landfill</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditLandfillForm\n\n","import React, { useState, useEffect } from 'react'\nimport { NewLandfill, Address } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateLandfillForm = ({setActive }: prop) => {\n\n    const dispatch = useDispatch()\n    const { createLandfill } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if(!region){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [zipcode, setZipcode] = useState('')\n    const [latitude, setLatitude] = useState('')\n    const [longitude, setLongitude] = useState('')\n    const [active, setStatus] = useState(false)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        }else{\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(name==='' || street==='' || city==='' || state==='' || zipcode==='' || latitude==='' || longitude===''){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const new_landfill: NewLandfill = { name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'region_id':region.id }\n            console.log(new_landfill)\n            await createLandfill(new_landfill)\n            M.toast({html: 'Created New Landfill'})\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Landfill</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)}/>\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateLandfillForm\n\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../state'\nimport { Depot, Driver, Landfill, Order, Vehicle } from '../types'\n\ninterface props {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n    landfill?: Landfill,\n    driver?: Driver,\n    depot?: Depot,\n    vehicle?: Vehicle,\n    order?: Order,\n}\n\nconst ConfirmDelete = ({ setActive, landfill, driver, depot, vehicle, order }: props) => {\n\n    const dispatch = useDispatch()\n\n    const { deleteLandfill, deleteDriver, deleteDepot, deleteVehicle, deleteOrder } = bindActionCreators(actionCreators, dispatch)\n\n\n    React.useEffect(() => {\n\n        const modal = document.querySelector('#confirm_delete')\n        if (modal) {\n            const instance = M.Modal.init(modal, { dismissible: false })\n            instance.open()\n        }\n    }, [])\n\n    const handleConfirmation = (status: boolean) => {\n        if (status) {\n            if(landfill){\n                deleteLandfill(landfill)\n            }else if(driver){\n                deleteDriver(driver)\n            }else if(depot){\n                deleteDepot(depot)\n            }else if(vehicle){\n                deleteVehicle(vehicle)\n            }else if(order){\n                deleteOrder(order)\n            }\n        }\n        setActive(false)\n\n    }\n\n    return (\n        <div className='center-align'>\n            <div id=\"confirm_delete\" className=\"modal\">\n                <div className=\"modal-content center-align\">\n                    <div>\n                        Are you sure you want to delete this item?\n\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                        <div className=\"col s4\"></div>\n                        <div className=\"col s2\">\n                            <button onClick={() => handleConfirmation(true)} className=\"btn black modal-close\" >Yes</button>\n                        </div>\n                        <div className=\"col s2\">\n                            <button onClick={() => handleConfirmation(false)} className=\"btn black modal-close\">No</button>\n                        </div>\n\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default ConfirmDelete","import React, { useState } from 'react'\nimport { Landfill } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport EditLandfillForm from './EditLandfillForm'\nimport CreateLandfillForm from './CreateLandfillForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst LandfillList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateLandfill } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const landfills = useSelector((state: State) => state.landfills)\n    const [landfill, setLandfill] = useState<Landfill>(landfills[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changeLandfillStatus = (landfill: Landfill) => {\n        console.log('inside on click')\n        const new_landfill = { ...landfill }\n        if (landfill.active) {\n            new_landfill.active = false\n        } else {\n            new_landfill.active = true\n        }\n        updateLandfill(new_landfill)\n    }\n\n\n\n    const editLandfill = (landfill: Landfill) => {\n        setLandfill(landfill)\n        setEditFormActive(true)\n    }\n\n    const onDeleteLandfill = (landfill: Landfill) => {\n        console.log('inside delete landfill')\n        setLandfill(landfill)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateLandfill = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertLandfills = () => {\n        return (\n            landfills.map(landfill =>\n                <tr key={landfill.id}>\n                    <td>{landfill.name}</td>\n                    <td>{landfill.street}</td>\n                    <td>{landfill.city}</td>\n                    <td>{landfill.zipcode}</td>\n                    <td>{landfill.latitude}</td>\n                    <td>{landfill.longitude}</td>\n                    <td>{(landfill.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changeLandfillStatus(landfill)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changeLandfillStatus(landfill)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editLandfill(landfill)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteLandfill(landfill)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateLandfill()}>New Landfill</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Street</th>\n                            <th>City</th>\n                            <th>Zipcode</th>\n                            <th>Latitude</th>\n                            <th>Longitude</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertLandfills()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditLandfillForm landfill={landfill} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateLandfillForm setActive={setCreateFormActive}  />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} landfill={landfill} />}\n\n        </div>\n    )\n}\n\n\nexport default LandfillList","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*\n * Copyright 2021 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// [START maps_react_map]\nimport * as React from 'react'\nimport { Wrapper, Status } from '@googlemaps/react-wrapper'\nimport { createCustomEqual } from 'fast-equals'\nimport { isLatLngLiteral, } from '@googlemaps/typescript-guards'\nimport styled from 'styled-components'\nimport { Depot, Landfill, Order } from '../types'\n\n\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\n\nconst landfill_icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n}\n\nconst depot_icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n}\n\nconst order_icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\n}\n\nconst render = (status: Status) => {\n    return <h1>{status}</h1>\n}\n\ninterface MyProps {\n    landfills?: Landfill[];\n    depots?: Depot[];\n    orders?: Order[];\n}\n\nconst GoogleMap = ({ landfills, depots, orders }: MyProps) => {\n    // [START maps_react_map_component_app_state]\n    // const [clicks, setClicks] = React.useState<google.maps.LatLng[]>([])\n    const [zoom, setZoom] = React.useState(4) // initial zoom\n    const [center, setCenter] = React.useState<google.maps.LatLngLiteral>({\n        lat: 33,\n        lng: -84,\n    })\n\n\n\n\n    const onClick = (e: google.maps.MapMouseEvent) => {\n        console.log(e.latLng!)\n        // avoid directly mutating state\n        // setClicks([...clicks, e.latLng!])\n    }\n\n    const onIdle = (m: google.maps.Map) => {\n        console.log('onIdle')\n        setZoom(m.getZoom()!)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        setCenter(m.getCenter()!.toJSON())\n    }\n    // [END maps_react_map_component_app_state]\n\n\n\n    // [START maps_react_map_component_app_return]\n\n\n    const insertLandfillMarkers = () => {\n        return (\n            landfills && landfills.map((landfill) => {\n                const latlng = { lat: landfill.latitude, lng: landfill.longitude }\n                if (landfill.active) {\n                    return (< Marker key={landfill.id} position={latlng} icon={landfill_icon} title={landfill.name} />)\n                } else {\n                    return\n                }\n\n            })\n        )\n\n    }\n\n\n    const insertDepotMarkers = () => {\n        return (\n            depots && depots.map((depot) => {\n                const latlng = { lat: depot.latitude, lng: depot.longitude }\n                if (depot.active) {\n                    return (< Marker key={depot.id} position={latlng} icon={depot_icon} title={depot.name} />)\n                } else {\n                    return\n                }\n\n            })\n        )\n\n    }\n\n    const formatOrderLabel = (order: Order) => {\n        const label = order.name + '\\n' + 'Dumpster Size: ' + order.dumpster_size + '\\n' + 'Delivery Date: ' + order.delivery_date + '\\n' + 'Pickup Date: ' + order.pickup_date\n        return label\n    }\n\n\n    const insertOrderMarkers = () => {\n        return (\n            orders && orders.map((order) => {\n                const latlng = { lat: order.latitude, lng: order.longitude }\n                return (< Marker key={order.id} position={latlng} icon={order_icon} title={formatOrderLabel(order)} />)\n\n            })\n        )\n\n    }\n\n    return (\n        <div >\n            <TopSpacing>\n                <Wrapper apiKey={'AIzaSyDBWA8Gu8uc_uOL6Sp2ZIFsRI53PKbAjkw'} render={render}>\n                    <Map\n                        center={center}\n                        onClick={onClick}\n                        onIdle={onIdle}\n                        zoom={zoom}\n                        style={{ flexGrow: '1', height: '50vh' }}\n                    >\n                        {insertLandfillMarkers()}\n                        {insertDepotMarkers()}\n                        {insertOrderMarkers()}\n\n                    </Map>\n                </Wrapper>\n            </TopSpacing>\n        </div >\n    )\n    // [END maps_react_map_component_app_return]\n}\ninterface MapProps extends google.maps.MapOptions {\n    style: { [key: string]: string };\n    onClick?: (e: google.maps.MapMouseEvent) => void;\n    onIdle?: (map: google.maps.Map) => void;\n}\n\nconst Map: React.FC<MapProps> = ({\n    onClick,\n    onIdle,\n    children,\n    style,\n    ...options\n}) => {\n    // [START maps_react_map_component_add_map_hooks]\n    const ref = React.useRef<HTMLDivElement>(null)\n    const [map, setMap] = React.useState<google.maps.Map>()\n\n    React.useEffect(() => {\n        if (ref.current && !map) {\n            setMap(new window.google.maps.Map(ref.current, {}))\n        }\n    }, [ref, map])\n    // [END maps_react_map_component_add_map_hooks]\n\n    // [START maps_react_map_component_options_hook]\n    // because React does not do deep comparisons, a custom hook is used\n    // see discussion in https://github.com/googlemaps/js-samples/issues/946\n    useDeepCompareEffectForMaps(() => {\n        if (map) {\n            map.setOptions(options)\n        }\n    }, [map, options])\n    // [END maps_react_map_component_options_hook]\n\n    // [START maps_react_map_component_event_hooks]\n    React.useEffect(() => {\n        if (map) {\n            ['click', 'idle'].forEach((eventName) =>\n                google.maps.event.clearListeners(map, eventName)\n            )\n\n            if (onClick) {\n                map.addListener('click', onClick)\n            }\n\n            if (onIdle) {\n                map.addListener('idle', () => onIdle(map))\n            }\n        }\n    }, [map, onClick, onIdle])\n    // [END maps_react_map_component_event_hooks]\n\n    // [START maps_react_map_component_return]\n    return (\n        <>\n            <div ref={ref} style={style} />\n            {React.Children.map(children, (child) => {\n                if (React.isValidElement(child)) {\n                    // set the map prop on the child component\n                    return React.cloneElement(child, { map })\n                }\n            })}\n        </>\n    )\n    // [END maps_react_map_component_return]\n}\n\n// [START maps_react_map_marker_component]\nconst Marker: React.FC<google.maps.MarkerOptions> = (options) => {\n    const [marker, setMarker] = React.useState<google.maps.Marker>()\n\n    React.useEffect(() => {\n        if (!marker) {\n            setMarker(new google.maps.Marker())\n        }\n\n        // remove marker from map on unmount\n        return () => {\n            if (marker) {\n                marker.setMap(null)\n            }\n        }\n    }, [marker])\n\n    React.useEffect(() => {\n        if (marker) {\n            marker.setOptions(options)\n        }\n    }, [marker, options])\n\n\n\n    return null\n}\n// [END maps_react_map_marker_component]\n\nconst deepCompareEqualsForMaps = createCustomEqual(\n    (deepEqual) => (a: any, b: any) => {\n        if (\n            isLatLngLiteral(a) ||\n            a instanceof google.maps.LatLng ||\n            isLatLngLiteral(b) ||\n            b instanceof google.maps.LatLng\n        ) {\n            return new google.maps.LatLng(a).equals(new google.maps.LatLng(b))\n        }\n\n        // TODO extend to other types\n\n        // use fast-equals for other objects\n        return deepEqual(a, b)\n    }\n)\n\nfunction useDeepCompareMemoize(value: any) {\n    const ref = React.useRef()\n\n    if (!deepCompareEqualsForMaps(value, ref.current)) {\n        ref.current = value\n    }\n\n    return ref.current\n}\n\nfunction useDeepCompareEffectForMaps(\n    callback: React.EffectCallback,\n    dependencies: any[]\n) {\n    React.useEffect(callback, dependencies.map(useDeepCompareMemoize))\n}\n\n\n// // [END maps_react_map]\n// let PRESERVE_COMMENT_ABOVE // force tsc to maintain the comment above eslint-disable-line\n\nexport default GoogleMap","export enum DUMPSTER_SIZES {\n    TEN = 10,\n    FIFTEEN = 15,\n    TWENTY = 20,\n    THIRTY = 30,\n    FOURTY = 40,\n    FIFTY = 50\n}\n\nexport const dumpster_sizes = [\n    DUMPSTER_SIZES.TEN,\n    DUMPSTER_SIZES.FIFTEEN,\n    DUMPSTER_SIZES.TWENTY,\n    DUMPSTER_SIZES.THIRTY,\n    DUMPSTER_SIZES.FOURTY,\n    DUMPSTER_SIZES.FIFTY\n]","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LandfillList from '../LandfillList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport GoogleMap from '../GoogleMap'\n\n// import './LandfillPage.css'\n\nconst LandfillPage = () => {\n    console.log('inside landfill page')\n\n    const dispatch = useDispatch()\n    const { initializeLandfills } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeLandfills(region)\n        }\n    }, [region])\n\n    const landfills = useSelector((state: State) => state.landfills)\n\n    return (\n\n        <div>\n            <GoogleMap landfills={landfills} />\n            <LandfillList />\n        </div>\n\n    )\n}\n\n\n\nexport default LandfillPage","import React, { useState, useEffect } from 'react'\nimport { NewDriver} from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateDriverForm = ({ setActive }: prop) => {\n\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    if(!region){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n    }, [])\n\n\n    const [name, setName] = useState('')\n    const [phone_number, setPhoneNumber] = useState('')\n    const [email, setEmail] = useState('')\n    const [active, setStatus] = useState(true)\n    \n\n\n    const dispatch = useDispatch()\n    const { createDriver } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(name==='' || phone_number==='' || email==='' ){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const new_driver: NewDriver = { name, phone_number, email,  'region_id': region.id }\n            await createDriver(new_driver)\n            M.toast({html: 'Created New Landfill'})\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Driver</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Phone Number</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Email</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\" waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateDriverForm\n\n","import React, { useState, useEffect } from 'react'\nimport { Driver } from '../types'\nimport { actionCreators } from '../state'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\ninterface prop {\n    driver: Driver,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditDriverForm = ({ driver, setActive }: prop) => {\n\n\n    if (!driver) {\n        return (<div></div>)\n    }\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n    }, [])\n\n\n    const [name, setName] = useState(driver.name)\n    const [phone_number, setPhoneNumber] = useState(driver.phone_number)\n    const [email, setEmail] = useState(driver.email)\n    const [active, setStatus] = useState(driver.active)\n\n\n\n    const dispatch = useDispatch()\n    const { updateDriver } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = () => {\n        console.log('inside on submit')\n        if (name === '' || phone_number === '' || email === '') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = driver.id\n            const new_driver: Driver = { id, name, phone_number, email, active, 'user_id': driver.user_id, 'region_id': driver.region_id }\n            updateDriver(new_driver)\n            const modal_elem = document.getElementById('modal1')\n            M.toast({html: 'Driver was updated'})\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>driver</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditDriverForm\n\n","import React, { useState } from 'react'\nimport { Driver } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport CreateDriverForm from './CreateDriverForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\nimport EditDriverForm from './EditDriverForm'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst DriverList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateDriver } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const drivers = useSelector((state: State) => state.drivers)\n    const [driver, setDriver] = useState<Driver>(drivers[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changeDriverStatus = (driver: Driver) => {\n\n        const new_driver = { ...driver }\n        if (driver.active) {\n            new_driver.active = false\n        } else {\n            new_driver.active = true\n        }\n        updateDriver(new_driver)\n    }\n\n\n\n    const editDriver = (driver: Driver) => {\n        setDriver(driver)\n        setEditFormActive(true)\n    }\n\n    const onDeleteDriver = (driver: Driver) => {\n        console.log('inside delete landfill')\n        setDriver(driver)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateDriver = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertDrivers = () => {\n        return (\n            drivers.map(driver =>\n                <tr key={driver.id}>\n                    <td>{driver.name}</td>\n                    <td>{driver.phone_number}</td>\n                    <td>{driver.email}</td>\n\n                    <td>{(driver.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changeDriverStatus(driver)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changeDriverStatus(driver)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editDriver(driver)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteDriver(driver)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateDriver()}>New Driver</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Phone Number</th>\n                            <th>Email</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertDrivers()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditDriverForm driver={driver} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateDriverForm setActive={setCreateFormActive} />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} driver={driver} />}\n\n        </div>\n    )\n}\n\n\nexport default DriverList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport DriverList from '../DriverList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\n// import GoogleMap from '../GoogleMap'\n\n// import './LandfillPage.css'\n\nconst TruckDriverPage = () => {\n\n    const dispatch = useDispatch()\n    const { initializeDrivers } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeDrivers(region)\n        }\n    }, [region])\n\n    const drivers = useSelector((state: State) => state.drivers)\n    console.log(drivers)\n\n    return (\n\n        <div>\n            <DriverList />\n        </div>\n\n    )\n}\n\n\n\nexport default TruckDriverPage","import React, { useState, useEffect } from 'react'\nimport { Depot, NewVehicle} from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateVehicleForm = ({ setActive }: prop) => {\n\n\n    const region = useSelector((state: State) => state.setRegion)\n    const depots = useSelector((state: State) => state.depots)\n\n    if(!region || !depots){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n    }, [])\n\n\n    const [license_number, setLicenseNumber] = useState('')\n    const [size, setSize] = useState(0)\n    const [start_depot, setStartDepot] = useState(depots[0])\n    const [end_depot,setEndDepot] = useState<Depot | undefined>(undefined)\n    const [active, setStatus] = useState(true)\n    \n\n\n    const dispatch = useDispatch()\n    const { createVehicle } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(license_number ==='' || size===0){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const start_depot_id = start_depot.id\n            const end_depot_id = end_depot?.id\n            const new_vehicle: NewVehicle = { license_number, size, 'start_depot': start_depot_id, 'end_depot': end_depot_id, active, 'region_id': region.id }\n            await createVehicle(new_vehicle)\n            M.toast({html: 'Created New Vehicle'})\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n\n    const insertStartingDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (depot.id === start_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n            })\n        )\n    }\n\n    const insertEndDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (end_depot && depot.id === end_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n\n            })\n        )\n    }\n\n    const setStartingDepot = () => {\n        const val = document.getElementById('select1') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setStartDepot(selected_depot)\n        }\n    }\n\n    const setEndingDepot = () => {\n        const val = document.getElementById('select2') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setEndDepot(selected_depot)\n        } else {\n            setEndDepot(undefined)\n        }\n    }\n\n    const onSetSize = (input:string) => {\n\n        if(input){\n            setSize(parseInt(input))\n        }else{\n            setSize(0)\n        }\n    }\n\n  \n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Vehicle</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={license_number} onChange={({ target }) => setLicenseNumber(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">License Number</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={size} onChange={({ target }) => onSetSize(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Size</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <select id=\"select1\" onChange={() => setStartingDepot()}>\n                                    {insertStartingDepotChoices()}\n                                </select>\n                                <label>Starting Depot</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <select id=\"select2\" onChange={() => setEndingDepot()}>\n                                    <option value=\"none\" >Any</option>\n                                    {insertEndDepotChoices()}\n                                </select>\n                                <label>Ending Depot</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateVehicleForm\n\n","import React, { useState, useEffect } from 'react'\nimport { Depot, EditVehicle, Vehicle } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\ninterface prop {\n    vehicle: Vehicle,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditVehicleForm = ({ vehicle, setActive }: prop) => {\n\n    const depots = useSelector((state: State) => state.depots)\n\n    if (!vehicle || !depots) {\n        return (<div></div>)\n    }\n\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n\n    }, [])\n\n\n    const [license_number, setLicenseNumber] = useState(vehicle.license_number)\n    const [size, setSize] = useState(vehicle.size)\n    const [start_depot, setStartDepot] = useState(vehicle.start_depot)\n    const [end_depot, setEndDepot] = useState(vehicle.end_depot)\n    const [active, setStatus] = useState(vehicle.active)\n\n\n\n    const dispatch = useDispatch()\n    const { updateVehicle } = bindActionCreators(actionCreators, dispatch)\n\n\n    const submit = () => {\n        console.log('inside on submit')\n        if (license_number === '' || size === 0) {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = vehicle.id\n            const start_depot_id = start_depot.id\n            let new_vehicle = {} as EditVehicle\n            if (end_depot) {\n                const end_depot_id = end_depot.id\n                new_vehicle = { id, license_number, size, 'start_depot': start_depot_id, 'end_depot': end_depot_id, active, 'region_id': vehicle.region_id }\n            } else {\n                new_vehicle = { id, license_number, size, 'start_depot': start_depot_id, 'end_depot': null, active, 'region_id': vehicle.region_id }\n            }\n\n            updateVehicle(new_vehicle)\n            M.toast({html: 'Updated Vehicle'})\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n    const insertStartingDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (depot.id === start_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n            })\n        )\n    }\n\n    const insertEndDepotChoices = () => {\n        return (\n            depots.map(depot => {\n                if (end_depot && depot.id === end_depot.id) {\n                    return (\n                        <option value={depot.id} key={depot.id} selected={true}>{depot.name}</option>\n                    )\n                } else {\n                    return (\n                        <option value={depot.id} key={depot.id} >{depot.name}</option>\n                    )\n                }\n\n            })\n        )\n    }\n\n    const setStartingDepot = () => {\n        const val = document.getElementById('select1') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setStartDepot(selected_depot)\n        }\n    }\n\n    const setEndingDepot = () => {\n        const val = document.getElementById('select2') as any\n        const depot_id = val.value\n        const selected_depot = depots.find(depot => depot.id === depot_id)\n        if (selected_depot) {\n            setEndDepot(selected_depot)\n        } else {\n            setEndDepot(undefined)\n        }\n    }\n\n    const onSetSize = (input: string) => {\n\n        if (input) {\n            setSize(parseInt(input))\n        } else {\n            setSize(0)\n        }\n    }\n\n\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Vehicle</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={license_number} onChange={({ target }) => setLicenseNumber(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">License Number</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={size} onChange={({ target }) => onSetSize(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Size</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s4\">\n                                <select id=\"select1\" onChange={() => setStartingDepot()}>\n                                    {insertStartingDepotChoices()}\n                                </select>\n                                <label>Starting Depot</label>\n                            </div>\n                            <div className=\"input-field col s4\">\n                                <select id=\"select2\" onChange={() => setEndingDepot()}>\n                                    <option value=\"none\" >Any</option>\n                                    {insertEndDepotChoices()}\n                                </select>\n                                <label>Ending Depot</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\" waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditVehicleForm\n\n","import React, { useState } from 'react'\nimport { EditVehicle, Vehicle } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport CreateVehicleForm from './CreateVehicleForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\nimport EditVehicleForm from './EditVehicleForm'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst VehicleList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateVehicle } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const vehicles = useSelector((state: State) => state.vehicles)\n    const [vehicle, setVehicle] = useState<Vehicle>(vehicles[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changeVehicleStatus = (vehicle: Vehicle) => {\n\n\n\n        const updated_vehicle : EditVehicle = {\n            id: vehicle.id,\n            license_number: vehicle.license_number,\n            size: vehicle.size,\n            start_depot: vehicle.start_depot.id,\n            end_depot: vehicle.end_depot?.id,\n            region_id: vehicle.region_id,\n            active: !vehicle.active\n\n        }\n\n        // const new_vehicle = { ...vehicle }\n        // if (vehicle.active) {\n        //     new_vehicle.active = false\n        // } else {\n        //     new_vehicle.active = true\n        // }\n        updateVehicle(updated_vehicle)\n    }\n\n\n\n    const editVehicle = (vehicle: Vehicle) => {\n        setVehicle(vehicle)\n        setEditFormActive(true)\n    }\n\n    const onDeleteVehicle = (vehicle: Vehicle) => {\n        console.log('inside delete landfill')\n        setVehicle(vehicle)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateVehicle = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertVehicles = () => {\n        return (\n            vehicles.map(vehicle =>\n                <tr key={vehicle.id}>\n                    <td>{vehicle.license_number}</td>\n                    <td>{vehicle.size}</td>\n                    <td>{vehicle.start_depot.name}</td>\n                    { (vehicle.end_depot) ? <td>{vehicle.end_depot?.name}</td> : <td>Any</td>}\n                    \n                    <td>{(vehicle.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changeVehicleStatus(vehicle)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changeVehicleStatus(vehicle)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editVehicle(vehicle)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteVehicle(vehicle)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateVehicle()}>New Vehicle</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>License Number</th>\n                            <th>Size</th>\n                            <th>Start Depot</th>\n                            <th>End Depot</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertVehicles()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditVehicleForm vehicle={vehicle} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateVehicleForm setActive={setCreateFormActive} />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} vehicle={vehicle} />}\n\n        </div>\n    )\n}\n\n\nexport default VehicleList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import VehicleList from '../VehicleList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport VehicleList from '../VehicleList'\n\n\nconst VehiclePage = () => {\n\n    const dispatch = useDispatch()\n    const { initializeVehicles } = bindActionCreators(actionCreators, dispatch)\n    const { initializeDepots } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeVehicles(region)\n            initializeDepots(region)\n        }\n    }, [region])\n\n\n    return (\n\n        <div>\n            <VehicleList />\n        </div>\n\n    )\n}\n\n\n\nexport default VehiclePage","import React, { useState, useEffect } from 'react'\nimport { NewOrder, Address } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng, Dumpster_Sizes } from '../types'\nimport { DUMPSTER_SIZES, dumpster_sizes } from '../utils/enums'\nimport './OrderPage/OrderPage.css'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateOrderForm = ({ setActive }: prop) => {\n\n    const dispatch = useDispatch()\n    const { createOrder } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if (!region) {\n        return (<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n\n\n        // Drop Off Date Picker Initialization\n        const drop_off_date_picker = document.getElementById('drop-off-date')\n        if (drop_off_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(drop_off_date_picker, { setDefaultDate: true, onSelect: (date) => onDropOffDateChange(date), container: elem })\n        }\n\n\n        // Pickup Date Picker Initialization\n        const pickup_date_picker = document.getElementById('pickup-date')\n        if (pickup_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(pickup_date_picker, { setDefaultDate: true, onSelect: (date) => onPickupDateChange(date), container: elem })\n        }\n\n\n\n\n    }, [])\n\n\n\n\n\n    const [name, setName] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [zipcode, setZipcode] = useState('')\n    const [latitude, setLatitude] = useState('')\n    const [longitude, setLongitude] = useState('')\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n    const [dumpster_size, setDumpsterSize] = useState(DUMPSTER_SIZES.TEN)\n    const [email, setEmail] = useState('')\n    const [phone_number, setPhoneNumber] = useState('')\n    const [drop_off_date, setDropOffDate] = useState('')\n    const [pickup_date, setPickupDate] = useState('')\n    const [special_instructions, setInstructions] = useState('')\n    const [delivery_completed, setDeliveryStatus] = useState(false)\n    const [pickup_completed, setPickupStatus] = useState(false)\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        } else {\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n    const insertDumpsterSizeChoices = () => {\n        return (\n            dumpster_sizes.map(size => {\n                return (\n                    <option value={size} key={size}>{size}</option>\n                )\n\n            })\n        )\n    }\n\n\n\n    const onDumpsterSelect = (dumpster_size: string) => {\n        console.log('inside on dumpser select')\n        console.log(dumpster_size)\n        setDumpsterSize(parseInt(dumpster_size))\n\n    }\n\n    const onPickupDateChange = (date: Date) => {\n        setPickupDate(date.toDateString())\n    }\n\n    const onDropOffDateChange = (date: Date) => {\n        setDropOffDate(date.toDateString())\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if (name === '' || phone_number==='' || email==='' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '' || drop_off_date === '' || pickup_date==='') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const new_order: NewOrder = { name, street, city, email, phone_number, dumpster_size, 'delivery_date': drop_off_date, pickup_date, state, special_instructions, delivery_completed, pickup_completed, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), 'region_id': region.id }\n            console.log(new_order)\n            await createOrder(new_order)\n            M.toast({ html: 'Created New Order' })\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Order</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"phone-number\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"phone-number\" className=\"active\">Phone Number</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"email\" type=\"email\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"email\" className=\"active\">Email</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col l3\">\n\n                                <select id=\"dumpster_size_selector\" onChange={({ target }) => onDumpsterSelect(target.value)}>\n                                    <option value=\"\" disabled selected>Dumpster Size</option>\n                                    {insertDumpsterSizeChoices()}\n                                </select>\n                                <label htmlFor=\"dumpster_size_selector\" className=\"active\">Dumpster Size</label>\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" id=\"drop-off-date\" placeholder='Drop Off Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Drop Off Date</label>\n\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" id=\"pickup-date\" placeholder='Pickup Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Pickup Date</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col l12\">\n                                <textarea id=\"textarea1\" className=\"materialize-textarea\" onChange={({ target }) => setInstructions(target.value)}></textarea>\n                                <label htmlFor=\"textarea1\">Special Instructions</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            <div className=\"col\">\n                                {(delivery_completed) ? <a className=\"green btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Incomplete</a>}\n                            </div>\n                            <div className=\"col\">\n                                {(pickup_completed) ? <a className=\"green btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Incomplete</a>}\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateOrderForm\n\n","import React, { useEffect, useState } from 'react'\nimport { LatLng, Order } from '../types'\n\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n    order: Order\n}\n\n\nconst OrderInfoForm = ({ setActive, order }: prop) => {\n\n    useEffect(() => {\n\n        const modal = document.querySelector('#info-form-modal')\n        if (modal) {\n            const instance = M.Modal.init(modal, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n\n    }, [])\n\n\n\n\n    return (\n\n        <div id=\"info-form-modal\" className=\"modal\">\n            <div className=\"modal-content\">\n                <h4>Order Info</h4>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"order-name\">Name</label>\n                        <div id=\"order-name\"> {order.name}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"phone-number\">Phone Number</label>\n                        <div id=\"phone-number\"> {order.phone_number}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"email\">Email</label>\n                        <div id=\"email\"> {order.email}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"street\">Street</label>\n                        <div id=\"street\"> {order.street}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"city\">City</label>\n                        <div id=\"city\"> {order.city}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label htmlFor=\"state\">State</label>\n                        <div id=\"state\"> {order.state}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label >Zipcode</label>\n                        <div > {order.zipcode}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Latitude</label>\n                        <div > {order.latitude}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Longitude</label>\n                        <div > {order.longitude}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label >Dumpster Size</label>\n                        <div > {order.dumpster_size}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Delivery Date</label>\n                        <div > {order.delivery_date}</div>\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Pickup Date</label>\n                        <div > {order.pickup_date}</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l12\" >\n                        {(order.special_instructions !== '') ?\n                            <div><label >Special Instructions</label>\n                                <div > {order.special_instructions}</div></div> : <div></div>}\n\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col l3\" >\n                        <label >Delivery Status</label>\n                        {(order.delivery_completed) ? <div>Completed</div> : <div>Incomplete</div>}\n                    </div>\n                    <div className=\"col l3\" >\n                        <label >Pikcup Status</label>\n                        {(order.pickup_completed) ? <div>Completed</div> : <div>Incomplete</div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}\n\n\nexport default OrderInfoForm","import React, { useState, useEffect } from 'react'\nimport { NewOrder, Address, Order } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\nimport { dumpster_sizes } from '../utils/enums'\nimport './OrderPage/OrderPage.css'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n    order: Order\n}\n\n\nconst EditOrderForm = ({ setActive, order }: prop) => {\n\n    const dispatch = useDispatch()\n    const { updateOrder } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if (!region) {\n        return (<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n        const elems = document.querySelectorAll('select')\n        M.FormSelect.init(elems)\n\n\n        // Drop Off Date Picker Initialization\n        const drop_off_date_picker = document.getElementById('drop-off-date')\n        if (drop_off_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(drop_off_date_picker, { setDefaultDate: true, onSelect: (date) => onDropOffDateChange(date), container: elem })\n        }\n\n\n        // Pickup Date Picker Initialization\n        const pickup_date_picker = document.getElementById('pickup-date')\n        if (pickup_date_picker) {\n            const elem = document.body\n            console.log(elem)\n            M.Datepicker.init(pickup_date_picker, { setDefaultDate: true, onSelect: (date) => onPickupDateChange(date), container: elem })\n        }\n\n\n\n\n    }, [])\n\n\n\n\n\n    const [name, setName] = useState(order.name)\n    const [street, setStreet] = useState(order.street)\n    const [city, setCity] = useState(order.city)\n    const [state, setState] = useState(order.state)\n    const [zipcode, setZipcode] = useState(order.zipcode.toString())\n    const [latitude, setLatitude] = useState(order.latitude.toString())\n    const [longitude, setLongitude] = useState(order.longitude.toString())\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n    const [dumpster_size, setDumpsterSize] = useState(order.dumpster_size)\n    const [email, setEmail] = useState(order.email)\n    const [phone_number, setPhoneNumber] = useState(order.phone_number)\n    const [drop_off_date, setDropOffDate] = useState(order.delivery_date)\n    const [pickup_date, setPickupDate] = useState(order.pickup_date)\n    const [special_instructions, setInstructions] = useState(order.special_instructions)\n    const [delivery_completed, setDeliveryStatus] = useState(order.delivery_completed)\n    const [pickup_completed, setPickupStatus] = useState(order.pickup_completed)\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        } else {\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n    const insertDumpsterSizeChoices = () => {\n        return (\n            dumpster_sizes.map(size => {\n                return (\n                    <option value={size} key={size}>{size}</option>\n                )\n\n            })\n        )\n    }\n\n\n\n    const onDumpsterSelect = (dumpster_size: string) => {\n        console.log('inside on dumpser select')\n        console.log(dumpster_size)\n        setDumpsterSize(parseInt(dumpster_size))\n\n    }\n\n    const onPickupDateChange = (date: Date) => {\n        setPickupDate(date.toDateString())\n    }\n\n    const onDropOffDateChange = (date: Date) => {\n        setDropOffDate(date.toDateString())\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if (name === '' || phone_number==='' || email==='' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '' || drop_off_date === '' || pickup_date==='') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const updated_order: Order = {'id': order.id ,name, street, city, email, phone_number, dumpster_size, 'delivery_date': drop_off_date, pickup_date, state, special_instructions, delivery_completed, pickup_completed, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), 'region_id': region.id, 'user_id': order.user_id }\n            await updateOrder(updated_order)\n            M.toast({ html: 'Updated Order' })\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Order</h4>\n                    <form className=\"col s12\" >\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"phone-number\" type=\"text\" className=\"validate\" value={phone_number} onChange={({ target }) => setPhoneNumber(target.value)} />\n                                <label htmlFor=\"phone-number\" className=\"active\">Phone Number</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"email\" type=\"email\" className=\"validate\" value={email} onChange={({ target }) => setEmail(target.value)} />\n                                <label htmlFor=\"email\" className=\"active\">Email</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col l3\">\n\n                                <select id=\"dumpster_size_selector\" value={order.dumpster_size} onChange={({ target }) => onDumpsterSelect(target.value)}>\n                                    <option  disabled selected>Dumpster Size</option>\n                                    {insertDumpsterSizeChoices()}\n                                </select>\n                                <label htmlFor=\"dumpster_size_selector\" className=\"active\">Dumpster Size</label>\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" value={drop_off_date} id=\"drop-off-date\" placeholder='Drop Off Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Drop Off Date</label>\n\n                            </div>\n                            <div className=\"col l3\">\n                                <input type=\"text\" className=\"datepicker\" value={pickup_date} id=\"pickup-date\" placeholder='Pickup Date' />\n                                <label htmlFor=\"pickup-date\" className=\"active\">Pickup Date</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col l12\">\n                                <textarea id=\"textarea1\" className=\"materialize-textarea\" onChange={({ target }) => setInstructions(target.value)}></textarea>\n                                <label htmlFor=\"textarea1\">Special Instructions</label>\n                            </div>\n                        </div>\n                        <div className=\"row left-align\" >\n                            <div className=\"col\">\n                                {(delivery_completed) ? <a className=\"green btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setDeliveryStatus(!delivery_completed)}>Delivery Incomplete</a>}\n                            </div>\n                            <div className=\"col\">\n                                {(pickup_completed) ? <a className=\"green btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Completed</a> : <a className=\"red lighten-1 btn-small\" onClick={() => setPickupStatus(!pickup_completed)}>Pickup Incomplete</a>}\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat \" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditOrderForm\n\n","import React, { useState } from 'react'\nimport { Order } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport CreateOrderForm from './CreateOrderForm'\nimport OrderInfoForm from './OrderInfoForm'\n\n\nimport M from 'materialize-css'\nimport EditOrderForm from './EditOrderForm'\nimport ConfirmDelete from './ConfirmDelete'\n\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst OrderList = () => {\n\n    const dispatch = useDispatch()\n\n \n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const orders = useSelector((state: State) => state.orders)\n    const [order, setOrder] = useState<Order>(orders[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [orderInfoFormActive, setOrderInfoFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    // const changeOrderStatus = (order: Order) => {\n\n    //     const new_order = { ...order }\n    //     if (order.active) {\n    //         new_order.active = false\n    //     } else {\n    //         new_order.active = true\n    //     }\n    //     updateOrder(new_order)\n    // }\n\n\n\n    const editOrder = (order: Order) => {\n        setOrder(order)\n        setEditFormActive(true)\n    }\n\n    const info = (order: Order) => {\n        setOrder(order)\n        setOrderInfoFormActive(true)\n    }\n\n    const onDeleteOrder = (order: Order) => {\n        console.log('inside delete landfill')\n        setOrder(order)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreateOrder = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertOrders = () => {\n        return (\n            orders.map(order =>\n                <tr key={order.id}>\n                    <td>{order.name}</td>\n                    <td>{order.dumpster_size}</td>\n                    <td>{order.delivery_date}</td>\n                    <td>{order.pickup_date}</td>\n                    <td>{order.phone_number}</td>\n        \n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editOrder(order)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeleteOrder(order)}><i className=\"material-icons\">delete</i></button></td>\n                    <td> <button className=\"btn-floating btn green\" onClick={() => info(order)}><i className=\"material-icons\">info_outline</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreateOrder()}>New Order</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Customer Name</th>\n                            <th>Dumpster Size</th>\n                            <th>Delivery Date</th>\n                            <th>Pickup Date </th>\n                            <th>Phone Number</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertOrders()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditOrderForm order={order} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateOrderForm setActive={setCreateFormActive} />}\n            {orderInfoFormActive && <OrderInfoForm setActive={setOrderInfoFormActive} order={order}/>}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} order={order} />}\n\n        </div>\n    )\n}\n\n\nexport default OrderList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport OrderList from '../OrderList'\n// import OrderList from '../OrderList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport './OrderPage.css'\nimport GoogleMap from '../GoogleMap'\nimport { isRegExp } from 'util'\nimport styled from 'styled-components'\nimport { Depot, Landfill } from '../../types'\n// import GoogleMap from '../GoogleMap'\n\n// import './OrderPage.css'\n\nconst Spacing = styled.div`\n  margin-top: 2em;\n`\n\nconst OrderStyle = styled.div`\nmargin-bottom: 50px;\n`\n\nconst OrderPage = () => {\n    const dispatch = useDispatch()\n    const { initializeOrders, initializeLandfills, initializeDepots } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    const [show_depots, setDepots] = useState<Depot[] | undefined>(undefined)\n    const [show_landfills, setLandfills] = useState<Landfill[] | undefined>(undefined)\n\n    useEffect(() => {\n        console.log('inside useEffect')\n        const elems = document.querySelectorAll('.datepicker')\n        const date = new Date()\n        M.Datepicker.init(elems, { defaultDate: date, setDefaultDate: true, onSelect: (date) => onDateChange(date) })\n        if (region) {\n\n            // const show_landfill_box = document.getElementById('checkbox')\n            // if(show_landfill_box){\n            //     show_landfill_box.checked = false\n            // }\n\n            initializeOrders(region, date.toDateString())\n            initializeDepots(region)\n            initializeLandfills(region)\n\n        }\n\n    }, [region])\n\n    const orders = useSelector((state: State) => state.orders)\n    const landfills = useSelector((state: State) => state.landfills)\n    const depots = useSelector((state: State) => state.depots)\n\n\n    const onDateChange = async (date: Date) => {\n        console.log('on date change')\n        const date_string = date.toDateString()\n\n        console.log(date_string)\n        if (region) {\n            await initializeOrders(region, date_string)\n\n        }\n\n    }\n\n    const displayLandfills = () => {\n        if (!show_landfills) {\n            setLandfills(landfills)\n        }else{\n            setLandfills(undefined)\n        }\n    }\n\n    const displayDepots = () => {\n        if (!show_depots) {\n            setDepots(depots)\n        }else{\n            setDepots(undefined)\n        }\n    }\n\n    return (\n\n        <div>\n            <div className=\"row\">\n                <div className=\"col l3\">\n                    <label>\n                        <input type=\"checkbox\" id=\"show-landfill\" onChange={() => displayLandfills()} />\n                        <span>Display Landfills</span>\n                    </label>\n                </div>\n                <div className=\"col l3\">\n                    <label>\n                        <input type=\"checkbox\" onChange={() => displayDepots()}/>\n                        <span>Display Depots</span>\n                    </label>\n                </div>\n            </div>\n            <GoogleMap orders={orders} landfills={show_landfills} depots={show_depots}/>\n            <br />\n            <Spacing>\n                <div className=\"row\">\n                    <div className=\"col l3\">\n                        <input type=\"text\" className=\"datepicker\" placeholder='Select Date' />\n                    </div>\n                </div>\n            </Spacing>\n            <OrderStyle>\n                <OrderList />\n            </OrderStyle>\n        </div>\n\n    )\n}\n\n\n\nexport default OrderPage","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport styled from 'styled-components'\nimport { actionCreators, State } from '../state'\nimport './RegionSelector.css'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\n\n\n\nconst RegionSelector = () => {\n\n    console.log('inside Region Selector Component')\n\n    const dispatch = useDispatch()\n    const { initializeRegions,setRegion, createRegion, deleteRegion } = bindActionCreators(actionCreators, dispatch)\n\n\n    const [new_region, setNewRegion] = useState('')\n    const user_token = useSelector((state: State) => state.userToken)\n    const regions = useSelector((state: State) => state.regions)\n    const set_region = useSelector((state: State) => state.setRegion)\n\n\n    useEffect(() => {\n        // M.AutoInit()\n        const elems = document.querySelectorAll('.dropdown-trigger')\n        M.Dropdown.init(elems, { constrainWidth: false })\n\n        const add_region_modal = document.querySelector('#addRegionModal')\n        if (add_region_modal) {\n            M.Modal.init(add_region_modal)\n        }\n\n        console.log('inside useEffect for Region selector')\n        console.log(regions)\n\n\n        if (user_token) {\n            console.log(user_token)\n            console.log('regions', regions)\n            if (regions.length < 1) {\n                console.log('inside initialize regions')\n                initializeRegions()\n            } else if(!set_region){\n                console.log('inside set region')\n                setRegion(regions[0])\n            }\n\n        }\n\n    }, [regions])\n\n\n    const insertRegionTabs = () => {\n        return (\n            regions?.map(region =>\n                <li key={region.id}><a href=\"#!\" onClick={() => setRegion(region)}>{region.name}</a></li>\n            )\n        )\n    }\n\n    const onCreateRegion = async () => {\n        console.log('inside createRegion')\n        const new_region_object = { name: new_region }\n        await createRegion(new_region_object)\n        setNewRegion('')\n        \n    }\n\n    const openAddRegionModal = () => {\n        const modal_elem = document.getElementById('addRegionModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.open()\n        }\n    }\n\n    const onDeleteRegion = async () => {\n        console.log('inside onDeleteRegion')\n        if(set_region){\n            await deleteRegion(set_region)\n            setRegion(regions[0])\n        }\n    }\n\n\n    return (\n        <div>\n            <TopSpacing >\n                <div className=\"row right-align\">\n                    <div className=\"col offset l10 right-align\">\n                        <a className='dropdown-trigger btn' href='#' data-target='dropdown1'>{set_region?.name}</a>\n                    </div>\n                    <div className=\"col right-align\">\n                        <button className='btn-floating' onClick={openAddRegionModal}><i className=\"material-icons\">add</i></button>\n                    </div>\n                    {\n                        (set_region?.name !== 'Default') && <div className=\"col right-align\">\n                            <button className='btn-floating black' onClick={() => onDeleteRegion()}><i className=\"material-icons\">delete</i></button>\n                        </div>\n                    }\n\n\n                </div>\n            </TopSpacing>\n\n\n            <ul id='dropdown1' className='dropdown-content'>\n                {insertRegionTabs()}\n            </ul>\n\n\n            <div id=\"addRegionModal\" className=\"modal\" style={{ width: 30 }}>\n                <div className=\"modal-content\">\n                    <h6>Insert Region</h6>\n                    <input value={new_region} placeholder=\"New Region\" onChange={({ target }) => setNewRegion(target.value)} />\n                    <br />\n                    <div className=\"right row\">\n                        <div className=\"col s2\">\n                            <button className=\"btn modal-close\" onClick={() => onCreateRegion()}>Submit</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div>\n\n    )\n}\n\n\nexport default RegionSelector\n\n","import React, { useState, useEffect } from 'react'\nimport { Depot, Address } from '../types'\nimport { actionCreators } from '../state'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    depot: Depot,\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst EditDepotForm = ({ depot, setActive }: prop) => {\n\n\n    if (!depot) {\n        return (<div></div>)\n    }\n\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState(depot.name)\n    const [street, setStreet] = useState(depot.street)\n    const [city, setCity] = useState(depot.city)\n    const [state, setState] = useState(depot.state)\n    const [zipcode, setZipcode] = useState(depot.zipcode.toString())\n    const [latitude, setLatitude] = useState(depot.latitude.toString())\n    const [longitude, setLongitude] = useState(depot.longitude.toString())\n    const [active, setStatus] = useState(depot.active)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n    const dispatch = useDispatch()\n    const { updateDepot } = bindActionCreators(actionCreators, dispatch)\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: `${response.message}` })\n        }\n        const lat_lng = response.data as LatLng\n        setCoord(lat_lng)\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.open()\n        }\n    }\n\n\n\n    const submit = () => {\n        console.log('inside on submit')\n\n        if (name === '' || street === '' || city === '' || state === '' || zipcode === '' || latitude === '' || longitude === '') {\n            M.toast({ html: 'All fields need to be filled out' })\n        } else {\n            const id = depot.id\n            const new_depot: Depot = { id, name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'user_id': depot.user_id, 'region_id': depot.region_id }\n            updateDepot(new_depot)\n            M.toast({ html: 'Updated Depot' })\n            const modal_elem = document.getElementById('modal1')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Depot</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)} />\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EditDepotForm\n\n","import React, { useState, useEffect } from 'react'\nimport { NewDepot, Address } from '../types'\nimport { actionCreators, State } from '../state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport geocode from '../services/geocode'\nimport { LatLng } from '../types'\n\ninterface prop {\n    setActive: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\n\nconst CreateDepotForm = ({setActive }: prop) => {\n\n    const dispatch = useDispatch()\n    const { createDepot } = bindActionCreators(actionCreators, dispatch)\n    const region = useSelector((state: State) => state.setRegion)\n\n    if(!region){\n        return(<div></div>)\n    }\n\n    useEffect(() => {\n\n        // M.AutoInit()\n        console.log('inside useEffect')\n        const modal_1 = document.querySelector('#modal1')\n        if (modal_1) {\n            const instance = M.Modal.init(modal_1, { onCloseEnd: () => setActive(false) })\n            instance.open()\n        }\n        const geo_modal = document.querySelector('#geoModal')\n        if (geo_modal) {\n            M.Modal.init(geo_modal)\n        }\n\n    }, [])\n\n\n    const [name, setName] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [zipcode, setZipcode] = useState('')\n    const [latitude, setLatitude] = useState('')\n    const [longitude, setLongitude] = useState('')\n    const [active, setStatus] = useState(false)\n    const [lat_lng, setCoord] = useState<LatLng>({ lat: 0.0, lng: 0.0 })\n\n\n\n\n\n\n\n    const geoLocate = async () => {\n        console.log('inside geoLocate')\n        const address: Address = {\n            street,\n            city,\n            state,\n            'zipcode': parseInt(zipcode)\n        }\n        const response = await geocode.get(address)\n        console.log(response)\n        if (response.status === 'ERROR') {\n            M.toast({ html: 'Was not able to geolocate this location' })\n        }else{\n            const lat_lng = response.data as LatLng\n            setCoord(lat_lng)\n            const modal_elem = document.getElementById('geoModal')\n            if (modal_elem) {\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.open()\n            }\n        }\n\n    }\n\n\n\n    const submit = async () => {\n        console.log('inside on submit')\n\n        if(name==='' || street==='' || city==='' || state==='' || zipcode==='' || latitude==='' || longitude===''){\n            M.toast({html: 'All fields need to be filled out'})\n        }else{\n            const new_depot: NewDepot = { name, street, city, state, 'zipcode': parseInt(zipcode), 'latitude': parseFloat(latitude), 'longitude': parseFloat(longitude), active, 'region_id':region.id }\n            console.log(new_depot)\n            await createDepot(new_depot)\n            M.toast({html: 'Created New Depot'})\n            const modal_elem = document.getElementById('modal1')\n            if(modal_elem){\n                const instance = M.Modal.getInstance(modal_elem)\n                instance.close()\n            }\n            setActive(false)\n        }\n\n\n    }\n\n    const assignLatLng = () => {\n        setLatitude(lat_lng.lat.toFixed(3))\n        setLongitude(lat_lng.lng.toFixed(3))\n        const modal_elem = document.getElementById('geoModal')\n        if (modal_elem) {\n            const instance = M.Modal.getInstance(modal_elem)\n            instance.close()\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>Depot</h4>\n                    <form className=\"col s12\">\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"name\" type=\"text\" className=\"validate\" value={name} onChange={({ target }) => setName(target.value)}/>\n                                <label htmlFor=\"name\" className=\"active\">Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"street\" type=\"text\" className=\"validate\" value={street} onChange={({ target }) => setStreet(target.value)} />\n                                <label htmlFor=\"street\" className=\"active\">Street</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"city\" type=\"text\" className=\"validate\" value={city} onChange={({ target }) => setCity(target.value)} />\n                                <label htmlFor=\"city\" className=\"active\">City</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"state\" type=\"text\" className=\"validate\" value={state} onChange={({ target }) => setState(target.value)} />\n                                <label htmlFor=\"state\" className=\"active\">State</label>\n                            </div>\n\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"zipcode\" type=\"number\" className=\"validate\" value={zipcode} onChange={({ target }) => setZipcode(target.value)} />\n                                <label htmlFor=\"zipcode\" className=\"active\">Zipcode</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"latitude\" type=\"text\" className=\"validate\" value={latitude} onChange={({ target }) => setLatitude(target.value)} />\n                                <label htmlFor=\"latitude\" className=\"active\">Latitude</label>\n                            </div>\n                            <div className=\"input-field col s3\">\n                                <input id=\"longitude\" type=\"text\" className=\"validate\" value={longitude} onChange={({ target }) => setLongitude(target.value)} />\n                                <label htmlFor=\"longitude\" className=\"active\">Longitude</label>\n                            </div>\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"btn-flat offset-s6\" onClick={geoLocate}>Geolocate</a>\n                        </div>\n                        <div className=\"row left-align\" >\n                            {(active) ? <a className=\"red btn-small\" onClick={() => setStatus(!active)}>Deactivate</a> : <a className=\"green lighten-1 btn-small\" onClick={() => setStatus(!active)}>Activate</a>}\n\n                        </div>\n                        <div className=\"row right-align\">\n                            <a className=\"waves-effect waves-teal btn-flat\" onClick={() => submit()}>Submit</a>\n                        </div>\n                    </form>\n                    <div id=\"geoModal\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h6>Geolocation</h6>\n                            <div >Latitude: {lat_lng.lat.toFixed(3)} </div>\n                            <div>Longitude: {lat_lng.lng.toFixed(3)}</div>\n                            <br />\n                            <div className=\"right row\">\n                                <div className=\"col s5=4\">\n                                    Asign Lat Lng Values\n                                </div>\n                                <div className=\"col s2\">\n                                    <button className=\"btn\" onClick={assignLatLng}>Submit</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CreateDepotForm\n\n","import React, { useState } from 'react'\nimport { Depot } from '../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../state'\nimport { useEffect } from 'react'\nimport styled from 'styled-components'\nimport EditDepotForm from './EditDepotForm'\nimport CreateDepotForm from './CreateDepotForm'\nimport ConfirmDelete from './ConfirmDelete'\n\nimport M from 'materialize-css'\n\nconst TopSpacing = styled.div`\n  margin-top: 2em;\n`\n\nconst DepotList = () => {\n\n    const dispatch = useDispatch()\n\n    const { updateDepot } = bindActionCreators(actionCreators, dispatch)\n\n\n    useEffect(() => {\n        M.AutoInit()\n\n    }, [])\n    \n    const depots = useSelector((state: State) => state.depots)\n    const [depot, setdepot] = useState<Depot>(depots[0])\n    const [editFormActive, setEditFormActive] = useState(false)\n    const [createFormActive, setCreateFormActive] = useState(false)\n    const [confirmDeleteActive, setConfirmDeleteActive] = useState(false)\n\n\n\n    const changedepotStatus = (depot: Depot) => {\n        console.log('inside on click')\n        const new_depot = { ...depot }\n        if (depot.active) {\n            new_depot.active = false\n        } else {\n            new_depot.active = true\n        }\n        updateDepot(new_depot)\n    }\n\n\n\n    const editdepot = (depot: Depot) => {\n        setdepot(depot)\n        setEditFormActive(true)\n    }\n\n    const onDeletedepot = (depot: Depot) => {\n        console.log('inside delete depot')\n        setdepot(depot)\n        setConfirmDeleteActive(true)\n\n    }\n\n    const onCreatedepot = () => {\n        setCreateFormActive(true)\n    }\n\n\n    const insertdepots = () => {\n        return (\n            depots.map(depot =>\n                <tr key={depot.id}>\n                    <td>{depot.name}</td>\n                    <td>{depot.street}</td>\n                    <td>{depot.city}</td>\n                    <td>{depot.zipcode}</td>\n                    <td>{depot.latitude}</td>\n                    <td>{depot.longitude}</td>\n                    <td>{(depot.active) ? <p><label><input type=\"checkbox\" checked={true} onChange={() => changedepotStatus(depot)} /><span>Active</span></label> </p> : <p><label><input type=\"checkbox\" checked={false} onChange={() => changedepotStatus(depot)} /><span>Inactive</span></label> </p>}</td>\n                    <td> <button className=\"btn-floating btn waves-light red\" onClick={() => editdepot(depot)}><i className=\"material-icons\">mode_edit</i></button></td>\n                    <td> <button className=\"btn-floating btn black\" onClick={() => onDeletedepot(depot)}><i className=\"material-icons\">delete</i></button></td>\n                </tr>\n            )\n        )\n    }\n\n\n\n\n    return (\n        <div>\n            <div className=\"row \">\n                <br></br>\n                <div className=\"col offset-s10\">\n                    <button className='btn black offset-s10' onClick={() => onCreatedepot()}>New depot</button>\n                </div>\n\n            </div>\n            <TopSpacing>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Street</th>\n                            <th>City</th>\n                            <th>Zipcode</th>\n                            <th>Latitude</th>\n                            <th>Longitude</th>\n                            <th>Active</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {insertdepots()}\n                    </tbody>\n                </table>\n            </TopSpacing>\n            {editFormActive && <EditDepotForm depot={depot} setActive={setEditFormActive}  />}\n            {createFormActive && <CreateDepotForm setActive={setCreateFormActive}  />}\n            {confirmDeleteActive && <ConfirmDelete setActive={setConfirmDeleteActive} depot={depot} />}\n\n        </div>\n    )\n}\n\n\nexport default DepotList","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport DepotList from '../DepotList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport GoogleMap from '../GoogleMap'\n\n\n\nconst DepotPage = () => {\n    console.log('inside depot page')\n\n    const dispatch = useDispatch()\n    const { initializeDepots } = bindActionCreators(actionCreators, dispatch)\n\n    const region = useSelector((state: State) => state.setRegion)\n\n    useEffect(() => {\n        if(region){\n            initializeDepots(region)\n        }\n    }, [region])\n\n    const depots = useSelector((state: State) => state.depots)\n\n    return (\n\n        <div>\n            <GoogleMap depots={depots} />\n            <DepotList />\n        </div>\n\n    )\n}\n\n\n\nexport default DepotPage","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import VehicleList from '../VehicleList'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators, State } from '../../state'\nimport VehicleList from '../VehicleList'\n\n\nconst VehiclePage = () => {\n\n\n    const region = useSelector((state: State) => state.setRegion)\n\n\n    const computeRoutes = () => {\n        console.log('inside compute routes')\n    }\n\n\n\n    return (\n\n        <div>\n            <a className=\"btn\" onClick={() => computeRoutes()}>Compute Routes</a>\n        </div>\n\n    )\n}\n\n\n\nexport default VehiclePage","import React from 'react'\nimport SideNav from '../SideNav/SideNav'\nimport LandfillPage from '../LandfillPage/LandfillPage'\nimport TruckDriverPage from '../TruckDriverPage/TruckDriverPage'\nimport VehiclePage from '../VehiclePage/VehiclePage'\nimport OrderPage from '../OrderPage/OrderPage'\nimport './HomePage.css'\nimport RegionSelector from '../RegionSelector'\nimport { Route, Routes } from 'react-router-dom'\nimport DepotPage from '../DepotPage/DepotPage'\nimport RoutePage from '../RoutePage/RoutePage'\n// import { actionCreators, State } from '../../state'\n// import { bindActionCreators } from 'redux'\n// import { useDispatch, useSelector } from 'react-redux'\n\nconst HomePage = () => {\n\n    // const dispatch = useDispatch()\n    // const { initializeRegions, setRegion } = bindActionCreators(actionCreators, dispatch)\n    // const regions = useSelector((state: State) => state.regions)\n    // const set_region = useSelector((state: State) => state.setRegion)\n\n    // useEffect(() => {\n    //     initializeRegions()\n    //     if(!set_region){\n    //         setRegion(regions[0])\n    //     }\n       \n    // },[regions])\n\n    return (<div>\n        <SideNav />\n        <main>\n            <div className=\"container\">\n                <RegionSelector />\n                <Routes>\n                    <Route path=\"/route\" element={<RoutePage />} />\n                    <Route path=\"/order\" element={<OrderPage />} />\n                    <Route path=\"/vehicle\" element={<VehiclePage />} />\n                    <Route path=\"/depot\" element={<DepotPage />} />\n                    <Route path=\"/driver\" element={<TruckDriverPage />} />\n                    <Route path=\"/landfill\" element={<LandfillPage />} />\n                    <Route path=\"/\" element={<LandfillPage />} />\n                </Routes>\n\n            </div>\n        </main>\n\n\n    </div>)\n}\n\nexport default HomePage\n","import React, { useEffect } from 'react'\nimport './App.css'\nimport Login from './components/LoginPage/Login'\nimport {\n    BrowserRouter as Router, Route, Routes\n} from 'react-router-dom'\nimport { actionCreators, State } from './state'\nimport { useDispatch, useSelector } from 'react-redux'\nimport HomePage from './components/HomePage/HomePage'\nimport { bindActionCreators } from 'redux'\nimport { setToken } from './services/config'\nimport { Region, UserToken } from './types'\n\n\n\nfunction App() {\n\n    const user_token = useSelector((state: State) => state.userToken)\n    const dispatch = useDispatch()\n    const { setUserToken, setRegion } = bindActionCreators(actionCreators, dispatch)\n\n    useEffect(() => {\n        const user_token = window.localStorage.getItem('user_token')\n        // const region = window.localStorage.getItem('region')\n        if (user_token) {\n            console.log('inside setting the user token')\n            const parsed_user_token: UserToken = JSON.parse(user_token)\n            setUserToken(parsed_user_token)\n            // if(region){\n            //     const parsed_region: Region = JSON.parse(region)\n            //     setRegion(parsed_region)\n            // }\n        }\n    }, [])\n\n\n    return (\n        <Router>\n            <div className=\"App\">\n\n                <Routes>\n                    {!user_token && <Route path=\"/*\" element={<Login />} />}\n\n                    {user_token && <Route path=\"/*\" element={<HomePage />} />}\n\n                </Routes>\n\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './state/store'\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}